var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdjacencyList.html",[0,0.093,1,2.299]],["body/classes/AdjacencyList.html",[0,0.13,1,3.877,2,1.254,3,0.286,4,0.253,5,0.253,6,4.309,7,3.831,8,2.761,9,3.589,10,0.502,11,0.019,12,2.413,13,3.189,14,0.286,15,0.017,16,0.017]],["title/classes/Airport.html",[0,0.093,17,2.128]],["body/classes/Airport.html",[0,0.104,2,1.01,3,0.231,4,0.204,5,0.204,10,0.405,11,0.019,14,0.231,15,0.015,16,0.015,17,3.129,18,3.47,19,3.38,20,2.859,21,0.537,22,1.401,23,4.116,24,1.832,25,4.116,26,4.116,27,0.682,28,1.013,29,1.013,30,4.054,31,4.054,32,2.697,33,4.054,34,4.054,35,3.086]],["title/classes/AirportRepository.html",[0,0.093,36,2.504]],["body/classes/AirportRepository.html",[0,0.081,2,0.78,3,0.178,4,0.158,5,0.158,8,2.017,10,0.567,11,0.02,14,0.178,15,0.012,16,0.012,17,3.333,20,2.881,21,0.415,22,1.173,24,0.962,27,0.561,28,0.833,29,0.909,35,2.384,36,3.085,37,2.681,38,3.959,39,3.966,40,1.526,41,3.922,42,0.962,43,3.402,44,3.959,45,3.132,46,1.113,47,1.001,48,1.113,49,1.711,50,4.461,51,2.681,52,3.085,53,2.681,54,1.526,55,3.132,56,2.681,57,2.162,58,3.132,59,3.132,60,2.681,61,1.259,62,3.132,63,2.384,64,1.6,65,3.132,66,1.61,67,3.132]],["title/controllers/AirportsController.html",[68,1.739,69,2.504]],["body/controllers/AirportsController.html",[0,0.097,3,0.215,4,0.19,5,0.19,10,0.615,11,0.02,14,0.215,15,0.014,16,0.014,20,2.758,21,0.5,24,1.159,27,0.406,29,0.603,40,1.736,46,0.94,47,0.845,48,0.94,54,1.288,61,1.516,66,1.359,68,1.808,69,3.51,70,1.808,71,3.229,72,2.871,73,2.212,74,3.87,75,3.229,76,4.249,77,2.06,78,4.353,79,3.772,80,4.353,81,2.871,82,0.891,83,2.938,84,3.229,85,3.229,86,3.772,87,3.772,88,2.212,89,3.229,90,3.229,91,3.772]],["title/modules/AirportsModule.html",[92,1.459,93,2.128]],["body/modules/AirportsModule.html",[0,0.103,3,0.227,4,0.201,5,0.201,10,0.591,11,0.02,14,0.227,15,0.014,16,0.014,69,4.086,70,2.533,82,0.944,83,3.691,92,2.124,93,4.027,94,1.915,95,2.533,96,3.419,97,3.419,98,3.419,99,2.885,100,2.181,101,2.181,102,3.995,103,2.699,104,3.347,105,3.995,106,3.995]],["title/injectables/AirportsService.html",[83,1.853,107,1.38]],["body/injectables/AirportsService.html",[0,0.093,3,0.205,4,0.181,5,0.181,10,0.561,11,0.02,14,0.205,15,0.013,16,0.013,20,3.034,21,0.478,24,1.107,27,0.531,28,0.898,29,0.898,40,1.683,42,1.107,46,1.228,47,1.104,48,1.228,54,1.683,66,1.776,74,3.753,82,0.852,83,2.519,85,3.085,88,2.114,107,1.875,108,1.969,109,3.085,110,6.042,111,3.085,112,3.568,113,3.605,114,3.605,115,4.931,116,3.605,117,3.085,118,2.743,119,3.605,120,3.605]],["title/classes/AllExceptionsFilter.html",[0,0.093,121,2.761]],["body/classes/AllExceptionsFilter.html",[0,0.083,2,0.799,3,0.182,4,0.161,5,0.161,10,0.454,11,0.02,14,0.182,15,0.012,16,0.012,19,2.879,21,0.425,27,0.489,29,0.727,40,1.551,42,0.985,46,1.132,47,1.018,48,1.132,54,1.095,61,2.309,64,1.638,82,0.758,88,1.88,121,3.459,122,2.744,123,5.279,124,4.371,125,3.206,126,6.297,127,3.206,128,4.545,129,5.279,130,5.743,131,3.206,132,5.279,133,3.89,134,2.879,135,5.743,136,2.744,137,2.44,138,3.206,139,3.206,140,3.206,141,3.206,142,3.206,143,3.206,144,3.206,145,3.206,146,4.545,147,3.206,148,3.206,149,3.206,150,3.206,151,2.031,152,3.206,153,3.206]],["title/controllers/AppController.html",[68,1.739,154,2.504]],["body/controllers/AppController.html",[0,0.112,3,0.247,4,0.218,5,0.218,10,0.556,11,0.02,14,0.247,15,0.015,16,0.015,21,0.575,28,0.891,29,0.693,40,1.903,54,1.48,66,1.562,68,2.672,70,2.079,77,2.368,82,1.024,88,2.543,137,3.3,154,3.847,155,3.711,156,5.565,157,4.336,158,3.612,159,3.711,160,4.336]],["title/modules/AppModule.html",[92,1.459,161,2.504]],["body/modules/AppModule.html",[0,0.076,3,0.167,4,0.148,5,0.148,10,0.668,11,0.02,14,0.167,15,0.012,16,0.012,70,2.047,82,0.695,92,1.717,93,3.586,94,1.409,95,2.047,99,2.332,100,1.605,101,1.605,103,2.181,154,3.471,158,3.586,159,2.516,161,4.879,162,2.516,163,2.516,164,2.516,165,3.874,166,3.874,167,3.874,168,3.586,169,2.94,170,3.655,171,2.94,172,2.237,173,2.94,174,2.516,175,2.516,176,2.94,177,2.94,178,2.94,179,4.27,180,2.94,181,2.94,182,2.94,183,2.237,184,2.94]],["title/injectables/AppService.html",[107,1.38,158,2.128]],["body/injectables/AppService.html",[0,0.119,3,0.262,4,0.232,5,0.232,10,0.46,11,0.02,14,0.262,15,0.016,16,0.016,21,0.611,28,0.926,29,0.736,40,1.977,54,1.572,66,1.659,82,1.088,107,2.203,108,2.515,156,5.69,158,3.397,185,3.942,186,4.606,187,4.606,188,4.606]],["title/modules/CommonModule.html",[92,1.459,165,2.299]],["body/modules/CommonModule.html",[0,0.107,3,0.235,4,0.208,5,0.208,10,0.54,11,0.02,14,0.235,15,0.015,16,0.015,82,0.977,92,2.174,94,1.983,95,2.592,99,2.953,100,2.259,101,2.259,103,2.762,104,3.425,165,4.387,189,3.541,190,3.541,191,3.541,192,4.26,193,4.137,194,4.628,195,4.137]],["title/injectables/DataService.html",[107,1.38,112,1.981]],["body/injectables/DataService.html",[0,0.082,3,0.181,4,0.16,5,0.16,10,0.645,11,0.02,14,0.181,15,0.012,16,0.012,19,2.016,20,1.525,21,0.422,22,1.186,27,0.566,29,0.84,35,2.421,36,2.196,42,1.388,44,3.626,46,0.792,47,0.713,48,0.792,64,2.309,73,3.083,82,0.752,107,1.719,108,1.737,112,2.468,196,4.899,197,2.723,198,3.083,199,3.181,200,5.256,201,2.582,202,4.519,203,4.519,204,3.545,205,3.181,206,2.421,207,3.119,208,3.181,209,3.181,210,2.723,211,2.421,212,2.421,213,3.181,214,2.196,215,3.181,216,3.181,217,3.439,218,3.181,219,3.181,220,3.181,221,3.181,222,3.181]],["title/modules/DatabaseModule.html",[92,1.459,166,2.299]],["body/modules/DatabaseModule.html",[0,0.1,3,0.221,4,0.195,5,0.195,10,0.622,11,0.02,14,0.221,15,0.014,16,0.014,82,0.917,92,2.084,94,1.86,95,2.485,99,2.83,100,2.119,101,2.119,103,2.647,104,3.283,112,3.929,118,2.953,166,4.319,194,4.436,223,3.321,224,3.321,225,3.321,226,3.88,227,3.88,228,3.944,229,3.88,230,3.944,231,3.88]],["title/classes/Edge.html",[0,0.093,12,1.739]],["body/classes/Edge.html",[0,0.122,2,0.842,3,0.192,4,0.17,5,0.17,11,0.02,12,2.818,14,0.268,15,0.013,16,0.013,21,0.448,22,1.238,27,0.633,28,1.103,29,0.94,32,2.797,42,1.038,46,0.842,47,0.757,48,0.842,232,2.572,233,3.589,234,3.357,235,2.964,236,4.037,237,4.716,238,3.38,239,3.38,240,2.893,241,2.893,242,2.893,243,2.141,244,3.255,245,4.134,246,2.893,247,2.893,248,2.893]],["title/classes/EdgeTracker.html",[0,0.093,243,2.299]],["body/classes/EdgeTracker.html",[0,0.126,2,0.882,3,0.202,4,0.178,5,0.178,11,0.02,12,3.116,14,0.277,15,0.013,16,0.013,21,0.469,22,1.279,27,0.599,28,0.959,29,0.89,32,2.833,42,1.088,46,0.882,47,0.793,48,0.882,232,2.695,233,3.041,234,2.844,235,2.336,236,3.032,240,3.032,241,3.032,242,3.032,243,3.087,244,4.34,245,5.066,246,4.17,247,3.032,248,3.032,249,4.872,250,3.542]],["title/classes/FindAirportDto.html",[0,0.093,76,2.504]],["body/classes/FindAirportDto.html",[0,0.121,2,1.167,3,0.267,4,0.236,5,0.236,10,0.468,11,0.02,14,0.267,15,0.016,16,0.016,21,0.621,22,1.537,24,1.961,27,0.504,28,0.936,29,0.749,76,4.041,77,2.559,251,4.011,252,4.86,253,4.686,254,3.234]],["title/classes/FindPathDto.html",[0,0.093,255,2.504]],["body/classes/FindPathDto.html",[0,0.112,2,1.086,3,0.248,4,0.219,5,0.219,10,0.435,11,0.02,14,0.248,15,0.015,16,0.015,21,0.578,22,1.468,27,0.602,28,1.041,29,0.894,77,3.054,233,3.372,235,2.961,252,5.127,254,3.008,255,3.86,256,3.731,257,4.359,258,4.359]],["title/classes/FindRouteDto.html",[0,0.093,259,2.504]],["body/classes/FindRouteDto.html",[0,0.121,2,1.167,3,0.267,4,0.236,5,0.236,10,0.468,11,0.02,14,0.267,15,0.016,16,0.016,21,0.621,22,1.537,24,1.961,27,0.504,28,0.936,29,0.749,77,2.559,252,4.86,254,3.234,259,4.041,260,4.011,261,4.686]],["title/classes/GenericRepository.html",[0,0.093,38,2.299]],["body/classes/GenericRepository.html",[0,0.087,2,0.845,3,0.193,4,0.171,5,0.171,10,0.339,11,0.02,14,0.193,15,0.013,16,0.013,19,2.997,21,0.45,22,1.242,24,1.042,27,0.586,28,0.87,29,0.941,38,2.997,39,4.143,40,1.615,41,4.064,42,1.042,43,3.6,46,1.178,47,1.059,48,1.178,49,2.583,52,3.264,54,1.615,66,1.704,204,3.193,210,2.905,211,2.583,262,2.905,263,6.193,264,4.73,265,3.394,266,5.041,267,3.394,268,2.905,269,3.394,270,3.394,271,3.394,272,3.394,273,3.394,274,3.394,275,3.394,276,3.394,277,3.394]],["title/injectables/GeolibService.html",[107,1.38,192,2.128]],["body/injectables/GeolibService.html",[0,0.101,3,0.223,4,0.197,5,0.197,10,0.585,11,0.02,14,0.223,15,0.014,16,0.014,21,0.519,27,0.422,29,0.626,32,2.22,40,1.78,46,0.976,47,0.878,48,0.976,54,1.337,61,2.097,66,1.411,82,0.926,107,1.984,108,2.139,192,3.059,234,2.001,278,3.353,279,5.863,280,3.918,281,6.833,282,3.918,283,3.918,284,3.918,285,3.353,286,3.918,287,3.918,288,3.918,289,3.918,290,3.918,291,3.918]],["title/classes/Graph.html",[0,0.093,292,2.128]],["body/classes/Graph.html",[0,0.042,1,3.839,2,0.41,3,0.094,4,0.083,5,0.083,10,0.403,11,0.02,12,3.032,13,1.043,14,0.094,15,0.007,16,0.007,17,1.595,21,0.218,22,0.714,24,1.067,27,0.434,28,0.881,29,0.645,32,1.157,40,0.928,46,0.865,47,0.778,48,0.865,49,2.202,54,1.186,61,2.341,64,2.06,81,2.07,133,2.328,233,0.899,234,1.774,235,0.79,244,1.877,245,2.07,292,2.037,293,1.41,294,2.719,295,4.464,296,3.474,297,2.719,298,1.41,299,1.41,300,1.647,301,2.719,302,1.647,303,2.644,304,2.719,305,2.719,306,4.033,307,4.033,308,2.719,309,2.719,310,2.719,311,2.328,312,3.474,313,1.647,314,2.973,315,1.647,316,4.033,317,3.474,318,4.033,319,3.474,320,2.719,321,1.647,322,3.069,323,4.033,324,2.719,325,2.719,326,2.719,327,2.719,328,2.719,329,2.783,330,1.647,331,2.328,332,1.647,333,1.647,334,2.719,335,1.877,336,2.397,337,2.719,338,1.647,339,1.647,340,1.647,341,3.081,342,1.647,343,1.647,344,2.719,345,1.647,346,1.647,347,1.647,348,4.033,349,1.647,350,1.647,351,1.253,352,1.647,353,1.647,354,1.647,355,1.647,356,1.647,357,1.647,358,1.647,359,1.647,360,1.647,361,1.647,362,1.647,363,3.474,364,2.328,365,1.647,366,1.647,367,2.07,368,1.647,369,1.647,370,1.647,371,1.647,372,1.647,373,3.474,374,1.647,375,1.647,376,1.647,377,1.647,378,2.719,379,1.647,380,1.647,381,1.647,382,1.647]],["title/controllers/GraphController.html",[68,1.739,383,2.504]],["body/controllers/GraphController.html",[0,0.074,3,0.163,4,0.144,5,0.144,10,0.604,11,0.02,14,0.163,15,0.011,16,0.011,21,0.379,24,0.877,27,0.308,29,0.457,40,1.428,42,0.877,46,0.712,47,0.64,48,0.712,54,0.975,61,1.149,63,3.765,64,2.527,66,1.029,68,1.37,70,1.37,72,2.174,77,1.56,82,0.675,83,2.527,84,2.445,124,3.183,217,3.183,233,2.702,235,2.372,255,3.758,292,1.675,351,3.183,364,2.445,383,2.886,384,2.445,385,4.182,386,2.857,387,2.857,388,5.795,389,3.134,390,2.901,391,2.857,392,2.445,393,2.857,394,1.56,395,2.284,396,1.56,397,2.445,398,2.857,399,2.857,400,2.857,401,2.445,402,2.857,403,2.445,404,4.182,405,3.58,406,3.58,407,2.857,408,2.857,409,2.857,410,2.857,411,2.857,412,2.445,413,2.857]],["title/modules/GraphModule.html",[92,1.459,167,2.299]],["body/modules/GraphModule.html",[0,0.087,3,0.193,4,0.171,5,0.171,10,0.64,11,0.02,14,0.193,15,0.013,16,0.013,70,2.268,82,0.802,92,1.902,93,3.761,94,1.627,95,2.268,99,2.583,100,1.853,101,1.853,103,2.416,104,2.997,167,4.42,168,3.761,170,4.049,174,2.905,175,2.905,383,3.757,390,4.128,414,2.905,415,2.905,416,2.905,417,3.394,418,3.394,419,3.394,420,3.394,421,4.143,422,3.394]],["title/injectables/GraphService.html",[107,1.38,390,2.128]],["body/injectables/GraphService.html",[0,0.065,3,0.144,4,0.127,5,0.127,10,0.6,11,0.02,12,1.831,13,1.602,14,0.144,15,0.01,16,0.01,21,0.335,22,1.002,27,0.495,28,0.925,29,0.82,40,1.304,42,1.173,46,0.951,47,0.855,48,0.951,54,0.863,61,1.85,63,1.924,64,1.291,66,0.911,82,0.597,107,1.452,108,1.381,137,4.405,151,2.419,172,1.924,206,1.924,217,4.574,233,2.8,235,2.458,244,1.745,292,3.395,331,3.268,341,2.635,367,1.924,389,2.915,390,2.239,392,2.164,397,2.164,423,2.164,424,4.602,425,4.602,426,3.819,427,2.528,428,6.01,429,3.819,430,3.819,431,2.528,432,2.528,433,1.924,434,1.745,435,2.528,436,2.085,437,2.528,438,3.819,439,2.528,440,2.528,441,2.528,442,2.528,443,2.528,444,2.528,445,2.528,446,2.528,447,2.528,448,2.528,449,2.528,450,2.528,451,1.924,452,2.528,453,2.528]],["title/interfaces/IAirport.html",[20,1.739,454,1.38]],["body/interfaces/IAirport.html",[3,0.235,4,0.208,5,0.208,9,2.426,11,0.019,14,0.308,15,0.015,16,0.015,20,2.592,21,0.548,22,1.419,23,4.408,24,1.962,25,4.408,26,4.408,27,0.713,28,1.087,32,2.893,44,2.621,454,1.573,455,2.259,456,3.148]],["title/interfaces/IConfig.html",[454,1.38,457,2.504]],["body/interfaces/IConfig.html",[3,0.127,4,0.214,5,0.112,10,0.479,11,0.02,14,0.127,15,0.009,16,0.009,21,0.295,22,0.908,23,2.388,24,1.063,25,2.388,26,2.388,27,0.618,28,1.068,32,1.473,47,0.775,49,1.89,61,2.212,66,0.801,73,1.304,103,1.136,151,2.193,183,2.634,198,1.304,235,1.066,454,0.846,455,1.214,457,3.309,458,1.692,459,4.916,460,4.709,461,4.916,462,3.461,463,2.634,464,2.224,465,3.461,466,3.461,467,3.461,468,2.224,469,2.224,470,1.692,471,5.662,472,2.962,473,2.962,474,2.962,475,2.962,476,2.962,477,2.962,478,2.962,479,2.962,480,2.962,481,2.388,482,2.388,483,2.388,484,2.388,485,2.962,486,2.962,487,2.962,488,1.692,489,1.903,490,1.692,491,1.903,492,1.903,493,1.903,494,1.692,495,1.903,496,2.962,497,1.903,498,1.903,499,1.903,500,1.903,501,1.903,502,1.903,503,1.692,504,1.903,505,1.903,506,2.962,507,1.903,508,1.903,509,1.903,510,1.903,511,1.903,512,2.224,513,2.224]],["title/interfaces/IDataServices.html",[207,2.504,454,1.38]],["body/interfaces/IDataServices.html",[3,0.243,4,0.215,5,0.215,10,0.61,11,0.02,14,0.243,15,0.015,16,0.015,20,2.046,21,0.566,22,1.448,27,0.594,73,3.79,198,3.79,201,1.925,204,4.091,207,3.807,211,3.248,454,1.623,455,2.33,514,3.653,515,3.653,516,4.267,517,4.267,518,4.267]],["title/interfaces/IGenericRepository.html",[204,2.128,454,1.38]],["body/interfaces/IGenericRepository.html",[3,0.249,4,0.221,5,0.221,11,0.019,14,0.249,15,0.015,16,0.015,21,0.581,24,1.346,27,0.472,28,0.99,29,0.897,40,1.916,41,4.505,46,1.092,47,0.982,48,1.092,52,3.873,54,1.916,204,3.291,266,5.587,454,1.667,455,2.393,519,5.299,520,3.751,521,4.382,522,4.382]],["title/interfaces/IRoute.html",[201,1.637,454,1.38]],["body/interfaces/IRoute.html",[3,0.242,4,0.214,5,0.214,11,0.019,14,0.242,15,0.015,16,0.015,21,0.563,22,1.443,27,0.694,28,1.166,201,2.481,454,1.614,455,2.318,481,4.452,482,4.452,483,4.452,484,4.452,523,3.633]],["title/interfaces/IShortestPathResult.html",[389,2.299,454,1.38]],["body/interfaces/IShortestPathResult.html",[3,0.247,4,0.218,5,0.218,10,0.433,11,0.02,12,3.117,13,2.747,14,0.247,15,0.015,16,0.015,21,0.575,22,1.463,27,0.663,28,0.985,32,2.621,151,4.119,341,4.487,389,3.531,451,4.948,454,1.649,455,2.368,524,3.711]],["title/classes/IataNotFoundException.html",[0,0.093,394,1.981]],["body/classes/IataNotFoundException.html",[0,0.158,2,0.931,3,0.213,4,0.188,5,0.188,8,2.891,10,0.373,11,0.02,14,0.349,15,0.014,16,0.014,27,0.402,28,1.056,29,0.597,42,1.148,46,0.931,47,0.837,48,0.931,82,0.883,134,4.06,394,2.76,395,2.041,396,2.041,436,2.041,525,2.368,526,4.422,527,3.737,528,2.579,529,4.233,530,3.488,531,2.579,532,2.368]],["title/classes/IataNotProvidedException.html",[0,0.093,395,1.981]],["body/classes/IataNotProvidedException.html",[0,0.158,2,0.931,3,0.213,4,0.188,5,0.188,8,2.891,10,0.373,11,0.02,14,0.349,15,0.014,16,0.014,27,0.402,28,1.056,29,0.597,42,1.148,46,0.931,47,0.837,48,0.931,82,0.883,134,4.06,394,2.041,395,2.76,396,2.041,436,2.041,525,2.368,526,4.422,528,2.579,529,4.233,530,3.488,531,2.579,532,2.368,533,3.737]],["title/classes/InvalidIataError.html",[0,0.093,57,2.504]],["body/classes/InvalidIataError.html",[0,0.119,2,1.147,3,0.262,4,0.232,5,0.232,8,2.613,11,0.019,14,0.262,15,0.016,16,0.016,24,1.946,27,0.496,28,1.013,29,0.736,42,1.415,46,1.147,47,1.032,48,1.147,57,3.997,403,3.942,532,3.67,534,3.942,535,5.792,536,4.606,537,4.606]],["title/classes/MinDistanceList.html",[0,0.093,329,2.504]],["body/classes/MinDistanceList.html",[0,0.129,2,1.246,3,0.285,4,0.252,5,0.252,7,3.807,8,2.751,9,3.575,10,0.499,11,0.019,13,3.17,14,0.285,15,0.017,16,0.017,234,2.556,243,3.17,329,4.207,538,3.17]],["title/classes/MinHeap.html",[0,0.093,336,2.504]],["body/classes/MinHeap.html",[0,0.113,2,1.092,3,0.249,4,0.221,5,0.221,8,2.532,10,0.437,11,0.02,14,0.319,15,0.015,16,0.015,27,0.472,28,0.701,29,0.701,32,1.865,42,1.901,61,1.762,322,4.968,335,4.273,336,3.873,538,3.556,539,3.025,540,4.382,541,3.751,542,3.335,543,3.751,544,3.751,545,3.751,546,4.382]],["title/classes/PathNotFound.html",[0,0.093,436,1.981]],["body/classes/PathNotFound.html",[0,0.158,2,0.931,3,0.213,4,0.188,5,0.188,8,2.891,10,0.373,11,0.02,14,0.349,15,0.014,16,0.014,27,0.402,28,1.056,29,0.597,42,1.148,46,0.931,47,0.837,48,0.931,82,0.883,134,3.886,394,2.041,395,2.041,396,2.041,436,2.76,525,2.368,526,4.422,528,2.579,529,4.233,530,3.488,531,2.579,532,3.202,547,3.737]],["title/classes/PathNotFoundException.html",[0,0.093,396,1.981]],["body/classes/PathNotFoundException.html",[0,0.158,2,0.931,3,0.213,4,0.188,5,0.188,8,2.891,10,0.373,11,0.02,14,0.349,15,0.014,16,0.014,27,0.402,28,1.056,29,0.597,42,1.148,46,0.931,47,0.837,48,0.931,82,0.883,134,4.06,394,2.041,395,2.041,396,2.76,436,2.041,525,2.368,526,4.422,528,2.579,529,4.233,530,3.488,531,2.579,532,2.368,548,3.737]],["title/classes/Route.html",[0,0.093,549,2.504]],["body/classes/Route.html",[0,0.104,2,1.01,3,0.231,4,0.204,5,0.204,10,0.405,11,0.019,14,0.231,15,0.015,16,0.015,19,3.38,21,0.537,22,1.401,27,0.682,28,1.118,29,1.013,201,2.691,212,3.086,481,4.116,482,4.116,483,4.116,484,4.116,549,3.682,550,3.47,551,4.054,552,4.054,553,4.054,554,4.054]],["title/classes/RouteRepository.html",[0,0.093,214,2.504]],["body/classes/RouteRepository.html",[0,0.083,2,0.802,3,0.183,4,0.162,5,0.162,8,2.056,10,0.574,11,0.02,14,0.183,15,0.012,16,0.012,21,0.427,22,1.196,24,1.4,27,0.57,28,0.846,29,0.92,38,3.995,39,4.026,40,1.556,41,3.971,42,0.989,43,3.468,46,1.135,47,1.021,48,1.135,49,1.758,50,4.528,51,2.755,52,3.145,53,2.755,54,1.556,56,2.755,60,2.755,66,1.641,201,3.081,212,2.45,214,3.145,268,2.755,433,2.45,434,2.222,549,2.222,555,2.755,556,3.219,557,3.219,558,3.219,559,3.219,560,3.219,561,3.219]],["title/controllers/RoutesController.html",[68,1.739,562,2.504]],["body/controllers/RoutesController.html",[0,0.097,3,0.215,4,0.19,5,0.19,10,0.615,11,0.02,14,0.215,15,0.014,16,0.014,21,0.5,24,1.159,27,0.406,29,0.603,40,1.736,46,0.94,47,0.845,48,0.94,54,1.288,61,1.516,66,1.359,68,1.808,70,1.808,72,2.871,74,3.87,75,3.229,77,2.06,78,4.353,80,4.353,81,2.871,82,0.891,88,2.212,89,3.229,90,3.229,198,2.212,201,2.596,259,4.249,562,3.51,563,3.229,564,3.772,565,3.142,566,3.772,567,3.229,568,3.772,569,3.772,570,3.772]],["title/modules/RoutesModule.html",[92,1.459,168,2.128]],["body/modules/RoutesModule.html",[0,0.103,3,0.227,4,0.201,5,0.201,10,0.591,11,0.02,14,0.227,15,0.014,16,0.014,70,2.533,82,0.944,92,2.124,94,1.915,95,2.533,99,2.885,100,2.181,101,2.181,103,2.699,104,3.347,168,4.027,562,4.086,565,3.947,571,3.419,572,3.419,573,3.419,574,3.995,575,3.995,576,3.995]],["title/injectables/RoutesService.html",[107,1.38,565,1.981]],["body/injectables/RoutesService.html",[0,0.093,3,0.206,4,0.182,5,0.182,10,0.604,11,0.02,14,0.206,15,0.013,16,0.013,21,0.48,24,1.519,27,0.532,28,0.901,29,0.791,40,1.688,42,1.112,46,1.232,47,1.108,48,1.232,49,1.977,54,1.236,61,1.456,66,1.304,82,0.855,88,2.123,107,1.881,108,1.977,111,3.099,112,3.573,117,3.099,118,2.756,198,2.123,201,2.542,433,2.756,434,2.499,565,2.701,567,3.099,577,3.099,578,4.946,579,3.621,580,4.946,581,3.621,582,3.621,583,3.621,584,3.621]],["title/coverage.html",[585,3.769]],["body/coverage.html",[0,0.173,1,1.153,5,0.092,6,1.558,7,2.246,9,1.067,11,0.02,12,0.873,15,0.008,16,0.008,17,1.067,18,1.558,20,0.873,27,0.196,36,1.256,37,1.558,38,1.153,57,1.256,64,0.93,68,2.053,69,1.256,71,1.558,76,1.256,83,0.93,107,1.917,109,1.558,112,0.994,121,1.385,122,1.558,154,1.256,155,1.558,158,1.067,185,1.558,192,1.067,196,1.558,197,1.558,201,0.821,204,1.067,207,1.256,214,1.256,228,1.385,230,1.385,232,2.246,234,0.93,243,1.153,251,1.558,255,1.256,256,1.558,259,1.256,260,1.558,262,1.558,278,1.558,292,1.067,293,1.558,329,1.256,336,1.256,367,5.549,383,1.256,384,1.558,389,1.153,390,1.067,394,0.994,395,0.994,396,0.994,421,1.385,423,1.558,436,0.994,454,1.917,456,1.385,457,1.256,458,3.836,470,1.385,488,1.385,490,1.385,494,1.385,503,1.385,514,1.558,515,1.558,519,1.558,520,1.558,523,1.558,524,1.558,525,2.713,534,1.558,538,2.359,539,2.037,542,1.385,549,1.256,550,1.558,555,1.558,562,1.256,563,1.558,565,0.994,577,1.558,585,1.385,586,1.558,587,1.82,588,1.82,589,4.707,590,6.007,591,6.318,592,6.318,593,4.707,594,5.714,595,2.526,596,1.558,597,1.558,598,1.82,599,1.558,600,1.558,601,1.558,602,1.558,603,1.82,604,1.558,605,1.82,606,1.82]],["title/dependencies.html",[95,2.092,607,2.593]],["body/dependencies.html",[11,0.02,15,0.015,16,0.015,82,1.019,95,2.068,136,3.691,172,3.282,254,2.976,285,3.691,322,3.282,434,2.976,463,3.282,541,3.691,608,6.144,609,5.554,610,4.313,611,4.313,612,4.313,613,4.313,614,4.313,615,4.313,616,4.313,617,4.313,618,4.313,619,4.313,620,4.313,621,4.313,622,4.313,623,4.313,624,4.313,625,4.313,626,4.313,627,4.313]],["title/miscellaneous/functions.html",[628,1.777,629,3.735]],["body/miscellaneous/functions.html",[11,0.017,15,0.017,16,0.017,21,0.721,597,4.655,599,5.832,628,3.189,629,4.655,630,5.438]],["title/index.html",[21,0.402,631,3.029,632,3.029]],["body/index.html",[11,0.02,15,0.012,16,0.012,17,1.837,73,1.837,151,3.302,233,2.846,234,2.662,235,2.499,303,3.402,311,2.681,314,2.681,341,2.162,451,2.384,585,2.384,586,3.826,633,3.132,634,3.132,635,3.132,636,3.132,637,3.132,638,4.47,639,3.132,640,3.132,641,3.132,642,3.132,643,3.132,644,3.132,645,3.132,646,3.132,647,3.132,648,3.132,649,2.681,650,3.132,651,3.132,652,6.431,653,3.132,654,3.132,655,3.132,656,6.249,657,3.132,658,4.47,659,3.132,660,3.132,661,3.132,662,3.132,663,3.132,664,4.47,665,3.132,666,3.132,667,4.47,668,5.212,669,5.212,670,4.47,671,3.132,672,3.132,673,3.132,674,5.212,675,3.132,676,4.47,677,3.132,678,3.132,679,3.132]],["title/modules.html",[94,2.375]],["body/modules.html",[11,0.016,15,0.016,16,0.016,93,2.764,94,2.259,161,3.253,165,2.986,166,2.986,167,2.986,168,2.764,680,7.033,681,7.033,682,7.033,683,7.033]],["title/overview.html",[684,4.239]],["body/overview.html",[2,0.717,11,0.02,15,0.011,16,0.011,70,1.379,83,3.202,93,3.676,94,1.379,95,2.015,96,2.463,97,2.463,98,2.463,99,2.296,100,1.571,101,1.571,108,1.571,112,3.423,158,2.913,161,4.797,162,2.463,163,2.463,164,2.463,165,3.846,166,3.846,167,4.22,168,3.676,189,2.463,190,2.463,191,2.463,192,3.676,223,2.463,224,2.463,225,2.463,390,3.676,414,2.463,415,2.463,416,2.463,455,1.571,565,3.423,571,2.463,572,2.463,573,2.463,602,2.463,684,2.463,685,4.967,686,2.877]],["title/properties.html",[22,1.146,607,2.593]],["body/properties.html",[11,0.02,15,0.017,16,0.017,22,1.4,303,4.057,649,4.563,687,5.331,688,5.331,689,5.331,690,5.331]],["title/miscellaneous/typealiases.html",[628,1.777,691,4.364]],["body/miscellaneous/typealiases.html",[9,3.008,11,0.017,15,0.017,16,0.017,21,0.68,27,0.552,28,0.82,32,2.183,44,3.921,335,4.271,456,3.904,538,3.25,539,4.271,628,3.008,692,5.129,693,4.39,694,5.129]],["title/miscellaneous/variables.html",[628,1.777,695,3.735]],["body/miscellaneous/variables.html",[1,1.113,4,0.144,9,2.46,11,0.02,12,1.375,15,0.008,16,0.008,21,0.233,23,1.98,24,0.881,25,1.98,26,1.98,27,0.563,28,0.836,32,1.221,44,1.113,47,0.642,49,1.985,61,1.993,64,2.142,66,1.309,73,1.682,83,1.856,103,0.898,124,1.337,183,2.183,192,2.131,198,1.682,201,0.793,206,1.337,228,2.183,230,2.183,234,1.465,235,0.842,292,2.46,298,5.087,299,5.087,335,1.98,351,1.337,401,3.111,405,3.111,406,1.504,412,1.504,421,2.183,457,1.98,458,1.337,459,3.111,460,2.455,461,3.111,463,1.337,470,2.183,471,5.36,472,2.455,473,2.455,474,2.455,475,2.455,476,2.455,477,2.455,478,2.455,479,2.455,480,2.455,481,1.98,482,1.98,483,1.98,484,1.98,485,2.455,486,2.455,487,2.455,488,2.183,489,1.504,490,2.183,491,1.504,492,1.504,493,1.504,494,2.183,495,1.504,496,2.455,497,1.504,498,1.504,499,1.504,500,1.504,501,1.504,502,1.504,503,2.183,504,1.504,505,1.504,506,2.455,507,1.504,508,1.504,509,1.504,510,1.504,511,1.504,538,1.113,539,1.98,542,2.183,543,1.504,544,1.504,545,1.504,565,1.566,595,1.504,596,1.504,600,1.504,601,2.455,604,1.504,628,1.031,693,1.504,695,1.504,696,1.757,697,2.868,698,4.622,699,1.757,700,1.757,701,3.634,702,1.757,703,2.868,704,1.757,705,1.757,706,1.757,707,1.757,708,1.757,709,1.757,710,1.757,711,1.757,712,1.757,713,1.757,714,1.757,715,1.757]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":687,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["100.886",{"_index":671,"title":{},"body":{"index.html":{}}}],["2.2.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":602,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["281.397",{"_index":673,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":686,"title":{},"body":{"overview.html":{}}}],["4.17.21",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":530,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["422",{"_index":531,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["5.3.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":685,"title":{},"body":{"overview.html":{}}}],["6.0.4",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["7769.583",{"_index":672,"title":{},"body":{"index.html":{}}}],["8",{"_index":358,"title":{},"body":{"classes/Graph.html":{}}}],["8151.866",{"_index":666,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":433,"title":{},"body":{"injectables/GraphService.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["_.filter(routes",{"_index":583,"title":{},"body":{"injectables/RoutesService.html":{}}}],["_.find(this._data",{"_index":559,"title":{},"body":{"classes/RouteRepository.html":{}}}],["__dirname",{"_index":492,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["_data",{"_index":39,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["_graph",{"_index":424,"title":{},"body":{"injectables/GraphService.html":{}}}],["_maxlegs",{"_index":425,"title":{},"body":{"injectables/GraphService.html":{}}}],["a[1",{"_index":544,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":339,"title":{},"body":{"classes/Graph.html":{}}}],["addedge",{"_index":294,"title":{},"body":{"classes/Graph.html":{}}}],["addedge(iata",{"_index":301,"title":{},"body":{"classes/Graph.html":{}}}],["adjacency",{"_index":353,"title":{},"body":{"classes/Graph.html":{}}}],["adjacencylist",{"_index":1,"title":{"classes/AdjacencyList.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adjacencylist.get(vertex",{"_index":376,"title":{},"body":{"classes/Graph.html":{}}}],["adjacencylist.keys",{"_index":361,"title":{},"body":{"classes/Graph.html":{}}}],["adjlist",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["airline",{"_index":479,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airlineid",{"_index":480,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airport",{"_index":17,"title":{"classes/Airport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/Graph.html":{},"coverage.html":{},"index.html":{}}}],["airport.interface",{"_index":517,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["airportdata",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["airportid",{"_index":23,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airportrepository",{"_index":36,"title":{"classes/AirportRepository.html":{}},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["airportrepository(this.airportdata",{"_index":220,"title":{},"body":{"injectables/DataService.html":{}}}],["airports",{"_index":73,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/DataService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["airports.foreach((srcairport",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airports_data",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportscontroller",{"_index":69,"title":{"controllers/AirportsController.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"coverage.html":{}}}],["airportsdataprovider",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["airportsmodule",{"_index":93,"title":{"modules/AirportsModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["airportsservice",{"_index":83,"title":{"injectables/AirportsService.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"controllers/GraphController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["airportsservice.findall",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportsservice.findone(route.destinationairport",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algo",{"_index":357,"title":{},"body":{"classes/Graph.html":{}}}],["algorithm",{"_index":318,"title":{},"body":{"classes/Graph.html":{}}}],["algorithms",{"_index":327,"title":{},"body":{"classes/Graph.html":{}}}],["aliases",{"_index":692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":121,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["altitude",{"_index":475,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":640,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":252,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{}}}],["app",{"_index":654,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":154,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":158,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.from(this._data.values",{"_index":67,"title":{},"body":{"classes/AirportRepository.html":{}}}],["async",{"_index":495,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":690,"title":{},"body":{"properties.html":{}}}],["await",{"_index":506,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":543,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["b[1",{"_index":545,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":311,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["bootstrap",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":402,"title":{},"body":{"controllers/GraphController.html":{}}}],["break",{"_index":375,"title":{},"body":{"classes/Graph.html":{}}}],["browse",{"_index":683,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":680,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cellparser",{"_index":466,"title":{},"body":{"interfaces/IConfig.html":{}}}],["checktype",{"_index":498,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":472,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"overview.html":{}}}],["cluster_airportsmodule",{"_index":96,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_exports",{"_index":97,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_providers",{"_index":98,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":189,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":190,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":191,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":223,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_graphmodule",{"_index":414,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_exports",{"_index":416,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_imports",{"_index":417,"title":{},"body":{"modules/GraphModule.html":{}}}],["cluster_graphmodule_providers",{"_index":415,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_routesmodule",{"_index":571,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_exports",{"_index":572,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_providers",{"_index":573,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["code",{"_index":403,"title":{},"body":{"controllers/GraphController.html":{},"classes/InvalidIataError.html":{}}}],["codeshare",{"_index":485,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["colparser",{"_index":459,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["columnparam",{"_index":467,"title":{},"body":{"interfaces/IConfig.html":{}}}],["common/common.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":165,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["complete",{"_index":641,"title":{},"body":{"index.html":{}}}],["config",{"_index":496,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.colparser",{"_index":499,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.dat",{"_index":502,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.json",{"_index":510,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.headers",{"_index":500,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":428,"title":{},"body":{"injectables/GraphService.html":{}}}],["configservice.get('maxlegs",{"_index":439,"title":{},"body":{"injectables/GraphService.html":{}}}],["configuration",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["conifgs",{"_index":470,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conifgs.map(async",{"_index":504,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":309,"title":{},"body":{"classes/Graph.html":{}}}],["console.log('done",{"_index":513,"title":{},"body":{"interfaces/IConfig.html":{}}}],["const",{"_index":61,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"classes/MinHeap.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["constructor(airportdata",{"_index":199,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(data",{"_index":43,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["constructor(dataservice",{"_index":111,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["constructor(graph",{"_index":427,"title":{},"body":{"injectables/GraphService.html":{}}}],["constructor(httpadapterhost",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(iata",{"_index":535,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["constructor(message",{"_index":526,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["constructor(previousedge",{"_index":246,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["constructor(src",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["controller",{"_index":68,"title":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["controller('airports",{"_index":87,"title":{},"body":{"controllers/AirportsController.html":{}}}],["controller('graph",{"_index":398,"title":{},"body":{"controllers/GraphController.html":{}}}],["controller('routes",{"_index":569,"title":{},"body":{"controllers/RoutesController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["conversion",{"_index":503,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertdistance",{"_index":283,"title":{},"body":{"injectables/GeolibService.html":{}}}],["convertdistance(distance",{"_index":289,"title":{},"body":{"injectables/GeolibService.html":{}}}],["country",{"_index":473,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":585,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["csv",{"_index":463,"title":{},"body":{"interfaces/IConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["csvtojson",{"_index":464,"title":{},"body":{"interfaces/IConfig.html":{}}}],["csvtojson/v2/parameters",{"_index":468,"title":{},"body":{"interfaces/IConfig.html":{}}}],["ctx",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["currentdistance",{"_index":378,"title":{},"body":{"classes/Graph.html":{}}}],["currentmindistance",{"_index":373,"title":{},"body":{"classes/Graph.html":{}}}],["currentpath",{"_index":379,"title":{},"body":{"classes/Graph.html":{}}}],["customprioritycomparator",{"_index":542,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":49,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["data.sourceairport",{"_index":584,"title":{},"body":{"injectables/RoutesService.html":{}}}],["data_dir",{"_index":488,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":493,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["database/entities/airport.entity",{"_index":59,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/entities/route.entity",{"_index":558,"title":{},"body":{"classes/RouteRepository.html":{}}}],["database/errors",{"_index":58,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/interfaces/airport.interface",{"_index":85,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{}}}],["database/interfaces/route.interface",{"_index":567,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["database/providers/airport.provider",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/providers/route.provider",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/services/data",{"_index":117,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["database_data_dir",{"_index":490,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":166,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataservice",{"_index":112,"title":{"injectables/DataService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{}}}],["date().toisostring",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["decorators",{"_index":77,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["default",{"_index":298,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["demonstrate",{"_index":635,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":303,"title":{},"body":{"classes/Graph.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"index.html":{}}}],["destairport",{"_index":405,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["destairport.iata",{"_index":412,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["destinationairport",{"_index":483,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["destinationairportid",{"_index":484,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":655,"title":{},"body":{"index.html":{}}}],["dijkstra",{"_index":296,"title":{},"body":{"classes/Graph.html":{}}}],["dijkstra's",{"_index":317,"title":{},"body":{"classes/Graph.html":{}}}],["dijkstra(adjacencylist",{"_index":313,"title":{},"body":{"classes/Graph.html":{}}}],["disable",{"_index":270,"title":{},"body":{"classes/GenericRepository.html":{}}}],["distance",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distanceinkm",{"_index":288,"title":{},"body":{"injectables/GeolibService.html":{}}}],["documentation",{"_index":586,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dst",{"_index":476,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":351,"title":{},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":677,"title":{},"body":{"index.html":{}}}],["edge",{"_index":12,"title":{"classes/Edge.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edge(srcairport.iata",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edges",{"_index":341,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["edges.dest).join",{"_index":382,"title":{},"body":{"classes/Graph.html":{}}}],["edges.length",{"_index":446,"title":{},"body":{"injectables/GraphService.html":{}}}],["edges.push(edge",{"_index":343,"title":{},"body":{"classes/Graph.html":{}}}],["edgetracker",{"_index":243,"title":{"classes/EdgeTracker.html":{}},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["equipment",{"_index":487,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":532,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["eslint",{"_index":269,"title":{},"body":{"classes/GenericRepository.html":{}}}],["eslint/no",{"_index":274,"title":{},"body":{"classes/GenericRepository.html":{}}}],["example",{"_index":664,"title":{},"body":{"index.html":{}}}],["exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.tostring",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":14,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["exports",{"_index":104,"title":{},"body":{"modules/AirportsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["express",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/AirportRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["filename",{"_index":460,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["findairportdto",{"_index":76,"title":{"classes/FindAirportDto.html":{}},"body":{"controllers/AirportsController.html":{},"classes/FindAirportDto.html":{},"coverage.html":{}}}],["findall",{"_index":110,"title":{},"body":{"injectables/AirportsService.html":{}}}],["findallforairport",{"_index":578,"title":{},"body":{"injectables/RoutesService.html":{}}}],["findallforairport(iata",{"_index":580,"title":{},"body":{"injectables/RoutesService.html":{}}}],["finding",{"_index":637,"title":{},"body":{"index.html":{}}}],["findone",{"_index":74,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/RoutesController.html":{}}}],["findone(@param",{"_index":89,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findone(iata",{"_index":115,"title":{},"body":{"injectables/AirportsService.html":{}}}],["findone(params",{"_index":75,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findpath",{"_index":385,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(@query",{"_index":399,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(query",{"_index":386,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpathdto",{"_index":255,"title":{"classes/FindPathDto.html":{}},"body":{"classes/FindPathDto.html":{},"controllers/GraphController.html":{},"coverage.html":{}}}],["findroutedto",{"_index":259,"title":{"classes/FindRouteDto.html":{}},"body":{"classes/FindRouteDto.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["findshortestpath",{"_index":426,"title":{},"body":{"injectables/GraphService.html":{}}}],["findshortestpath(src",{"_index":430,"title":{},"body":{"injectables/GraphService.html":{}}}],["flight",{"_index":308,"title":{},"body":{"classes/Graph.html":{}}}],["found",{"_index":448,"title":{},"body":{"injectables/GraphService.html":{}}}],["fromfile(path.join(data_dir",{"_index":501,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":465,"title":{},"body":{"interfaces/IConfig.html":{}}}],["fs.writefilesync",{"_index":508,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":629,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geeksforgeeks",{"_index":321,"title":{},"body":{"classes/Graph.html":{}}}],["geeksforgeeks](https://www.geeksforgeeks.org/dijkstras",{"_index":352,"title":{},"body":{"classes/Graph.html":{}}}],["generic",{"_index":516,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["generic.repository",{"_index":56,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository",{"_index":38,"title":{"classes/GenericRepository.html":{}},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["genericrepository:13",{"_index":53,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository:17",{"_index":557,"title":{},"body":{"classes/RouteRepository.html":{}}}],["genericrepository:21",{"_index":55,"title":{},"body":{"classes/AirportRepository.html":{}}}],["genericrepository:7",{"_index":51,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["geolib",{"_index":285,"title":{},"body":{"injectables/GeolibService.html":{},"dependencies.html":{}}}],["geolib/es/types",{"_index":286,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibinputcoordinates",{"_index":281,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibservice",{"_index":192,"title":{"injectables/GeolibService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/GeolibService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["geolibservice.getdistanceinkm(srcairport",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':iata",{"_index":78,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["get(iata",{"_index":52,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getall",{"_index":41,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getdistance",{"_index":284,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistance(from",{"_index":287,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm",{"_index":279,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm(from",{"_index":280,"title":{},"body":{"injectables/GeolibService.html":{}}}],["gethello",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjsonfromcsvfile",{"_index":494,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getjsonfromcsvfile(config",{"_index":507,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":631,"title":{"index.html":{}},"body":{}}],["global",{"_index":194,"title":{},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{}}}],["graph",{"_index":292,"title":{"classes/Graph.html":{}},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph.addedge(srcairport.iata",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph.dijkstra(this._graph.adjacencylist",{"_index":442,"title":{},"body":{"injectables/GraphService.html":{}}}],["graph.visualizepath(src",{"_index":453,"title":{},"body":{"injectables/GraphService.html":{}}}],["graph_data",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphcontroller",{"_index":383,"title":{"controllers/GraphController.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"coverage.html":{}}}],["graphmodule",{"_index":167,"title":{"modules/GraphModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["graphprovider",{"_index":421,"title":{},"body":{"modules/GraphModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphservice",{"_index":390,"title":{"injectables/GraphService.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"coverage.html":{},"overview.html":{}}}],["greedy",{"_index":356,"title":{},"body":{"classes/Graph.html":{}}}],["guide",{"_index":320,"title":{},"body":{"classes/Graph.html":{}}}],["hbs",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":461,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["heap",{"_index":322,"title":{},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"dependencies.html":{}}}],["heap.model",{"_index":338,"title":{},"body":{"classes/Graph.html":{}}}],["heap.model.ts",{"_index":539,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["heap.model.ts:7",{"_index":540,"title":{},"body":{"classes/MinHeap.html":{}}}],["heapitem",{"_index":335,"title":{},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hel",{"_index":668,"title":{},"body":{"index.html":{}}}],["hello",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["hnd",{"_index":670,"title":{},"body":{"index.html":{}}}],["host",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost:3000/graph?src=tll&dest=hndresponse",{"_index":665,"title":{},"body":{"index.html":{}}}],["httpadapter",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["https://mihara0320.github.io/airplane",{"_index":644,"title":{},"body":{"index.html":{}}}],["https://www.raywenderlich.com/books/data",{"_index":325,"title":{},"body":{"classes/Graph.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iairport",{"_index":20,"title":{"interfaces/IAirport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["iairportmap",{"_index":44,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iata",{"_index":24,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/FindAirportDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["iatanotfoundexception",{"_index":394,"title":{"classes/IataNotFoundException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["iatanotfoundexception(e.message",{"_index":409,"title":{},"body":{"controllers/GraphController.html":{}}}],["iatanotprovidedexception",{"_index":395,"title":{"classes/IataNotProvidedException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["icao",{"_index":474,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["iconfig",{"_index":457,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":305,"title":{},"body":{"classes/Graph.html":{}}}],["idataservices",{"_index":207,"title":{"interfaces/IDataServices.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["identifier",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["igenericrepository",{"_index":204,"title":{"interfaces/IGenericRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["implementation",{"_index":319,"title":{},"body":{"classes/Graph.html":{}}}],["implements",{"_index":19,"title":{},"body":{"classes/Airport.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/GenericRepository.html":{},"classes/Route.html":{}}}],["import",{"_index":10,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":363,"title":{},"body":{"classes/Graph.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["inherited",{"_index":50,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["initialdistances",{"_index":360,"title":{},"body":{"classes/Graph.html":{}}}],["initialdistances.push([iata",{"_index":365,"title":{},"body":{"classes/Graph.html":{}}}],["inject",{"_index":206,"title":{},"body":{"injectables/DataService.html":{},"injectables/GraphService.html":{},"miscellaneous/variables.html":{}}}],["inject('airports_data",{"_index":216,"title":{},"body":{"injectables/DataService.html":{}}}],["inject('graph_data",{"_index":437,"title":{},"body":{"injectables/GraphService.html":{}}}],["inject('routes_data",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"overview.html":{}}}],["installation",{"_index":646,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":653,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intended",{"_index":634,"title":{},"body":{"index.html":{}}}],["interface",{"_index":454,"title":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{}},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":455,"title":{},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"overview.html":{}}}],["interfaces/airport.interface",{"_index":35,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{}}}],["interfaces/data",{"_index":208,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/generic",{"_index":210,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{}}}],["interfaces/route.interface",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}}}],["invalidiataerror",{"_index":57,"title":{"classes/InvalidIataError.html":{}},"body":{"classes/AirportRepository.html":{},"classes/InvalidIataError.html":{},"coverage.html":{}}}],["invalidiataerror(iata",{"_index":65,"title":{},"body":{"classes/AirportRepository.html":{}}}],["iroute",{"_index":201,"title":{"interfaces/IRoute.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["ishortestpathresult",{"_index":389,"title":{"interfaces/IShortestPathResult.html":{}},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["js",{"_index":541,"title":{},"body":{"classes/MinHeap.html":{},"dependencies.html":{}}}],["json.stringify(jsondata",{"_index":511,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["jsondata",{"_index":505,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":469,"title":{},"body":{"interfaces/IConfig.html":{}}}],["km",{"_index":290,"title":{},"body":{"injectables/GeolibService.html":{}}}],["latitude",{"_index":25,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["layovers",{"_index":450,"title":{},"body":{"injectables/GraphService.html":{}}}],["less",{"_index":449,"title":{},"body":{"injectables/GraphService.html":{}}}],["license",{"_index":688,"title":{},"body":{"properties.html":{}}}],["line",{"_index":272,"title":{},"body":{"classes/GenericRepository.html":{}}}],["list",{"_index":354,"title":{},"body":{"classes/Graph.html":{}}}],["list.model",{"_index":334,"title":{},"body":{"classes/Graph.html":{}}}],["list.model.ts",{"_index":7,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["literal",{"_index":462,"title":{},"body":{"interfaces/IConfig.html":{}}}],["load",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":434,"title":{},"body":{"injectables/GraphService.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["log(v",{"_index":346,"title":{},"body":{"classes/Graph.html":{}}}],["longitude",{"_index":26,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["lowdb",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":9,"title":{},"body":{"classes/AdjacencyList.html":{},"interfaces/IAirport.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":16,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":528,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["metadata",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":40,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["mimdistances",{"_index":441,"title":{},"body":{"injectables/GraphService.html":{}}}],["mimdistances.get(dest",{"_index":444,"title":{},"body":{"injectables/GraphService.html":{}}}],["mindistancelist",{"_index":329,"title":{"classes/MinDistanceList.html":{}},"body":{"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["mindistances",{"_index":359,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.get(dest",{"_index":380,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.set(iata",{"_index":362,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.set(start",{"_index":366,"title":{},"body":{"classes/Graph.html":{}}}],["minheap",{"_index":336,"title":{"classes/MinHeap.html":{}},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"coverage.html":{}}}],["minheap.init(initialdistances",{"_index":368,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.isempty",{"_index":371,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.poll",{"_index":374,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.replace([start",{"_index":370,"title":{},"body":{"classes/Graph.html":{}}}],["miscellaneous",{"_index":628,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":658,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/airports/airports.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/airports/controllers/airports.controller",{"_index":106,"title":{},"body":{"modules/AirportsModule.html":{}}}],["modules/airports/dto/airports.dto",{"_index":86,"title":{},"body":{"controllers/AirportsController.html":{}}}],["modules/airports/services/airports.service",{"_index":84,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/GraphController.html":{}}}],["modules/graph/controllers/graph.controller",{"_index":420,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/dto/graph.dto",{"_index":393,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/graph/errors",{"_index":397,"title":{},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["modules/graph/graph.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/graph/interfaces/graph.interface",{"_index":392,"title":{},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["modules/graph/models/adjacency",{"_index":333,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/models/edge.model",{"_index":13,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinDistanceList.html":{}}}],["modules/graph/models/graph.model",{"_index":435,"title":{},"body":{"injectables/GraphService.html":{}}}],["modules/graph/models/min",{"_index":337,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/providers/graph.provider",{"_index":422,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/services/graph.service",{"_index":391,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/routes/controllers/routes.controller",{"_index":576,"title":{},"body":{"modules/RoutesModule.html":{}}}],["modules/routes/dto/routes.dto",{"_index":568,"title":{},"body":{"controllers/RoutesController.html":{}}}],["modules/routes/routes.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/routes/services/routes.service",{"_index":566,"title":{},"body":{"controllers/RoutesController.html":{}}}],["name",{"_index":47,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":82,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/GeolibService.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":254,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"dependencies.html":{}}}],["new",{"_index":64,"title":{},"body":{"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":271,"title":{},"body":{"classes/GenericRepository.html":{}}}],["ngo",{"_index":669,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":650,"title":{},"body":{"index.html":{}}}],["noheader",{"_index":497,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":652,"title":{},"body":{"index.html":{}}}],["null",{"_index":364,"title":{},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{}}}],["number",{"_index":32,"title":{},"body":{"classes/Airport.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(distanceinkm.tofixed(3",{"_index":291,"title":{},"body":{"injectables/GeolibService.html":{}}}],["o",{"_index":560,"title":{},"body":{"classes/RouteRepository.html":{}}}],["o((v+e",{"_index":345,"title":{},"body":{"classes/Graph.html":{}}}],["o(e",{"_index":377,"title":{},"body":{"classes/Graph.html":{}}}],["o(log(n",{"_index":372,"title":{},"body":{"classes/Graph.html":{}}}],["o(log(v",{"_index":369,"title":{},"body":{"classes/Graph.html":{}}}],["o(v",{"_index":348,"title":{},"body":{"classes/Graph.html":{}}}],["o.sourceairport",{"_index":561,"title":{},"body":{"classes/RouteRepository.html":{}}}],["object",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":471,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":639,"title":{},"body":{"index.html":{}}}],["online",{"_index":643,"title":{},"body":{"index.html":{}}}],["optional",{"_index":48,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["out",{"_index":101,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["overview",{"_index":684,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":607,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":81,"title":{},"body":{"controllers/AirportsController.html":{},"classes/Graph.html":{},"controllers/RoutesController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["params",{"_index":80,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["params.iata",{"_index":90,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["parse",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["path.join",{"_index":491,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":489,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(database_data_dir",{"_index":509,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["pathnotfound",{"_index":436,"title":{"classes/PathNotFound.html":{}},"body":{"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["pathnotfoundexception",{"_index":396,"title":{"classes/PathNotFoundException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["pathnotfoundexception(e.message",{"_index":413,"title":{},"body":{"controllers/GraphController.html":{}}}],["please",{"_index":400,"title":{},"body":{"controllers/GraphController.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["prerequisite",{"_index":647,"title":{},"body":{"index.html":{}}}],["previousedge",{"_index":244,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/DataService.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["production",{"_index":660,"title":{},"body":{"index.html":{}}}],["promise.all(conversion).then",{"_index":512,"title":{},"body":{"interfaces/IConfig.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"properties.html":{}}}],["provide",{"_index":401,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":103,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"interfaces/IConfig.html":{},"modules/RoutesModule.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":388,"title":{},"body":{"controllers/GraphController.html":{}}}],["rawdata",{"_index":263,"title":{},"body":{"classes/GenericRepository.html":{}}}],["raywenderlich",{"_index":324,"title":{},"body":{"classes/Graph.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/GraphService.html":{}}}],["reflect",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["repositories/airport.repository",{"_index":213,"title":{},"body":{"injectables/DataService.html":{}}}],["repositories/route.repository",{"_index":215,"title":{},"body":{"injectables/DataService.html":{}}}],["repository",{"_index":633,"title":{},"body":{"index.html":{}}}],["repository.interface",{"_index":211,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{}}}],["repository.interface.ts",{"_index":520,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["repository.interface.ts:2",{"_index":522,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["repository.interface.ts:3",{"_index":521,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["representation",{"_index":355,"title":{},"body":{"classes/Graph.html":{}}}],["represented",{"_index":306,"title":{},"body":{"classes/Graph.html":{}}}],["request",{"_index":663,"title":{},"body":{"index.html":{}}}],["reset",{"_index":100,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["responsebody",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["results",{"_index":15,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":54,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["rimraf",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":549,"title":{"classes/Route.html":{}},"body":{"classes/Route.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["route.interface",{"_index":518,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["routedata",{"_index":200,"title":{},"body":{"injectables/DataService.html":{}}}],["router",{"_index":645,"title":{},"body":{"index.html":{}}}],["routerepository",{"_index":214,"title":{"classes/RouteRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["routerepository(this.routedata",{"_index":222,"title":{},"body":{"injectables/DataService.html":{}}}],["routes",{"_index":198,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["routes.foreach((route",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes_data",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routescontroller",{"_index":562,"title":{"controllers/RoutesController.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"coverage.html":{}}}],["routesdataprovider",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeservice",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routeservice.findallforairport(srcairport.iata",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routesmodule",{"_index":168,"title":{"modules/RoutesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routesservice",{"_index":565,"title":{"injectables/RoutesService.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":656,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["scripts/.../generatejson.ts",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts/generatejson.ts",{"_index":458,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":316,"title":{},"body":{"classes/Graph.html":{}}}],["service.interface",{"_index":209,"title":{},"body":{"injectables/DataService.html":{}}}],["service.interface.ts",{"_index":515,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["service.service",{"_index":118,"title":{},"body":{"injectables/AirportsService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{}}}],["service.service.ts",{"_index":197,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["service.service.ts:11",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["service.service.ts:12",{"_index":202,"title":{},"body":{"injectables/DataService.html":{}}}],["services/airports.service",{"_index":105,"title":{},"body":{"modules/AirportsModule.html":{}}}],["services/data",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/geolib/geolib.service",{"_index":195,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/graph.service",{"_index":419,"title":{},"body":{"modules/GraphModule.html":{}}}],["services/routes.service",{"_index":575,"title":{},"body":{"modules/RoutesModule.html":{}}}],["shortest",{"_index":638,"title":{},"body":{"index.html":{}}}],["shortestpathtodest",{"_index":443,"title":{},"body":{"injectables/GraphService.html":{}}}],["shortestpathtodest.previousedge",{"_index":445,"title":{},"body":{"injectables/GraphService.html":{}}}],["shortestpathtodest.totaldistance",{"_index":452,"title":{},"body":{"injectables/GraphService.html":{}}}],["sortededges",{"_index":331,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{}}}],["sortededges.map((edges",{"_index":381,"title":{},"body":{"classes/Graph.html":{}}}],["sortededges[0].src",{"_index":447,"title":{},"body":{"injectables/GraphService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["sourceairport",{"_index":481,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["sourceairportid",{"_index":482,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":349,"title":{},"body":{"classes/Graph.html":{}}}],["src",{"_index":235,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/.../adjacencylist.ts",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../airport.interface.ts",{"_index":694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../airport.provider.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.provider.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../min",{"_index":693,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route.provider.ts",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":193,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:11",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exception.filter.ts:14",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/services/geolib/geolib.service.ts",{"_index":278,"title":{},"body":{"injectables/GeolibService.html":{},"coverage.html":{}}}],["src/common/services/geolib/geolib.service.ts:7",{"_index":282,"title":{},"body":{"injectables/GeolibService.html":{}}}],["src/database/database.module.ts",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/airport.entity.ts",{"_index":18,"title":{},"body":{"classes/Airport.html":{},"coverage.html":{}}}],["src/database/entities/airport.entity.ts:4",{"_index":30,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:5",{"_index":31,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:6",{"_index":33,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:7",{"_index":34,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/route.entity.ts",{"_index":550,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/database/entities/route.entity.ts:4",{"_index":553,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:5",{"_index":554,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:6",{"_index":551,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:7",{"_index":552,"title":{},"body":{"classes/Route.html":{}}}],["src/database/errors/index.ts",{"_index":534,"title":{},"body":{"classes/InvalidIataError.html":{},"coverage.html":{}}}],["src/database/errors/index.ts:1",{"_index":536,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["src/database/interfaces/airport.interface.ts",{"_index":456,"title":{},"body":{"interfaces/IAirport.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/database/interfaces/data",{"_index":514,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["src/database/interfaces/generic",{"_index":519,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["src/database/interfaces/route.interface.ts",{"_index":523,"title":{},"body":{"interfaces/IRoute.html":{},"coverage.html":{}}}],["src/database/providers/airport.provider.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/route.provider.ts",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/repositories/airport.repository.ts",{"_index":37,"title":{},"body":{"classes/AirportRepository.html":{},"coverage.html":{}}}],["src/database/repositories/airport.repository.ts:7",{"_index":45,"title":{},"body":{"classes/AirportRepository.html":{}}}],["src/database/repositories/generic.repository.ts",{"_index":262,"title":{},"body":{"classes/GenericRepository.html":{},"coverage.html":{}}}],["src/database/repositories/generic.repository.ts:11",{"_index":265,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:15",{"_index":267,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:4",{"_index":264,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/route.repository.ts",{"_index":555,"title":{},"body":{"classes/RouteRepository.html":{},"coverage.html":{}}}],["src/database/repositories/route.repository.ts:7",{"_index":556,"title":{},"body":{"classes/RouteRepository.html":{}}}],["src/database/services/data",{"_index":196,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/airports/airports.module.ts",{"_index":102,"title":{},"body":{"modules/AirportsModule.html":{}}}],["src/modules/airports/controllers/airports.controller.ts",{"_index":71,"title":{},"body":{"controllers/AirportsController.html":{},"coverage.html":{}}}],["src/modules/airports/controllers/airports.controller.ts:11",{"_index":79,"title":{},"body":{"controllers/AirportsController.html":{}}}],["src/modules/airports/dto/airports.dto.ts",{"_index":251,"title":{},"body":{"classes/FindAirportDto.html":{},"coverage.html":{}}}],["src/modules/airports/dto/airports.dto.ts:5",{"_index":253,"title":{},"body":{"classes/FindAirportDto.html":{}}}],["src/modules/airports/services/airports.service.ts",{"_index":109,"title":{},"body":{"injectables/AirportsService.html":{},"coverage.html":{}}}],["src/modules/airports/services/airports.service.ts:10",{"_index":114,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:14",{"_index":116,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:7",{"_index":113,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/graph/controllers/graph.controller.ts",{"_index":384,"title":{},"body":{"controllers/GraphController.html":{},"coverage.html":{}}}],["src/modules/graph/controllers/graph.controller.ts:20",{"_index":387,"title":{},"body":{"controllers/GraphController.html":{}}}],["src/modules/graph/dto/graph.dto.ts",{"_index":256,"title":{},"body":{"classes/FindPathDto.html":{},"coverage.html":{}}}],["src/modules/graph/dto/graph.dto.ts:5",{"_index":258,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/dto/graph.dto.ts:8",{"_index":257,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/errors/index.ts",{"_index":525,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["src/modules/graph/errors/index.ts:15",{"_index":548,"title":{},"body":{"classes/PathNotFoundException.html":{}}}],["src/modules/graph/errors/index.ts:21",{"_index":547,"title":{},"body":{"classes/PathNotFound.html":{}}}],["src/modules/graph/errors/index.ts:3",{"_index":533,"title":{},"body":{"classes/IataNotProvidedException.html":{}}}],["src/modules/graph/errors/index.ts:9",{"_index":527,"title":{},"body":{"classes/IataNotFoundException.html":{}}}],["src/modules/graph/graph.module.ts",{"_index":418,"title":{},"body":{"modules/GraphModule.html":{}}}],["src/modules/graph/interfaces/graph.interface.ts",{"_index":524,"title":{},"body":{"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["src/modules/graph/models/adjacency",{"_index":6,"title":{},"body":{"classes/AdjacencyList.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts:14",{"_index":250,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:15",{"_index":249,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:2",{"_index":239,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:3",{"_index":238,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:4",{"_index":237,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/fixtures/adjacencylist.ts",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/models/graph.model.ts",{"_index":293,"title":{},"body":{"classes/Graph.html":{},"coverage.html":{}}}],["src/modules/graph/models/graph.model.ts:14",{"_index":302,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:29",{"_index":315,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:7",{"_index":300,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:90",{"_index":332,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/min",{"_index":538,"title":{},"body":{"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/providers/graph.provider.ts",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/services/graph.service.ts",{"_index":423,"title":{},"body":{"injectables/GraphService.html":{},"coverage.html":{}}}],["src/modules/graph/services/graph.service.ts:12",{"_index":432,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:13",{"_index":429,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:23",{"_index":431,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/routes/controllers/routes.controller.ts",{"_index":563,"title":{},"body":{"controllers/RoutesController.html":{},"coverage.html":{}}}],["src/modules/routes/controllers/routes.controller.ts:11",{"_index":564,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/modules/routes/dto/routes.dto.ts",{"_index":260,"title":{},"body":{"classes/FindRouteDto.html":{},"coverage.html":{}}}],["src/modules/routes/dto/routes.dto.ts:5",{"_index":261,"title":{},"body":{"classes/FindRouteDto.html":{}}}],["src/modules/routes/routes.module.ts",{"_index":574,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/modules/routes/services/routes.service.ts",{"_index":577,"title":{},"body":{"injectables/RoutesService.html":{},"coverage.html":{}}}],["src/modules/routes/services/routes.service.ts:11",{"_index":581,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/modules/routes/services/routes.service.ts:8",{"_index":579,"title":{},"body":{"injectables/RoutesService.html":{}}}],["srcairport",{"_index":404,"title":{},"body":{"controllers/GraphController.html":{}}}],["srcairport.iata",{"_index":411,"title":{},"body":{"controllers/GraphController.html":{}}}],["start",{"_index":314,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["start:dev",{"_index":659,"title":{},"body":{"index.html":{}}}],["start:prodapi",{"_index":661,"title":{},"body":{"index.html":{}}}],["started",{"_index":632,"title":{"index.html":{}},"body":{}}],["statements",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":295,"title":{},"body":{"classes/Graph.html":{}}}],["statuscode",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stops",{"_index":486,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":323,"title":{},"body":{"classes/Graph.html":{}}}],["structures",{"_index":326,"title":{},"body":{"classes/Graph.html":{}}}],["super(`invalid",{"_index":537,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["super(customprioritycomparator",{"_index":546,"title":{},"body":{"classes/MinHeap.html":{}}}],["super(data",{"_index":60,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["super(message",{"_index":529,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["support",{"_index":681,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":682,"title":{},"body":{"modules.html":{}}}],["swift/v3.0/chapters/22",{"_index":328,"title":{},"body":{"classes/Graph.html":{}}}],["t",{"_index":266,"title":{},"body":{"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{}}}],["table",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":642,"title":{},"body":{"index.html":{}}}],["test",{"_index":674,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":679,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":678,"title":{},"body":{"index.html":{}}}],["tests",{"_index":676,"title":{},"body":{"index.html":{}}}],["this._data",{"_index":268,"title":{},"body":{"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["this._data.get(iata",{"_index":62,"title":{},"body":{"classes/AirportRepository.html":{}}}],["this._graph",{"_index":440,"title":{},"body":{"injectables/GraphService.html":{}}}],["this._maxlegs",{"_index":438,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.adjacencylist.get(iata",{"_index":342,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.has(iata",{"_index":340,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.set(iata",{"_index":344,"title":{},"body":{"classes/Graph.html":{}}}],["this.airports",{"_index":219,"title":{},"body":{"injectables/DataService.html":{}}}],["this.airportsservice.findone(dest",{"_index":408,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.airportsservice.findone(iata",{"_index":91,"title":{},"body":{"controllers/AirportsController.html":{}}}],["this.airportsservice.findone(src",{"_index":407,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.appservice.gethello",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dataservice.airports.get(iata",{"_index":120,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.airports.getall",{"_index":119,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.routes.getall",{"_index":582,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.dest",{"_index":241,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.distance",{"_index":242,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.graphservice.findshortestpath",{"_index":410,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.httpadapterhost",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.previousedge",{"_index":247,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.routes",{"_index":221,"title":{},"body":{"injectables/DataService.html":{}}}],["this.routesservice.findallforairport(iata",{"_index":570,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.src",{"_index":240,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.totaldistance",{"_index":248,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["throw",{"_index":63,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["time",{"_index":347,"title":{},"body":{"classes/Graph.html":{}}}],["timestamp",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timezone",{"_index":478,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["tll",{"_index":667,"title":{},"body":{"index.html":{}}}],["tool",{"_index":648,"title":{},"body":{"index.html":{}}}],["totaldistance",{"_index":245,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{}}}],["totaldistanceinkm",{"_index":451,"title":{},"body":{"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["true",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":406,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":691,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":273,"title":{},"body":{"classes/GenericRepository.html":{}}}],["tzdatabase",{"_index":477,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"classes/GenericRepository.html":{}}}],["unique",{"_index":304,"title":{},"body":{"classes/Graph.html":{}}}],["unit",{"_index":675,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":689,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":275,"title":{},"body":{"classes/GenericRepository.html":{}}}],["usage",{"_index":662,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v",{"_index":350,"title":{},"body":{"classes/Graph.html":{}}}],["v16.16.0",{"_index":651,"title":{},"body":{"index.html":{}}}],["value",{"_index":299,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":695,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":276,"title":{},"body":{"classes/GenericRepository.html":{}}}],["version",{"_index":649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertex",{"_index":307,"title":{},"body":{"classes/Graph.html":{}}}],["vertices",{"_index":312,"title":{},"body":{"classes/Graph.html":{}}}],["visualizepath",{"_index":297,"title":{},"body":{"classes/Graph.html":{}}}],["visualizepath(src",{"_index":330,"title":{},"body":{"classes/Graph.html":{}}}],["void",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Graph.html":{}}}],["watch",{"_index":657,"title":{},"body":{"index.html":{}}}],["way",{"_index":636,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":310,"title":{},"body":{"classes/Graph.html":{}}}],["world",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":99,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdjacencyList.html":{"url":"classes/AdjacencyList.html","title":"class - AdjacencyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdjacencyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/adjacency-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport class AdjacencyList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Airport.html":{"url":"classes/Airport.html","title":"class - Airport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Airport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/airport.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IAirport\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airportID\n                            \n                            \n                                iata\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport } from '../interfaces/airport.interface';\n\nexport class Airport implements IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirportRepository.html":{"url":"classes/AirportRepository.html","title":"class - AirportRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirportRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/airport.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IAirportMap)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/airport.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { GenericRepository } from './generic.repository';\nimport { InvalidIataError } from '@database/errors';\nimport { Airport } from '@database/entities/airport.entity';\n\nexport class AirportRepository extends GenericRepository {\n  _data: IAirportMap;\n\n  constructor(data: IAirportMap) {\n    super(data);\n  }\n\n  get(iata: string): IAirport {\n    const airport = this._data.get(iata);\n    if (!airport) {\n      throw new InvalidIataError(iata);\n    }\n    return airport;\n  }\n\n  getAll(): IAirport[] {\n    return Array.from(this._data.values());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AirportsController.html":{"url":"controllers/AirportsController.html","title":"controller - AirportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AirportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/controllers/airports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                airports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindAirportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/airports/controllers/airports.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindAirportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { AirportsService } from '@modules/airports/services/airports.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\nimport { FindAirportDto } from '@modules/airports/dto/airports.dto';\n\n@Controller('airports')\nexport class AirportsController {\n  constructor(private airportsService: AirportsService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindAirportDto): IAirport {\n    const iata = params.iata;\n    return this.airportsService.findOne(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AirportsModule.html":{"url":"modules/AirportsModule.html","title":"module - AirportsModule","body":"\n                   \n\n\n\n\n    Modules\n    AirportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/airports/airports.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AirportsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AirportsService } from './services/airports.service';\nimport { AirportsController } from '@modules/airports/controllers/airports.controller';\n\n@Module({\n  controllers: [AirportsController],\n  providers: [AirportsService],\n  exports: [AirportsService],\n})\nexport class AirportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirportsService.html":{"url":"injectables/AirportsService.html","title":"injectable - AirportsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AirportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/services/airports.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/airports/services/airports.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DataService } from '@database/services/data-service.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\n\n@Injectable()\nexport class AirportsService {\n  constructor(private dataService: DataService) {}\n\n  findAll(): IAirport[] {\n    return this.dataService.airports.getAll();\n  }\n\n  findOne(iata: string): IAirport {\n    return this.dataService.airports.get(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exception.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      exception: exception.toString(),\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nGraphModule\n\nGraphModule\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\n\nimport { CommonModule } from '@common/common.module';\nimport { GraphModule } from '@modules/graph/graph.module';\nimport { DatabaseModule } from '@database/database.module';\nimport configuration from '@config/configuration';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, load: [configuration] }),\n    CommonModule,\n    AirportsModule,\n    RoutesModule,\n    GraphModule,\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nGeolibService \n\nGeolibService \n\n\n\nCommonModule\n\nCommonModule\n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GeolibService } from './services/geolib/geolib.service';\n\n@Global()\n@Module({\n  providers: [GeolibService],\n  exports: [GeolibService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/services/data-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airports\n                            \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(airportData: IAirportMap, routeData: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/services/data-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        airportData\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeData\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IDataServices } from '../interfaces/data-service.interface';\nimport { IGenericRepository } from '../interfaces/generic-repository.interface';\nimport { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { IRoute } from '../interfaces/route.interface';\nimport { AirportRepository } from '../repositories/airport.repository';\nimport { RouteRepository } from '../repositories/route.repository';\n\n@Injectable()\nexport class DataService implements IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n\n  constructor(\n    @Inject('AIRPORTS_DATA')\n    private airportData: IAirportMap,\n    @Inject('ROUTES_DATA')\n    private routeData: IRoute[],\n  ) {\n    this.airports = new AirportRepository(this.airportData);\n    this.routes = new RouteRepository(this.routeData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDataService \n\nDataService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { DataService } from './services/data-service.service';\nimport { AirportsDataProvider } from '@database/providers/airport.provider';\nimport { RoutesDataProvider } from '@database/providers/route.provider';\n\n@Global()\n@Module({\n  providers: [DataService, AirportsDataProvider, RoutesDataProvider],\n  exports: [DataService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                distance\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(src: string, dest: string, distance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dest\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        distance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EdgeTracker.html":{"url":"classes/EdgeTracker.html","title":"class - EdgeTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EdgeTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousEdge\n                            \n                            \n                                totalDistance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(previousEdge: Edge, totalDistance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousEdge\n                                                  \n                                                        \n                                                                        Edge\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalDistance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousEdge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Edge\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDistance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAirportDto.html":{"url":"classes/FindAirportDto.html","title":"class - FindAirportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAirportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/dto/airports.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/airports/dto/airports.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindAirportDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPathDto.html":{"url":"classes/FindPathDto.html","title":"class - FindPathDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPathDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/dto/graph.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindPathDto {\n  @ApiProperty()\n  src: string;\n\n  @ApiProperty()\n  dest: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindRouteDto.html":{"url":"classes/FindRouteDto.html","title":"class - FindRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/dto/routes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routes/dto/routes.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindRouteDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericRepository.html":{"url":"classes/GenericRepository.html","title":"class - GenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/generic.repository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGenericRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: RawData)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/generic.repository.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    RawData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RawData\n\n                    \n                \n                    \n                        \n                                Defined in src/database/repositories/generic.repository.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IGenericRepository } from '../interfaces/generic-repository.interface';\n\nexport class GenericRepository implements IGenericRepository {\n  _data: RawData;\n\n  constructor(data: RawData) {\n    this._data = data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  get(iata: string): T {\n    return undefined;\n  }\n\n  getAll(): T[] {\n    return [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolibService.html":{"url":"injectables/GeolibService.html","title":"injectable - GeolibService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolibService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/geolib/geolib.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistanceInKm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDistanceInKm\n                        \n                    \n                \n            \n            \n                \ngetDistanceInKm(from: GeolibInputCoordinates, to: GeolibInputCoordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/geolib/geolib.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { convertDistance, getDistance } from 'geolib';\nimport { GeolibInputCoordinates } from 'geolib/es/types';\n\n@Injectable()\nexport class GeolibService {\n  getDistanceInKm(\n    from: GeolibInputCoordinates,\n    to: GeolibInputCoordinates,\n  ): number {\n    const distance = getDistance(from, to);\n    const distanceInKm = convertDistance(distance, 'km');\n\n    return Number(distanceInKm.toFixed(3));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/graph.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjacencyList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEdge\n                            \n                            \n                                    Static\n                                Dijkstra\n                            \n                            \n                                    Static\n                                VisualizePath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adjacencyList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdjacencyList\n\n                    \n                \n                \n                    \n                        Default value : new AdjacencyList()\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/graph.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEdge\n                        \n                    \n                \n            \n            \n                \naddEdge(iata: string, edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique airport id which is represented as vertex\n\n                                    \n                                \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Flight connection which is represented as weighted edge between vertices\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Dijkstra\n                        \n                    \n                \n            \n            \n                \n                    \n                    Dijkstra(adjacencyList: AdjacencyList, start: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:29\n                \n            \n\n\n            \n                \n                    See Dijkstra's algorithm implementation guide - geeksforgeeks\nSee [Heap data structure - raywenderlich] (https://www.raywenderlich.com/books/data-structures-algorithms-in-swift/v3.0/chapters/22-the-heap-data-structure)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adjacencyList\n                                    \n                                                AdjacencyList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MinDistanceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        VisualizePath\n                        \n                    \n                \n            \n            \n                \n                    \n                    VisualizePath(src: string, sortedEdges: Edge[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortedEdges\n                                    \n                                                Edge[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\nimport { AdjacencyList } from '@modules/graph/models/adjacency-list.model';\nimport { HeapItem, MinHeap } from '@modules/graph/models/min-heap.model';\nimport { MinDistanceList } from '@modules/graph/models/min-distance-list.model';\n\nexport class Graph {\n  adjacencyList: AdjacencyList = new AdjacencyList();\n\n  /**\n   * @description Add edge to a vertex\n   * @param iata Unique airport id which is represented as vertex\n   * @param edge Flight connection which is represented as weighted edge between vertices\n   */\n  addEdge(iata: string, edge: Edge): void {\n    if (this.adjacencyList.has(iata)) {\n      const edges = this.adjacencyList.get(iata);\n      edges.push(edge);\n      this.adjacencyList.set(iata, edges);\n    } else {\n      this.adjacencyList.set(iata, [edge]);\n    }\n  }\n\n  /**\n   * @description Dijkstra's algorithm implementation. O((V+E) * log(V)) time | O(V) space - where V is the number of vertices and E is the number of edges in the graph\n   * @see [Dijkstra's algorithm implementation guide - geeksforgeeks](https://www.geeksforgeeks.org/dijkstras-algorithm-for-adjacency-list-representation-greedy-algo-8/)\n   * @see [Heap data structure - raywenderlich] (https://www.raywenderlich.com/books/data-structures-algorithms-in-swift/v3.0/chapters/22-the-heap-data-structure)\n   */\n  static Dijkstra(\n    adjacencyList: AdjacencyList,\n    start: string,\n  ): MinDistanceList {\n    const minDistances = new MinDistanceList();\n    const initialDistances: HeapItem[] = [];\n\n    // O(V)\n    for (const iata of adjacencyList.keys()) {\n      minDistances.set(iata, {\n        totalDistance: Infinity,\n        previousEdge: null,\n      });\n      initialDistances.push([iata, Infinity]);\n    }\n\n    minDistances.set(start, {\n      totalDistance: 0,\n      previousEdge: null,\n    });\n\n    const minHeap = new MinHeap();\n\n    // O(V)\n    minHeap.init(initialDistances);\n\n    // O(log(V))\n    minHeap.replace([start, 0]);\n\n    // O(V)\n    while (!minHeap.isEmpty()) {\n      // O(log(n))\n      const [vertex, currentMinDistance] = minHeap.poll();\n\n      if (currentMinDistance === Infinity) {\n        break;\n      }\n\n      const edges = adjacencyList.get(vertex);\n\n      // O(E)\n      for (const edge of edges) {\n        const { dest, distance } = edge;\n\n        const currentDistance = currentMinDistance + distance;\n        const currentPath = minDistances.get(dest);\n\n        if (currentDistance  ${sortedEdges.map((edges) => edges.dest).join(' -> ')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphController.html":{"url":"controllers/GraphController.html","title":"controller - GraphController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/controllers/graph.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                graph\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findPath\n                        \n                    \n                \n            \n            \n                \nfindPath(query: FindPathDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/graph/controllers/graph.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindPathDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { GraphService } from '@modules/graph/services/graph.service';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\nimport { FindPathDto } from '@modules/graph/dto/graph.dto';\nimport { AirportsService } from '@modules/airports/services/airports.service';\nimport {\n  IataNotFoundException,\n  IataNotProvidedException,\n  PathNotFoundException,\n} from '@modules/graph/errors';\n\n@Controller('graph')\nexport class GraphController {\n  constructor(\n    private graphService: GraphService,\n    private airportsService: AirportsService,\n  ) {}\n\n  @Get()\n  findPath(@Query() query: FindPathDto): IShortestPathResult {\n    const { src, dest } = query;\n\n    if (!src || !dest) {\n      throw new IataNotProvidedException(\n        'Please provide both src & dest IATA code in query',\n      );\n    }\n\n    let srcAirport,\n      destAirport = null;\n    try {\n      srcAirport = this.airportsService.findOne(src);\n      destAirport = this.airportsService.findOne(dest);\n    } catch (e) {\n      throw new IataNotFoundException(e.message);\n    }\n\n    try {\n      return this.graphService.findShortestPath(\n        srcAirport.iata,\n        destAirport.iata,\n      );\n    } catch (e) {\n      throw new PathNotFoundException(e.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphModule.html":{"url":"modules/GraphModule.html","title":"module - GraphModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/graph/graph.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GraphService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphService } from './services/graph.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\nimport { GraphController } from '@modules/graph/controllers/graph.controller';\nimport { GraphProvider } from '@modules/graph/providers/graph.provider';\n\n@Module({\n  providers: [GraphService, GraphProvider],\n  controllers: [GraphController],\n  imports: [AirportsModule, RoutesModule],\n  exports: [GraphService, GraphProvider],\n})\nexport class GraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphService.html":{"url":"injectables/GraphService.html","title":"injectable - GraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/services/graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _graph\n                            \n                            \n                                    Private\n                                    Readonly\n                                _maxLegs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findShortestPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graph, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/services/graph.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findShortestPath\n                        \n                    \n                \n            \n            \n                \nfindShortestPath(src: string, dest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/services/graph.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _graph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Graph\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _maxLegs\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Graph } from '@modules/graph/models/graph.model';\nimport { Edge } from '@modules/graph/models/edge.model';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\nimport { PathNotFound } from '@modules/graph/errors';\n\n@Injectable()\nexport class GraphService {\n  private readonly _maxLegs;\n  private readonly _graph: Graph;\n\n  constructor(\n    @Inject('GRAPH_DATA') graph,\n    private configService: ConfigService,\n  ) {\n    this._maxLegs = configService.get('maxLegs');\n    this._graph = graph;\n  }\n\n  findShortestPath(src: string, dest: string): IShortestPathResult {\n    const mimDistances = Graph.Dijkstra(this._graph.adjacencyList, src);\n    const shortestPathToDest = mimDistances.get(dest);\n    const edges: Edge[] = [];\n\n    let previousEdge = shortestPathToDest.previousEdge;\n\n    while (edges.length  0 && sortedEdges[0].src !== src) {\n      throw new PathNotFound(\n        `Path from ${src} to ${dest} could not be found for less than ${this._maxLegs} layovers`,\n      );\n    }\n\n    return {\n      totalDistanceInKm: shortestPathToDest.totalDistance,\n      path: Graph.VisualizePath(src, sortedEdges),\n      edges: sortedEdges,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAirport.html":{"url":"interfaces/IAirport.html","title":"interface - IAirport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAirport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/airport.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airportID\n                                        \n                                \n                                \n                                        \n                                            iata\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iata:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\nexport type IAirportMap = Map;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/generateJson.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colParser\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colParser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colParser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as csv from 'csvtojson';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { CellParser, ColumnParam } from 'csvtojson/v2/Parameters';\n\ninterface IConfig {\n  filename: string;\n  colParser: { [key: string]: string | CellParser | ColumnParam };\n  headers: string[];\n}\nconst CONIFGS: IConfig[] = [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n];\n\nconst DATA_DIR = path.join(__dirname, '..', 'data');\nconst DATABASE_DATA_DIR = path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n);\nexport const getJsonFromCSVFile = async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n};\n\nconst conversion = CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n});\n\nPromise.all(conversion).then(() => console.log('done'));\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataServices.html":{"url":"interfaces/IDataServices.html","title":"interface - IDataServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDataServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/data-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airports\n                                        \n                                \n                                \n                                        \n                                            routes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airports:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IGenericRepository } from './generic-repository.interface';\nimport { IAirport } from './airport.interface';\nimport { IRoute } from './route.interface';\n\nexport interface IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenericRepository.html":{"url":"interfaces/IGenericRepository.html","title":"interface - IGenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/generic-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IGenericRepository {\n  getAll(): T[];\n  get(iata: string): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoute.html":{"url":"interfaces/IRoute.html","title":"interface - IRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinationAirport\n                                        \n                                \n                                \n                                        \n                                            destinationAirportID\n                                        \n                                \n                                \n                                        \n                                            sourceAirport\n                                        \n                                \n                                \n                                        \n                                            sourceAirportID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IShortestPathResult.html":{"url":"interfaces/IShortestPathResult.html","title":"interface - IShortestPathResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IShortestPathResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/interfaces/graph.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            totalDistanceInKm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDistanceInKm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalDistanceInKm:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport interface IShortestPathResult {\n  totalDistanceInKm: number;\n  path: string;\n  edges: Edge[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IataNotFoundException.html":{"url":"classes/IataNotFoundException.html","title":"class - IataNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IataNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IataNotProvidedException.html":{"url":"classes/IataNotProvidedException.html","title":"class - IataNotProvidedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IataNotProvidedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIataError.html":{"url":"classes/InvalidIataError.html","title":"class - InvalidIataError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIataError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iata: string)\n                    \n                \n                        \n                            \n                                Defined in src/database/errors/index.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iata\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidIataError extends Error {\n  constructor(iata: string) {\n    super(`Invalid IATA Code: ${iata}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinDistanceList.html":{"url":"classes/MinDistanceList.html","title":"class - MinDistanceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinDistanceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-distance-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EdgeTracker } from '@modules/graph/models/edge.model';\n\nexport class MinDistanceList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinHeap.html":{"url":"classes/MinHeap.html","title":"class - MinHeap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinHeap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-heap.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Heap\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/min-heap.model.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Heap from 'heap-js';\n\nexport type HeapItem = [string, number];\n\nconst customPriorityComparator = (a: HeapItem, b: HeapItem) => a[1] - b[1];\n\nexport class MinHeap extends Heap {\n  constructor() {\n    super(customPriorityComparator);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PathNotFound.html":{"url":"classes/PathNotFound.html","title":"class - PathNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PathNotFoundException.html":{"url":"classes/PathNotFoundException.html","title":"class - PathNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/route.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRoute\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destinationAirport\n                            \n                            \n                                destinationAirportID\n                            \n                            \n                                sourceAirport\n                            \n                            \n                                sourceAirportID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRoute } from '../interfaces/route.interface';\n\nexport class Route implements IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteRepository.html":{"url":"classes/RouteRepository.html","title":"class - RouteRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/route.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/route.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRoute[]\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IRoute[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { IRoute } from '../interfaces/route.interface';\nimport { GenericRepository } from './generic.repository';\nimport { Route } from '@database/entities/route.entity';\n\nexport class RouteRepository extends GenericRepository {\n  _data: IRoute[];\n\n  constructor(data: IRoute[]) {\n    super(data);\n  }\n\n  get(iata: string): IRoute {\n    return _.find(this._data, (o) => o.sourceAirport === iata);\n  }\n\n  getAll(): IRoute[] {\n    return this._data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutesController.html":{"url":"controllers/RoutesController.html","title":"controller - RoutesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/controllers/routes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                routes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindRouteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/routes/controllers/routes.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { RoutesService } from '@modules/routes/services/routes.service';\nimport { IRoute } from '@database/interfaces/route.interface';\nimport { FindRouteDto } from '@modules/routes/dto/routes.dto';\n\n@Controller('routes')\nexport class RoutesController {\n  constructor(private routesService: RoutesService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindRouteDto): IRoute[] {\n    const iata = params.iata;\n    return this.routesService.findAllForAirport(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nRoutesService \n\nRoutesService \n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { RoutesService } from './services/routes.service';\nimport { RoutesController } from '@modules/routes/controllers/routes.controller';\n\n@Module({\n  providers: [RoutesService],\n  controllers: [RoutesController],\n  exports: [RoutesService],\n})\nexport class RoutesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutesService.html":{"url":"injectables/RoutesService.html","title":"injectable - RoutesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/services/routes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllForAirport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/routes/services/routes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllForAirport\n                        \n                    \n                \n            \n            \n                \nfindAllForAirport(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/routes/services/routes.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { Injectable } from '@nestjs/common';\nimport { DataService } from '@database/services/data-service.service';\nimport { IRoute } from '@database/interfaces/route.interface';\n\n@Injectable()\nexport class RoutesService {\n  constructor(private dataService: DataService) {}\n\n  findAllForAirport(iata: string): IRoute[] {\n    const routes = this.dataService.routes.getAll();\n    return _.filter(routes, (data) => data.sourceAirport === iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                scripts/generateJson.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            CONIFGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            conversion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATABASE_DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            getJsonFromCSVFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/geolib/geolib.service.ts\n            \n            injectable\n            GeolibService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/entities/airport.entity.ts\n            \n            class\n            Airport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/entities/route.entity.ts\n            \n            class\n            Route\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/errors/index.ts\n            \n            class\n            InvalidIataError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/interfaces/airport.interface.ts\n            \n            interface\n            IAirport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/interfaces/data-service.interface.ts\n            \n            interface\n            IDataServices\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/generic-repository.interface.ts\n            \n            interface\n            IGenericRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/route.interface.ts\n            \n            interface\n            IRoute\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            AirportsDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            map\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/route.provider.ts\n            \n            variable\n            RoutesDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/repositories/airport.repository.ts\n            \n            class\n            AirportRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/generic.repository.ts\n            \n            class\n            GenericRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/route.repository.ts\n            \n            class\n            RouteRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/services/data-service.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/airports/controllers/airports.controller.ts\n            \n            controller\n            AirportsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/dto/airports.dto.ts\n            \n            class\n            FindAirportDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/services/airports.service.ts\n            \n            injectable\n            AirportsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/controllers/graph.controller.ts\n            \n            controller\n            GraphController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/dto/graph.dto.ts\n            \n            class\n            FindPathDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            IataNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            IataNotProvidedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            PathNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            PathNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/interfaces/graph.interface.ts\n            \n            interface\n            IShortestPathResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/adjacency-list.model.ts\n            \n            class\n            AdjacencyList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            EdgeTracker\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/fixtures/adjacencyList.ts\n            \n            variable\n            adjList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/graph.model.ts\n            \n            class\n            Graph\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-distance-list.model.ts\n            \n            class\n            MinDistanceList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            class\n            MinHeap\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            variable\n            customPriorityComparator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/providers/graph.provider.ts\n            \n            variable\n            GraphProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/services/graph.service.ts\n            \n            injectable\n            GraphService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/routes/controllers/routes.controller.ts\n            \n            controller\n            RoutesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/dto/routes.dto.ts\n            \n            class\n            FindRouteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/services/routes.service.ts\n            \n            injectable\n            RoutesService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.4\n        \n            csv-parse : ^5.3.0\n        \n            geolib : ^3.3.3\n        \n            hbs : ^4.2.0\n        \n            heap-js : ^2.2.0\n        \n            lodash : ^4.17.21\n        \n            lowdb : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nThis repository is intended to demonstrate a way of finding the shortest path from one airport to another (complete task description).  \nDocumentation\nOnline documentation: https://mihara0320.github.io/airplane-router/\nInstallation\nPrerequisite\n\n\n\nTool\nVersion\n\n\n\n\nnode.js\nv16.16.0\n\n\n\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodAPI Usage\nGet the shortest path between airports\nRequest Example\nhttp://localhost:3000/graph?src=TLL&dest=HNDResponse Example\n{\n  \"totalDistanceInKm\": 8151.866,\n  \"path\": \"TLL -> HEL -> NGO -> HND\",\n  \"edges\": [\n    {\n      \"src\": \"TLL\",\n      \"dest\": \"HEL\",\n      \"distance\": 100.886\n    },\n    {\n      \"src\": \"HEL\",\n      \"dest\": \"NGO\",\n      \"distance\": 7769.583\n    },\n    {\n      \"src\": \"NGO\",\n      \"dest\": \"HND\",\n      \"distance\": 281.397\n    }\n  ]\n}Test\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AirportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nGeolibService \n\nGeolibService \n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nRoutesService \n\nRoutesService \n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HeapItem   (src/.../min-heap.model.ts)\n                        \n                        \n                            IAirportMap   (src/.../airport.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/graph/models/min-heap.model.ts\n    \n    \n        \n            \n                \n                    \n                    HeapItem\n                \n            \n            \n                \n                        [string, number]\n\n                \n            \n        \n    \n    src/database/interfaces/airport.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IAirportMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adjList   (src/.../adjacencyList.ts)\n                        \n                        \n                            AirportsDataProvider   (src/.../airport.provider.ts)\n                        \n                        \n                            CONIFGS   (scripts/.../generateJson.ts)\n                        \n                        \n                            conversion   (scripts/.../generateJson.ts)\n                        \n                        \n                            customPriorityComparator   (src/.../min-heap.model.ts)\n                        \n                        \n                            DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            DATABASE_DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            getJsonFromCSVFile   (scripts/.../generateJson.ts)\n                        \n                        \n                            GraphProvider   (src/.../graph.provider.ts)\n                        \n                        \n                            map   (src/.../airport.provider.ts)\n                        \n                        \n                            RoutesDataProvider   (src/.../route.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/graph/models/fixtures/adjacencyList.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adjList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AdjacencyList()\n                    \n                \n\n\n        \n    \n\n    src/database/providers/airport.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AirportsDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'AIRPORTS_DATA',\n  useValue: map,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n\n        \n    \n\n    scripts/generateJson.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONIFGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '..', 'data')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonFromCSVFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/models/min-heap.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        customPriorityComparator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (a: HeapItem, b: HeapItem) => a[1] - b[1]\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/providers/graph.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'GRAPH_DATA',\n  useFactory: (\n    airportsService: AirportsService,\n    routeService: RoutesService,\n    geolibService: GeolibService,\n  ): Graph => {\n    const graph = new Graph();\n    const airports = airportsService.findAll();\n    airports.forEach((srcAirport) => {\n      const routes = routeService.findAllForAirport(srcAirport.iata);\n      routes.forEach((route) => {\n        let destAirport;\n        try {\n          destAirport = airportsService.findOne(route.destinationAirport);\n        } catch (e) {\n          return;\n        }\n\n        const distance = geolibService.getDistanceInKm(srcAirport, destAirport);\n        const edge = new Edge(srcAirport.iata, destAirport.iata, distance);\n        graph.addEdge(srcAirport.iata, edge);\n      });\n    });\n    return graph;\n  },\n  inject: [AirportsService, RoutesService, GeolibService],\n}\n                    \n                \n\n\n        \n    \n\n    src/database/providers/route.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoutesDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'ROUTES_DATA',\n  useValue: data as IRoute[],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
