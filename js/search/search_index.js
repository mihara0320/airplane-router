var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdjacencyList.html",[0,0.031,1,2.427]],["body/classes/AdjacencyList.html",[0,0.042,1,4.071,2,1.424,3,0.311,4,0.24,5,0.275,6,4.171,7,3.696,8,3.439,9,3.439,10,0.55,11,0.021,12,2.287,13,3.058,14,0.311,15,0.018,16,0.018]],["title/classes/Airport.html",[0,0.031,17,2.221]],["body/classes/Airport.html",[0,0.034,2,1.141,3,0.249,4,0.192,5,0.22,10,0.441,11,0.021,14,0.249,15,0.016,16,0.016,17,3.236,18,3.34,19,3.236,20,2.709,21,0.441,22,1.271,23,3.959,24,1.786,25,3.959,26,3.959,27,0.749,28,1.125,29,1.125,30,3.918,31,3.918,32,2.542,33,3.918,34,3.918,35,2.96]],["title/classes/AirportRepository.html",[0,0.031,36,2.427]],["body/classes/AirportRepository.html",[0,0.026,2,0.876,3,0.192,4,0.148,5,0.169,8,2.49,10,0.62,11,0.022,14,0.192,15,0.013,16,0.013,17,3.446,20,2.728,21,0.339,22,1.06,24,0.928,27,0.613,28,0.921,29,1.006,35,2.274,36,2.948,37,2.567,38,3.796,39,3.813,40,1.408,41,3.765,42,1.169,43,3.261,44,3.796,45,3.01,46,1.257,47,1.122,48,1.257,49,1.737,50,4.303,51,2.567,52,2.948,53,2.567,54,1.408,55,3.01,56,2.567,57,2.056,58,3.01,59,3.01,60,2.567,61,1.169,62,3.01,63,3.01,64,1.737,65,3.01,66,1.58,67,3.01]],["title/controllers/AirportsController.html",[68,1.661,69,2.427]],["body/controllers/AirportsController.html",[0,0.031,3,0.232,4,0.178,5,0.205,10,0.673,11,0.022,14,0.232,15,0.015,16,0.015,20,2.611,21,0.409,24,1.121,27,0.442,29,0.664,40,1.607,46,1.059,47,0.946,48,1.059,54,1.187,61,1.413,66,1.332,68,1.701,69,3.365,70,1.701,71,3.103,72,2.749,73,2.275,74,3.722,75,3.103,76,4.088,77,1.949,78,4.2,79,3.639,80,4.2,81,2.749,82,1.001,83,2.992,84,3.639,85,3.103,86,3.639,87,3.639,88,1.949,89,3.103,90,3.103,91,3.639]],["title/modules/AirportsModule.html",[92,1.379,93,2.05]],["body/modules/AirportsModule.html",[0,0.033,3,0.246,4,0.189,5,0.217,10,0.647,11,0.021,14,0.246,15,0.015,16,0.015,69,3.929,70,2.395,82,1.062,83,3.777,92,1.989,93,3.86,94,1.804,95,2.395,96,3.29,97,3.29,98,3.29,99,2.745,100,2.067,101,2.067,102,3.859,103,2.559,104,3.203,105,3.859,106,3.859]],["title/injectables/AirportsService.html",[83,1.903,107,1.3]],["body/injectables/AirportsService.html",[0,0.03,3,0.221,4,0.17,5,0.195,10,0.614,11,0.022,14,0.221,15,0.014,16,0.014,20,2.876,21,0.391,24,1.07,27,0.58,28,0.995,29,0.995,40,1.557,42,1.349,46,1.39,47,1.241,48,1.39,54,1.557,66,1.747,74,3.606,82,0.956,83,2.557,85,2.962,88,1.861,107,1.747,108,1.861,109,2.962,110,5.006,111,2.962,112,3.406,113,3.474,114,3.474,115,4.773,116,3.474,117,2.962,118,2.625,119,3.474,120,3.474]],["title/classes/AllExceptionsFilter.html",[0,0.031,121,2.684]],["body/classes/AllExceptionsFilter.html",[0,0.027,2,0.898,3,0.196,4,0.151,5,0.173,10,0.494,11,0.022,14,0.196,15,0.013,16,0.013,19,2.745,21,0.347,27,0.534,29,0.801,40,1.432,42,1.197,46,1.278,47,1.141,48,1.278,54,1.006,61,2.163,64,1.779,82,0.848,88,1.651,121,3.317,122,2.629,123,5.114,124,4.751,125,3.083,126,6.122,127,3.083,128,4.391,129,5.114,130,5.572,131,3.083,132,5.114,133,3.744,134,4.391,135,5.572,136,2.629,137,2.329,138,3.083,139,3.083,140,3.083,141,3.083,142,3.083,143,3.083,144,3.083,145,3.083,146,4.391,147,3.083,148,3.083,149,3.083,150,3.083,151,2.329,152,3.083,153,3.083]],["title/controllers/AppController.html",[68,1.661,154,2.427]],["body/controllers/AppController.html",[0,0.036,3,0.267,4,0.206,5,0.236,10,0.609,11,0.022,14,0.267,15,0.016,16,0.016,21,0.472,28,0.988,29,0.766,40,1.766,54,1.369,66,1.536,68,2.53,70,1.961,77,2.248,82,1.154,88,2.248,137,3.17,154,3.697,155,3.578,156,5.398,157,4.196,158,3.457,159,3.578,160,4.196]],["title/modules/AppModule.html",[92,1.379,161,2.427]],["body/modules/AppModule.html",[0,0.024,3,0.18,4,0.138,5,0.159,10,0.733,11,0.022,14,0.18,15,0.012,16,0.012,70,1.925,82,0.776,92,1.599,93,3.427,94,1.319,95,1.925,99,2.206,100,1.512,101,1.512,103,2.058,154,3.323,158,3.427,159,2.406,161,4.707,162,2.406,163,2.406,164,2.406,165,3.713,166,3.713,167,3.713,168,3.427,169,2.822,170,3.512,171,2.822,172,2.132,173,2.822,174,2.406,175,2.406,176,4.12,177,2.822,178,2.822,179,2.822,180,2.822,181,2.822,182,2.822,183,2.132,184,2.822]],["title/injectables/AppService.html",[107,1.3,158,2.05]],["body/injectables/AppService.html",[0,0.038,3,0.284,4,0.219,5,0.251,10,0.502,11,0.021,14,0.284,15,0.017,16,0.017,21,0.502,28,1.028,29,0.815,40,1.837,54,1.456,66,1.634,82,1.228,107,2.061,108,2.392,156,5.524,158,3.249,185,3.807,186,4.465,187,4.465,188,4.465]],["title/modules/CommonModule.html",[92,1.379,165,2.221]],["body/modules/CommonModule.html",[0,0.034,3,0.255,4,0.196,5,0.225,10,0.59,11,0.021,14,0.255,15,0.016,16,0.016,82,1.1,92,2.037,94,1.869,95,2.452,99,2.81,100,2.142,101,2.142,103,2.621,104,3.28,165,4.22,189,3.41,190,3.41,191,3.41,192,4.09,193,3.999,194,4.473,195,3.999]],["title/injectables/DataService.html",[107,1.3,112,1.903]],["body/injectables/DataService.html",[0,0.026,3,0.195,4,0.15,5,0.172,10,0.707,11,0.022,14,0.195,15,0.013,16,0.013,19,1.912,20,1.43,21,0.344,22,1.072,27,0.619,29,0.929,35,2.311,36,2.089,42,1.695,44,3.471,46,0.89,47,0.795,48,0.89,64,2.519,73,3.182,82,0.841,107,1.598,108,1.638,112,2.338,196,4.734,197,2.608,198,2.937,199,3.058,200,5.091,201,2.435,202,4.366,203,4.366,204,3.387,205,3.058,206,2.311,207,2.982,208,3.058,209,3.058,210,2.608,211,2.311,212,2.311,213,3.058,214,2.089,215,3.058,216,3.058,217,3.722,218,3.058,219,3.058,220,3.058,221,3.058,222,3.058]],["title/modules/DatabaseModule.html",[92,1.379,166,2.221]],["body/modules/DatabaseModule.html",[0,0.032,3,0.238,4,0.184,5,0.211,10,0.681,11,0.021,14,0.238,15,0.015,16,0.015,82,1.03,92,1.95,94,1.751,95,2.348,99,2.691,100,2.006,101,2.006,103,2.509,104,3.14,112,3.759,118,2.83,166,4.152,194,4.283,223,3.193,224,3.193,225,3.193,226,3.746,227,3.746,228,3.795,229,3.746,230,3.795,231,3.746]],["title/classes/Edge.html",[0,0.031,12,1.661]],["body/classes/Edge.html",[0,0.039,2,0.947,3,0.207,4,0.159,5,0.183,11,0.022,12,2.668,14,0.29,15,0.014,16,0.014,21,0.366,22,1.119,27,0.694,28,1.227,29,1.042,32,2.637,42,1.263,46,0.947,47,0.846,48,0.947,232,2.458,233,3.69,234,3.426,235,3.219,236,3.888,237,4.56,238,3.253,239,3.253,240,2.774,241,2.774,242,2.774,243,2.034,244,3.115,245,3.597,246,2.774,247,2.774,248,2.774]],["title/classes/EdgeTracker.html",[0,0.031,243,2.221]],["body/classes/EdgeTracker.html",[0,0.041,2,0.993,3,0.217,4,0.167,5,0.192,11,0.022,12,2.956,14,0.3,15,0.014,16,0.014,21,0.384,22,1.157,27,0.657,28,1.063,29,0.986,32,2.672,42,1.325,46,0.993,47,0.887,48,0.993,232,2.578,233,3.116,234,2.893,235,2.525,236,2.909,240,2.909,241,2.909,242,2.909,243,2.947,244,4.177,245,4.427,246,4.02,247,2.909,248,2.909,249,4.715,250,3.412]],["title/classes/FindAirportDto.html",[0,0.031,76,2.427]],["body/classes/FindAirportDto.html",[0,0.039,2,1.323,3,0.289,4,0.223,5,0.256,10,0.511,11,0.021,14,0.289,15,0.017,16,0.017,21,0.511,22,1.398,24,1.916,27,0.552,28,1.039,29,0.829,76,3.89,77,2.434,251,3.875,252,4.699,253,4.545,254,3.104]],["title/classes/FindPathDto.html",[0,0.031,255,2.427]],["body/classes/FindPathDto.html",[0,0.036,2,1.228,3,0.269,4,0.207,5,0.237,10,0.475,11,0.021,14,0.269,15,0.016,16,0.016,21,0.475,22,1.334,27,0.66,28,1.158,29,0.991,77,2.91,233,3.466,235,3.218,252,4.96,254,2.882,255,3.71,256,3.598,257,4.219,258,4.219]],["title/classes/FindRouteDto.html",[0,0.031,259,2.427]],["body/classes/FindRouteDto.html",[0,0.039,2,1.323,3,0.289,4,0.223,5,0.256,10,0.511,11,0.021,14,0.289,15,0.017,16,0.017,21,0.511,22,1.398,24,1.916,27,0.552,28,1.039,29,0.829,77,2.434,252,4.699,254,3.104,259,3.89,260,3.875,261,4.545]],["title/classes/GenericRepository.html",[0,0.031,38,2.221]],["body/classes/GenericRepository.html",[0,0.028,2,0.951,3,0.208,4,0.16,5,0.184,10,0.368,11,0.022,14,0.208,15,0.014,16,0.014,19,2.859,21,0.368,22,1.123,24,1.007,27,0.641,28,0.963,29,1.044,38,2.859,39,3.988,40,1.492,41,3.905,42,1.268,43,3.456,46,1.332,47,1.189,48,1.332,49,2.639,52,3.124,54,1.492,66,1.674,204,3.045,210,2.785,211,2.468,262,2.785,263,6.019,264,4.574,265,3.267,266,4.875,267,3.267,268,2.785,269,3.267,270,3.267,271,3.267,272,3.267,273,2.785,274,3.267,275,3.267,276,3.267,277,3.267]],["title/injectables/GeolibService.html",[107,1.3,192,2.05]],["body/injectables/GeolibService.html",[0,0.033,3,0.246,4,0.189,5,0.217,10,0.647,11,0.022,14,0.246,15,0.015,16,0.015,21,0.434,27,0.469,29,0.704,32,2.113,40,1.671,46,1.123,47,1.003,48,1.123,54,1.258,61,1.498,66,1.412,82,1.062,107,1.875,108,2.067,192,2.956,234,2.067,278,3.29,279,5.753,280,3.859,281,6.692,282,3.859,283,3.859,284,3.859,285,3.29,286,3.859,287,3.859,288,3.859,289,3.859]],["title/classes/Graph.html",[0,0.031,290,2.05]],["body/classes/Graph.html",[0,0.015,1,4.148,2,0.514,3,0.112,4,0.086,5,0.099,10,0.469,11,0.022,12,2.88,13,1.103,14,0.112,15,0.009,16,0.009,17,1.791,21,0.198,22,0.703,24,1.115,27,0.44,28,0.896,29,0.66,32,1.181,40,0.935,46,0.834,47,0.745,48,0.834,54,0.935,61,2.273,64,2.403,81,2.165,133,2.443,233,1.018,234,1.938,244,1.957,245,1.957,290,2.087,291,1.504,292,2.865,293,3.618,294,3.618,295,1.504,296,1.504,297,1.764,298,2.865,299,1.764,300,2.734,301,2.865,302,2.865,303,4.165,304,4.165,305,2.865,306,2.865,307,2.865,308,2.865,309,3.618,310,1.764,311,3.085,312,1.764,313,2.865,314,3.618,315,4.165,316,3.618,317,2.865,318,1.764,319,2.845,320,1.764,321,2.865,322,1.957,323,2.471,324,2.865,325,1.764,326,1.764,327,1.764,328,3.461,329,1.764,330,1.764,331,2.865,332,1.764,333,1.764,334,1.764,335,4.165,336,1.764,337,1.764,338,1.504,339,1.764,340,1.764,341,1.764,342,1.764,343,1.764,344,1.764,345,1.764,346,1.764,347,1.764,348,1.764,349,1.764,350,3.618,351,2.865,352,1.764,353,1.764,354,2.443,355,1.764,356,1.764,357,1.764,358,1.764,359,1.764,360,3.618,361,1.764,362,1.764,363,1.764,364,1.764,365,2.865,366,1.764,367,1.764]],["title/controllers/GraphController.html",[68,1.661,368,2.427]],["body/controllers/GraphController.html",[0,0.031,3,0.229,4,0.177,5,0.203,10,0.671,11,0.022,14,0.229,15,0.015,16,0.015,21,0.406,27,0.438,29,0.658,40,1.597,46,1.049,47,0.937,48,1.049,54,1.176,61,1.399,66,1.319,68,1.685,70,1.685,72,2.723,77,1.931,82,0.992,88,1.931,233,2.824,235,1.931,255,4.072,290,2.08,368,3.343,369,3.073,370,4.895,371,3.605,372,3.605,373,5.962,374,3.475,375,3.207,376,3.605,377,3.073,378,3.605,379,3.605,380,3.605,381,3.605]],["title/modules/GraphModule.html",[92,1.379,167,2.221]],["body/modules/GraphModule.html",[0,0.028,3,0.208,4,0.16,5,0.184,10,0.702,11,0.022,14,0.208,15,0.014,16,0.014,70,2.138,82,0.899,92,1.776,93,3.599,94,1.527,95,2.138,99,2.45,100,1.75,101,1.75,103,2.285,104,2.859,167,4.251,168,3.599,170,3.9,174,2.785,175,2.785,368,3.605,375,3.959,382,2.785,383,2.785,384,2.785,385,3.267,386,3.267,387,3.267,388,3.267,389,3.988,390,3.267]],["title/injectables/GraphService.html",[107,1.3,375,2.05]],["body/injectables/GraphService.html",[0,0.024,3,0.176,4,0.135,5,0.155,10,0.634,11,0.022,12,1.895,13,1.726,14,0.176,15,0.012,16,0.012,21,0.311,22,0.995,27,0.584,28,1.076,29,0.966,40,1.322,42,1.574,46,1.18,47,1.054,48,1.18,54,0.901,61,1.865,82,0.76,107,1.484,108,1.479,137,4.453,172,2.086,206,2.086,217,5.194,233,2.771,235,2.171,244,1.886,290,3.4,328,2.086,374,3.003,375,2.339,377,2.354,391,2.354,392,4.804,393,4.804,394,4.054,395,2.761,396,6.092,397,4.054,398,4.054,399,2.761,400,2.761,401,2.761,402,2.761,403,2.761,404,2.761,405,2.761,406,2.761,407,2.761,408,2.761,409,2.761,410,2.761,411,2.761]],["title/interfaces/IAirport.html",[20,1.661,412,1.3]],["body/interfaces/IAirport.html",[3,0.255,4,0.196,5,0.225,9,2.307,11,0.021,14,0.334,15,0.016,16,0.016,20,2.452,21,0.45,22,1.288,23,4.246,24,1.915,25,4.246,26,4.246,27,0.784,28,1.209,32,2.731,44,2.5,412,1.464,413,2.142,414,3.022]],["title/interfaces/IConfig.html",[412,1.3,415,2.427]],["body/interfaces/IConfig.html",[3,0.135,4,0.201,5,0.12,10,0.521,11,0.022,14,0.135,15,0.01,16,0.01,21,0.239,22,0.816,23,2.271,24,1.024,25,2.271,26,2.271,27,0.677,28,1.187,32,1.371,47,0.864,49,1.918,61,2.068,66,0.778,73,1.329,103,1.062,151,2.512,183,2.512,198,1.226,235,1.139,412,0.778,413,1.139,415,3.163,416,1.606,417,4.747,418,4.543,419,4.747,420,3.325,421,2.512,422,2.126,423,3.325,424,3.325,425,3.325,426,2.126,427,2.126,428,1.606,429,5.487,430,2.835,431,2.835,432,2.835,433,2.835,434,2.835,435,2.835,436,2.835,437,2.835,438,2.835,439,2.271,440,2.271,441,2.271,442,2.271,443,2.835,444,2.835,445,2.835,446,1.606,447,1.813,448,1.606,449,1.813,450,1.813,451,1.813,452,1.606,453,1.813,454,2.835,455,1.813,456,1.813,457,1.813,458,1.813,459,1.813,460,1.813,461,1.606,462,1.813,463,1.813,464,2.835,465,1.813,466,1.813,467,1.813,468,1.813,469,1.813,470,2.126,471,2.126]],["title/interfaces/IDataServices.html",[207,2.427,412,1.3]],["body/interfaces/IDataServices.html",[3,0.263,4,0.202,5,0.232,10,0.669,11,0.022,14,0.263,15,0.016,16,0.016,20,1.93,21,0.465,22,1.315,27,0.651,73,3.934,198,3.63,201,1.811,204,3.924,207,3.659,211,3.119,412,1.511,413,2.211,472,3.52,473,3.52,474,4.129,475,4.129,476,4.129]],["title/interfaces/IGenericRepository.html",[204,2.05,412,1.3]],["body/interfaces/IGenericRepository.html",[3,0.27,4,0.208,5,0.239,11,0.021,14,0.27,15,0.016,16,0.016,21,0.477,24,1.307,27,0.516,28,1.099,29,0.995,40,1.778,41,4.342,46,1.235,47,1.103,48,1.235,52,3.724,54,1.778,204,3.145,266,5.421,412,1.553,413,2.273,477,5.136,478,3.617,479,4.243,480,4.243]],["title/interfaces/IRoute.html",[201,1.558,412,1.3]],["body/interfaces/IRoute.html",[3,0.261,4,0.201,5,0.231,11,0.021,14,0.261,15,0.016,16,0.016,21,0.462,22,1.31,27,0.763,28,1.299,201,2.341,412,1.503,413,2.2,439,4.289,440,4.289,441,4.289,442,4.289,481,3.501]],["title/interfaces/IShortestPathResult.html",[374,2.221,412,1.3]],["body/interfaces/IShortestPathResult.html",[3,0.267,4,0.206,5,0.236,10,0.472,11,0.021,12,2.959,13,2.623,14,0.267,15,0.016,16,0.016,21,0.472,22,1.329,27,0.728,28,1.094,32,2.471,151,4.784,245,4.324,328,4.784,374,3.384,412,1.536,413,2.248,482,3.578]],["title/classes/InvalidIataError.html",[0,0.031,57,2.427]],["body/classes/InvalidIataError.html",[0,0.038,2,1.3,3,0.284,4,0.219,5,0.251,8,3.249,11,0.021,14,0.284,15,0.017,16,0.017,24,1.901,27,0.543,28,1.126,29,0.815,42,1.733,46,1.3,47,1.161,48,1.3,57,3.847,483,3.807,484,5.632,485,5.632,486,4.465,487,4.465,488,4.465]],["title/classes/MinDistanceList.html",[0,0.031,319,2.427]],["body/classes/MinDistanceList.html",[0,0.042,2,1.415,3,0.309,4,0.238,5,0.273,7,3.673,8,3.425,9,3.425,10,0.547,11,0.021,13,3.039,14,0.309,15,0.018,16,0.018,234,2.604,243,3.039,319,4.055,489,3.039]],["title/classes/MinHeap.html",[0,0.031,323,2.427]],["body/classes/MinHeap.html",[0,0.037,2,1.235,3,0.27,4,0.208,5,0.239,8,3.145,10,0.477,11,0.021,14,0.347,15,0.016,16,0.016,27,0.516,28,0.774,29,0.774,32,1.749,42,2.339,61,1.647,322,4.115,323,3.724,489,3.408,490,2.898,491,5.421,492,4.243,493,3.617,494,3.206,495,3.617,496,3.617,497,3.617,498,4.243]],["title/classes/Route.html",[0,0.031,499,2.427]],["body/classes/Route.html",[0,0.034,2,1.141,3,0.249,4,0.192,5,0.22,10,0.441,11,0.021,14,0.249,15,0.016,16,0.016,19,3.236,21,0.441,22,1.271,27,0.749,28,1.244,29,1.125,201,2.542,212,2.96,439,3.959,440,3.959,441,3.959,442,3.959,499,3.535,500,3.34,501,3.918,502,3.918,503,3.918,504,3.918]],["title/classes/RouteRepository.html",[0,0.031,214,2.427]],["body/classes/RouteRepository.html",[0,0.027,2,0.901,3,0.197,4,0.152,5,0.174,8,2.54,10,0.628,11,0.022,14,0.197,15,0.013,16,0.013,21,0.348,22,1.081,24,1.357,27,0.623,28,0.935,29,1.019,38,3.832,39,3.872,40,1.436,41,3.813,42,1.202,43,3.327,46,1.282,47,1.144,48,1.282,49,1.786,50,4.37,51,2.639,52,3.007,53,2.639,54,1.436,56,2.639,60,2.639,66,1.612,201,2.917,212,2.339,214,3.007,268,2.639,499,2.114,505,2.639,506,3.096,507,3.096,508,2.639,509,2.339,510,3.096,511,3.096,512,3.096,513,3.096]],["title/controllers/RoutesController.html",[68,1.661,514,2.427]],["body/controllers/RoutesController.html",[0,0.031,3,0.232,4,0.178,5,0.205,10,0.673,11,0.022,14,0.232,15,0.015,16,0.015,21,0.409,24,1.121,27,0.442,29,0.664,40,1.607,46,1.059,47,0.946,48,1.059,54,1.187,61,1.413,66,1.332,68,1.701,70,1.701,72,2.749,74,3.722,75,3.103,77,1.949,78,4.2,80,4.2,81,2.749,82,1.001,88,1.949,89,3.103,90,3.103,198,2.099,201,2.449,259,4.088,514,3.365,515,3.103,516,3.639,517,2.992,518,3.639,519,3.103,520,3.639,521,3.639,522,3.639]],["title/modules/RoutesModule.html",[92,1.379,168,2.05]],["body/modules/RoutesModule.html",[0,0.033,3,0.246,4,0.189,5,0.217,10,0.647,11,0.021,14,0.246,15,0.015,16,0.015,70,2.395,82,1.062,92,1.989,94,1.804,95,2.395,99,2.745,100,2.067,101,2.067,103,2.559,104,3.203,168,3.86,514,3.929,517,3.777,523,3.29,524,3.29,525,3.29,526,3.859,527,3.859,528,3.859]],["title/injectables/RoutesService.html",[107,1.3,517,1.903]],["body/injectables/RoutesService.html",[0,0.028,3,0.209,4,0.161,5,0.185,10,0.645,11,0.022,14,0.209,15,0.014,16,0.014,21,0.369,24,1.414,27,0.558,28,0.965,29,0.965,40,1.496,42,1.274,46,1.336,47,1.192,48,1.336,49,1.893,54,1.496,61,1.274,66,1.679,82,0.903,88,1.757,107,1.679,108,1.757,110,4.884,111,2.797,112,3.346,117,2.797,118,2.479,198,1.893,201,2.644,508,2.797,509,2.479,517,2.457,519,2.797,529,2.797,530,4.588,531,3.281,532,3.281,533,4.588,534,3.281,535,4.588,536,3.281,537,3.281]],["title/coverage.html",[538,3.662]],["body/coverage.html",[0,0.055,1,1.254,5,0.103,6,1.565,7,2.236,9,1.059,11,0.022,12,0.858,15,0.009,16,0.009,17,1.148,18,1.565,20,0.858,27,0.223,36,1.254,37,1.565,38,1.148,57,1.254,64,1.059,68,1.993,69,1.254,71,1.565,76,1.254,83,0.983,107,1.829,109,1.565,112,0.983,121,1.387,122,1.565,154,1.254,155,1.565,158,1.059,185,1.565,192,1.059,196,1.565,197,1.565,201,0.805,204,1.059,207,1.254,214,1.254,228,1.387,230,1.387,232,2.236,234,0.983,243,1.148,251,1.565,255,1.254,256,1.565,259,1.254,260,1.565,262,1.565,278,1.565,290,1.059,291,1.565,319,1.254,323,1.254,354,6.057,368,1.254,369,1.565,374,1.148,375,1.059,389,1.387,391,1.565,412,1.829,414,1.387,415,1.254,416,3.776,428,1.387,446,2.236,448,1.387,452,1.387,461,1.387,472,1.565,473,1.565,477,1.565,478,1.565,481,1.565,482,1.565,483,1.565,489,2.324,490,2.021,494,1.387,499,1.254,500,1.565,505,1.565,514,1.254,515,1.565,517,0.983,529,1.565,538,1.387,539,1.836,540,1.836,541,1.836,542,4.998,543,5.926,544,6.223,545,5.797,546,4.264,547,1.565,548,5.646,549,2.523,550,1.565,551,1.565,552,1.836,553,1.565,554,1.836,555,1.836,556,1.565,557,1.836,558,1.836]],["title/dependencies.html",[95,1.997,559,2.53]],["body/dependencies.html",[11,0.022,15,0.016,16,0.016,82,1.148,95,1.951,136,3.558,172,3.153,254,2.851,285,3.558,421,3.153,491,3.558,493,3.558,509,3.153,560,5.977,561,5.394,562,4.174,563,4.174,564,4.174,565,4.174,566,4.174,567,4.174,568,4.174,569,4.174,570,4.174,571,4.174,572,4.174,573,4.174,574,4.174,575,4.174,576,4.174,577,4.174,578,4.174,579,4.174]],["title/miscellaneous/functions.html",[580,1.712,581,3.643]],["body/miscellaneous/functions.html",[11,0.019,15,0.019,16,0.019,21,0.596,551,4.517,553,5.671,580,3.056,581,4.517,582,5.298]],["title/index.html",[21,0.334,583,2.968,584,2.968]],["body/index.html",[4,0.164,11,0.021,15,0.014,16,0.014,273,2.858,300,2.533,311,2.858,538,2.533,585,3.353,586,3.353,587,4.657,588,3.353,589,3.353,590,3.353,591,3.353,592,3.353,593,3.353,594,5.352,595,3.353,596,3.353,597,3.353,598,6.45,599,3.353,600,3.353,601,3.353,602,6.289,603,3.353,604,4.657,605,3.353,606,3.353,607,3.353,608,3.353,609,4.657,610,4.657,611,3.353,612,3.353,613,3.353,614,4.657,615,4.657,616,3.353,617,3.353,618,3.353,619,3.353,620,3.353,621,2.858,622,3.353,623,3.353,624,3.353,625,3.353,626,3.353,627,3.353,628,3.353,629,3.353,630,3.353,631,3.353,632,2.858,633,3.353,634,3.353,635,3.353,636,3.353,637,3.353,638,3.353,639,2.858]],["title/modules.html",[94,2.266]],["body/modules.html",[11,0.017,15,0.017,16,0.017,93,2.637,94,2.137,161,3.122,165,2.858,166,2.858,167,2.858,168,2.637,621,5.85,640,6.861,641,6.861,642,6.861]],["title/overview.html",[643,4.133]],["body/overview.html",[2,0.804,11,0.021,15,0.012,16,0.012,70,1.291,83,3.263,93,3.514,94,1.291,95,1.895,96,2.354,97,2.354,98,2.354,99,2.171,100,1.479,101,1.479,108,1.479,112,3.263,158,2.771,161,4.626,162,2.354,163,2.354,164,2.354,165,3.685,166,3.685,167,4.052,168,3.514,189,2.354,190,2.354,191,2.354,192,3.514,223,2.354,224,2.354,225,2.354,375,3.514,382,2.354,383,2.354,384,2.354,413,1.479,517,3.263,523,2.354,524,2.354,525,2.354,643,2.354,644,4.804,645,2.761,646,2.761]],["title/properties.html",[22,1.049,559,2.53]],["body/properties.html",[11,0.021,15,0.019,16,0.019,22,1.274,300,3.921,632,4.425,639,4.425,647,5.19,648,5.19,649,5.19]],["title/miscellaneous/typealiases.html",[580,1.712,650,4.273]],["body/miscellaneous/typealiases.html",[9,2.877,11,0.018,15,0.018,16,0.018,21,0.561,27,0.606,28,0.91,32,2.056,44,3.77,322,4.119,414,3.768,489,3.118,490,4.119,580,2.877,651,4.988,652,4.253,653,4.988]],["title/miscellaneous/variables.html",[580,1.712,654,3.643]],["body/miscellaneous/variables.html",[4,0.134,9,2.324,11,0.022,12,1.279,15,0.008,16,0.008,21,0.188,23,1.87,24,0.843,25,1.87,26,1.87,27,0.614,28,0.921,32,1.129,44,1.043,47,0.711,49,2.324,61,1.856,64,2.008,66,1.274,73,1.711,83,1.865,103,0.833,124,1.422,183,2.068,192,2.008,198,1.579,201,0.732,206,1.26,228,2.068,230,2.068,234,1.466,235,0.893,290,2.324,295,4.908,296,4.908,322,1.87,338,1.422,389,2.068,415,1.87,416,1.26,417,2.968,418,2.334,419,2.968,421,1.26,428,2.068,429,5.18,430,2.334,431,2.334,432,2.334,433,2.334,434,2.334,435,2.334,436,2.334,437,2.334,438,2.334,439,1.87,440,1.87,441,1.87,442,1.87,443,2.334,444,2.334,445,2.334,446,3.044,447,2.334,448,2.068,449,1.422,450,1.422,451,1.422,452,2.068,453,1.422,454,2.334,455,1.422,456,1.422,457,1.422,458,1.422,459,1.422,460,1.422,461,2.068,462,1.422,463,1.422,464,2.334,465,1.422,466,1.422,467,1.422,468,1.422,469,1.422,489,1.043,490,1.87,494,2.068,495,1.422,496,1.422,497,1.422,517,1.466,547,1.422,549,1.422,550,1.422,556,1.422,580,0.962,652,1.422,654,1.422,655,2.737,656,4.448,657,1.668,658,1.668,659,1.668,660,3.481,661,3.481,662,1.668,663,2.737,664,1.668,665,1.668,666,1.668,667,1.668,668,1.668,669,1.668,670,1.668,671,3.481,672,1.668,673,1.668,674,1.668,675,1.668,676,1.668,677,1.668,678,1.668]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":354,"title":{},"body":{"classes/Graph.html":{},"coverage.html":{}}}],["0.0.1",{"_index":648,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":646,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":645,"title":{},"body":{"overview.html":{}}}],["4.17.21",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":644,"title":{},"body":{"overview.html":{}}}],["6.0.4",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":345,"title":{},"body":{"classes/Graph.html":{}}}],["9.0.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":508,"title":{},"body":{"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["_.filter(routes",{"_index":536,"title":{},"body":{"injectables/RoutesService.html":{}}}],["_.find(this._data",{"_index":511,"title":{},"body":{"classes/RouteRepository.html":{}}}],["__dirname",{"_index":450,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["_data",{"_index":39,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["_graph",{"_index":392,"title":{},"body":{"injectables/GraphService.html":{}}}],["_maxlegs",{"_index":393,"title":{},"body":{"injectables/GraphService.html":{}}}],["a[1",{"_index":496,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":326,"title":{},"body":{"classes/Graph.html":{}}}],["addedge",{"_index":292,"title":{},"body":{"classes/Graph.html":{}}}],["addedge(iata",{"_index":298,"title":{},"body":{"classes/Graph.html":{}}}],["adjacency",{"_index":340,"title":{},"body":{"classes/Graph.html":{}}}],["adjacencylist",{"_index":1,"title":{"classes/AdjacencyList.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"coverage.html":{}}}],["adjacencylist.get(vertex",{"_index":363,"title":{},"body":{"classes/Graph.html":{}}}],["adjacencylist.keys",{"_index":348,"title":{},"body":{"classes/Graph.html":{}}}],["airline",{"_index":437,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airlineid",{"_index":438,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airport",{"_index":17,"title":{"classes/Airport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/Graph.html":{},"coverage.html":{}}}],["airport.interface",{"_index":475,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["airportdata",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["airportid",{"_index":23,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airportrepository",{"_index":36,"title":{"classes/AirportRepository.html":{}},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["airportrepository(this.airportdata",{"_index":220,"title":{},"body":{"injectables/DataService.html":{}}}],["airports",{"_index":73,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/DataService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"miscellaneous/variables.html":{}}}],["airports.foreach((srcairport",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airports_data",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportscontroller",{"_index":69,"title":{"controllers/AirportsController.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"coverage.html":{}}}],["airportsdataprovider",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["airportsmodule",{"_index":93,"title":{"modules/AirportsModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["airportsservice",{"_index":83,"title":{"injectables/AirportsService.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["airportsservice.findall",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportsservice.findone(route.destinationairport",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algo",{"_index":344,"title":{},"body":{"classes/Graph.html":{}}}],["algorithm",{"_index":315,"title":{},"body":{"classes/Graph.html":{}}}],["aliases",{"_index":651,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":121,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["altitude",{"_index":433,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":622,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":252,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{}}}],["app",{"_index":600,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":154,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":593,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":158,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.from(this._data.values",{"_index":67,"title":{},"body":{"classes/AirportRepository.html":{}}}],["async",{"_index":453,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":632,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":464,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":495,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["b[1",{"_index":497,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":623,"title":{},"body":{"index.html":{}}}],["between",{"_index":308,"title":{},"body":{"classes/Graph.html":{}}}],["bootstrap",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":362,"title":{},"body":{"classes/Graph.html":{}}}],["browse",{"_index":642,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"modules.html":{}}}],["building",{"_index":588,"title":{},"body":{"index.html":{}}}],["catch",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cellparser",{"_index":424,"title":{},"body":{"interfaces/IConfig.html":{}}}],["checktype",{"_index":456,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":430,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"overview.html":{}}}],["cluster_airportsmodule",{"_index":96,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_exports",{"_index":97,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_providers",{"_index":98,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":189,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":190,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":191,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":223,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_graphmodule",{"_index":382,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_exports",{"_index":384,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_imports",{"_index":385,"title":{},"body":{"modules/GraphModule.html":{}}}],["cluster_graphmodule_providers",{"_index":383,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_routesmodule",{"_index":523,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_exports",{"_index":524,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_providers",{"_index":525,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["code",{"_index":488,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["codeshare",{"_index":443,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["colparser",{"_index":417,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["columnparam",{"_index":425,"title":{},"body":{"interfaces/IConfig.html":{}}}],["common/common.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":165,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":454,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.colparser",{"_index":457,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.dat",{"_index":460,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.json",{"_index":468,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.headers",{"_index":458,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":396,"title":{},"body":{"injectables/GraphService.html":{}}}],["configservice.get('maxlegs",{"_index":404,"title":{},"body":{"injectables/GraphService.html":{}}}],["configuration",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["conifgs",{"_index":428,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conifgs.map(async",{"_index":462,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":306,"title":{},"body":{"classes/Graph.html":{}}}],["console.log('done",{"_index":471,"title":{},"body":{"interfaces/IConfig.html":{}}}],["const",{"_index":61,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"classes/MinHeap.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GraphService.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["constructor(airportdata",{"_index":199,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(data",{"_index":43,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["constructor(dataservice",{"_index":111,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["constructor(graph",{"_index":395,"title":{},"body":{"injectables/GraphService.html":{}}}],["constructor(httpadapterhost",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(iata",{"_index":485,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["constructor(previousedge",{"_index":246,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["constructor(src",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["controller",{"_index":68,"title":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["controller('airports",{"_index":87,"title":{},"body":{"controllers/AirportsController.html":{}}}],["controller('graph",{"_index":379,"title":{},"body":{"controllers/GraphController.html":{}}}],["controller('routes",{"_index":521,"title":{},"body":{"controllers/RoutesController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["conversion",{"_index":461,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertdistance",{"_index":283,"title":{},"body":{"injectables/GeolibService.html":{}}}],["convertdistance(distance",{"_index":288,"title":{},"body":{"injectables/GeolibService.html":{}}}],["country",{"_index":431,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":538,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["csv",{"_index":421,"title":{},"body":{"interfaces/IConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["csvtojson",{"_index":422,"title":{},"body":{"interfaces/IConfig.html":{}}}],["csvtojson/v2/parameters",{"_index":426,"title":{},"body":{"interfaces/IConfig.html":{}}}],["ctx",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["currentdistance",{"_index":365,"title":{},"body":{"classes/Graph.html":{}}}],["currentmindistance",{"_index":360,"title":{},"body":{"classes/Graph.html":{}}}],["currentpath",{"_index":366,"title":{},"body":{"classes/Graph.html":{}}}],["customprioritycomparator",{"_index":494,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":49,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["data.sourceairport",{"_index":537,"title":{},"body":{"injectables/RoutesService.html":{}}}],["data_dir",{"_index":446,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":451,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["database/entities/airport.entity",{"_index":59,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/entities/route.entity",{"_index":510,"title":{},"body":{"classes/RouteRepository.html":{}}}],["database/errors",{"_index":58,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/interfaces/airport.interface",{"_index":85,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{}}}],["database/interfaces/route.interface",{"_index":519,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["database/providers/airport.provider",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/providers/route.provider",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/services/data",{"_index":117,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["database_data_dir",{"_index":448,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":166,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataservice",{"_index":112,"title":{"injectables/DataService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{}}}],["date().toisostring",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["decorators",{"_index":77,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["default",{"_index":295,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":300,"title":{},"body":{"classes/Graph.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["destairport",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destairport.iata",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destinationairport",{"_index":441,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["destinationairportid",{"_index":442,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":601,"title":{},"body":{"index.html":{}}}],["dijkstra",{"_index":294,"title":{},"body":{"classes/Graph.html":{}}}],["dijkstra's",{"_index":314,"title":{},"body":{"classes/Graph.html":{}}}],["dijkstra(adjacencylist",{"_index":310,"title":{},"body":{"classes/Graph.html":{}}}],["disable",{"_index":270,"title":{},"body":{"classes/GenericRepository.html":{}}}],["distance",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["dst",{"_index":434,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":338,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":611,"title":{},"body":{"index.html":{}}}],["edge",{"_index":12,"title":{"classes/Edge.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edge(srcairport.iata",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edges",{"_index":328,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{}}}],["edges.length",{"_index":411,"title":{},"body":{"injectables/GraphService.html":{}}}],["edges.push(edge",{"_index":330,"title":{},"body":{"classes/Graph.html":{}}}],["edgetracker",{"_index":243,"title":{"classes/EdgeTracker.html":{}},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["efficient",{"_index":589,"title":{},"body":{"index.html":{}}}],["equipment",{"_index":445,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":484,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["eslint",{"_index":269,"title":{},"body":{"classes/GenericRepository.html":{}}}],["eslint/no",{"_index":274,"title":{},"body":{"classes/GenericRepository.html":{}}}],["exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.tostring",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":14,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["exports",{"_index":104,"title":{},"body":{"modules/AirportsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["express",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/AirportRepository.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/RouteRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["filename",{"_index":418,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["findairportdto",{"_index":76,"title":{"classes/FindAirportDto.html":{}},"body":{"controllers/AirportsController.html":{},"classes/FindAirportDto.html":{},"coverage.html":{}}}],["findall",{"_index":110,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["findallforairport",{"_index":530,"title":{},"body":{"injectables/RoutesService.html":{}}}],["findallforairport(iata",{"_index":533,"title":{},"body":{"injectables/RoutesService.html":{}}}],["findone",{"_index":74,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/RoutesController.html":{}}}],["findone(@param",{"_index":89,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findone(iata",{"_index":115,"title":{},"body":{"injectables/AirportsService.html":{}}}],["findone(params",{"_index":75,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findpath",{"_index":370,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(@query",{"_index":380,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(query",{"_index":371,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpathdto",{"_index":255,"title":{"classes/FindPathDto.html":{}},"body":{"classes/FindPathDto.html":{},"controllers/GraphController.html":{},"coverage.html":{}}}],["findroutedto",{"_index":259,"title":{"classes/FindRouteDto.html":{}},"body":{"classes/FindRouteDto.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["findshortestpath",{"_index":394,"title":{},"body":{"injectables/GraphService.html":{}}}],["findshortestpath(src",{"_index":398,"title":{},"body":{"injectables/GraphService.html":{}}}],["flight",{"_index":305,"title":{},"body":{"classes/Graph.html":{}}}],["framework",{"_index":587,"title":{},"body":{"index.html":{}}}],["fromfile(path.join(data_dir",{"_index":459,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":423,"title":{},"body":{"interfaces/IConfig.html":{}}}],["fs.writefilesync",{"_index":466,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":581,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geeksforgeeks",{"_index":318,"title":{},"body":{"classes/Graph.html":{}}}],["geeksforgeeks](https://www.geeksforgeeks.org/dijkstras",{"_index":339,"title":{},"body":{"classes/Graph.html":{}}}],["generic",{"_index":474,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["generic.repository",{"_index":56,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository",{"_index":38,"title":{"classes/GenericRepository.html":{}},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["genericrepository:13",{"_index":53,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository:17",{"_index":507,"title":{},"body":{"classes/RouteRepository.html":{}}}],["genericrepository:21",{"_index":55,"title":{},"body":{"classes/AirportRepository.html":{}}}],["genericrepository:7",{"_index":51,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["geolib",{"_index":285,"title":{},"body":{"injectables/GeolibService.html":{},"dependencies.html":{}}}],["geolib/es/types",{"_index":286,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibinputcoordinates",{"_index":281,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibservice",{"_index":192,"title":{"injectables/GeolibService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/GeolibService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["geolibservice.getdistanceinkm(srcairport",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':iata",{"_index":78,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["get(iata",{"_index":52,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getall",{"_index":41,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getdistance",{"_index":284,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistance(from",{"_index":287,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm",{"_index":279,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm(from",{"_index":280,"title":{},"body":{"injectables/GeolibService.html":{}}}],["gethello",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjsonfromcsvfile",{"_index":452,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getjsonfromcsvfile(config",{"_index":465,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":583,"title":{"index.html":{}},"body":{}}],["global",{"_index":194,"title":{},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{}}}],["graph",{"_index":290,"title":{"classes/Graph.html":{}},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph.addedge(srcairport.iata",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph.dijkstra(this._graph.adjacencylist",{"_index":407,"title":{},"body":{"injectables/GraphService.html":{}}}],["graph_data",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphcontroller",{"_index":368,"title":{"controllers/GraphController.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"coverage.html":{}}}],["graphmodule",{"_index":167,"title":{"modules/GraphModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["graphprovider",{"_index":389,"title":{},"body":{"modules/GraphModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphservice",{"_index":375,"title":{"injectables/GraphService.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"coverage.html":{},"overview.html":{}}}],["greedy",{"_index":343,"title":{},"body":{"classes/Graph.html":{}}}],["grow",{"_index":618,"title":{},"body":{"index.html":{}}}],["guide",{"_index":317,"title":{},"body":{"classes/Graph.html":{}}}],["hbs",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":419,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["heap",{"_index":491,"title":{},"body":{"classes/MinHeap.html":{},"dependencies.html":{}}}],["heap.model",{"_index":325,"title":{},"body":{"classes/Graph.html":{}}}],["heap.model.ts",{"_index":490,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["heap.model.ts:7",{"_index":492,"title":{},"body":{"classes/MinHeap.html":{}}}],["heapitem",{"_index":322,"title":{},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":629,"title":{},"body":{"index.html":{}}}],["host",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":636,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iairport",{"_index":20,"title":{"interfaces/IAirport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["iairportmap",{"_index":44,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iata",{"_index":24,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/FindAirportDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["icao",{"_index":432,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["iconfig",{"_index":415,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":302,"title":{},"body":{"classes/Graph.html":{}}}],["idataservices",{"_index":207,"title":{"interfaces/IDataServices.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["identifier",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["igenericrepository",{"_index":204,"title":{"interfaces/IGenericRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["implementation",{"_index":316,"title":{},"body":{"classes/Graph.html":{}}}],["implements",{"_index":19,"title":{},"body":{"classes/Airport.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/GenericRepository.html":{},"classes/Route.html":{}}}],["import",{"_index":10,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":350,"title":{},"body":{"classes/Graph.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["inherited",{"_index":50,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["initialdistances",{"_index":347,"title":{},"body":{"classes/Graph.html":{}}}],["initialdistances.push([iata",{"_index":352,"title":{},"body":{"classes/Graph.html":{}}}],["inject",{"_index":206,"title":{},"body":{"injectables/DataService.html":{},"injectables/GraphService.html":{},"miscellaneous/variables.html":{}}}],["inject('airports_data",{"_index":216,"title":{},"body":{"injectables/DataService.html":{}}}],["inject('graph_data",{"_index":402,"title":{},"body":{"injectables/GraphService.html":{}}}],["inject('routes_data",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"overview.html":{}}}],["installation",{"_index":597,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":599,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":412,"title":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{}},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":413,"title":{},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"overview.html":{}}}],["interfaces/airport.interface",{"_index":35,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{}}}],["interfaces/data",{"_index":208,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/generic",{"_index":210,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{}}}],["interfaces/route.interface",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}}}],["invalidiataerror",{"_index":57,"title":{"classes/InvalidIataError.html":{}},"body":{"classes/AirportRepository.html":{},"classes/InvalidIataError.html":{},"coverage.html":{}}}],["invalidiataerror(iata",{"_index":65,"title":{},"body":{"classes/AirportRepository.html":{}}}],["iroute",{"_index":201,"title":{"interfaces/IRoute.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["ishortestpathresult",{"_index":374,"title":{"interfaces/IShortestPathResult.html":{}},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["join",{"_index":625,"title":{},"body":{"index.html":{}}}],["js",{"_index":493,"title":{},"body":{"classes/MinHeap.html":{},"dependencies.html":{}}}],["json.stringify(jsondata",{"_index":469,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["jsondata",{"_index":463,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["kamil",{"_index":633,"title":{},"body":{"index.html":{}}}],["key",{"_index":427,"title":{},"body":{"interfaces/IConfig.html":{}}}],["km",{"_index":289,"title":{},"body":{"injectables/GeolibService.html":{}}}],["latitude",{"_index":25,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":639,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":615,"title":{},"body":{"index.html":{}}}],["line",{"_index":272,"title":{},"body":{"classes/GenericRepository.html":{}}}],["list",{"_index":341,"title":{},"body":{"classes/Graph.html":{}}}],["list.model",{"_index":321,"title":{},"body":{"classes/Graph.html":{}}}],["list.model.ts",{"_index":7,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["literal",{"_index":420,"title":{},"body":{"interfaces/IConfig.html":{}}}],["load",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":509,"title":{},"body":{"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["log(v",{"_index":333,"title":{},"body":{"classes/Graph.html":{}}}],["longitude",{"_index":26,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["lowdb",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":9,"title":{},"body":{"classes/AdjacencyList.html":{},"interfaces/IAirport.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":16,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":40,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["mimdistances",{"_index":406,"title":{},"body":{"injectables/GraphService.html":{}}}],["mimdistances.get(dest",{"_index":409,"title":{},"body":{"injectables/GraphService.html":{}}}],["mindistancelist",{"_index":319,"title":{"classes/MinDistanceList.html":{}},"body":{"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["mindistances",{"_index":346,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.get(dest",{"_index":367,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.set(iata",{"_index":349,"title":{},"body":{"classes/Graph.html":{}}}],["mindistances.set(start",{"_index":353,"title":{},"body":{"classes/Graph.html":{}}}],["minheap",{"_index":323,"title":{"classes/MinHeap.html":{}},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"coverage.html":{}}}],["minheap.init(initialdistances",{"_index":355,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.isempty",{"_index":358,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.poll",{"_index":361,"title":{},"body":{"classes/Graph.html":{}}}],["minheap.replace([start",{"_index":357,"title":{},"body":{"classes/Graph.html":{}}}],["miscellaneous",{"_index":580,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":614,"title":{},"body":{"index.html":{}}}],["mode",{"_index":604,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/airports/airports.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/airports/controllers/airports.controller",{"_index":106,"title":{},"body":{"modules/AirportsModule.html":{}}}],["modules/airports/dto/airports.dto",{"_index":86,"title":{},"body":{"controllers/AirportsController.html":{}}}],["modules/airports/services/airports.service",{"_index":84,"title":{},"body":{"controllers/AirportsController.html":{}}}],["modules/graph/controllers/graph.controller",{"_index":388,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/dto/graph.dto",{"_index":378,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/graph/graph.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/graph/interfaces/graph.interface",{"_index":377,"title":{},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["modules/graph/models/adjacency",{"_index":320,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/models/edge.model",{"_index":13,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinDistanceList.html":{}}}],["modules/graph/models/graph.model",{"_index":401,"title":{},"body":{"injectables/GraphService.html":{}}}],["modules/graph/models/min",{"_index":324,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/providers/graph.provider",{"_index":390,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/services/graph.service",{"_index":376,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/routes/controllers/routes.controller",{"_index":528,"title":{},"body":{"modules/RoutesModule.html":{}}}],["modules/routes/dto/routes.dto",{"_index":520,"title":{},"body":{"controllers/RoutesController.html":{}}}],["modules/routes/routes.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/routes/services/routes.service",{"_index":518,"title":{},"body":{"controllers/RoutesController.html":{}}}],["more",{"_index":628,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":634,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":594,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":638,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":82,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/GeolibService.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":254,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"dependencies.html":{}}}],["new",{"_index":64,"title":{},"body":{"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Graph.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":271,"title":{},"body":{"classes/GenericRepository.html":{}}}],["node.js",{"_index":586,"title":{},"body":{"index.html":{}}}],["noheader",{"_index":455,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":598,"title":{},"body":{"index.html":{}}}],["null",{"_index":351,"title":{},"body":{"classes/Graph.html":{}}}],["number",{"_index":32,"title":{},"body":{"classes/Airport.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":512,"title":{},"body":{"classes/RouteRepository.html":{}}}],["o((v+e",{"_index":332,"title":{},"body":{"classes/Graph.html":{}}}],["o(1",{"_index":359,"title":{},"body":{"classes/Graph.html":{}}}],["o(e",{"_index":364,"title":{},"body":{"classes/Graph.html":{}}}],["o(log(v",{"_index":356,"title":{},"body":{"classes/Graph.html":{}}}],["o(v",{"_index":335,"title":{},"body":{"classes/Graph.html":{}}}],["o.sourceairport",{"_index":513,"title":{},"body":{"classes/RouteRepository.html":{}}}],["object",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":429,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":616,"title":{},"body":{"index.html":{}}}],["optional",{"_index":48,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["out",{"_index":101,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["overview",{"_index":643,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":559,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":81,"title":{},"body":{"controllers/AirportsController.html":{},"classes/Graph.html":{},"controllers/RoutesController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["params",{"_index":80,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["params.iata",{"_index":90,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["parse",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{}}}],["path.join",{"_index":449,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":447,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(database_data_dir",{"_index":467,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":626,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["previousedge",{"_index":244,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/DataService.html":{},"injectables/GraphService.html":{}}}],["production",{"_index":606,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":585,"title":{},"body":{"index.html":{}}}],["project",{"_index":617,"title":{},"body":{"index.html":{}}}],["promise.all(conversion).then",{"_index":470,"title":{},"body":{"interfaces/IConfig.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"properties.html":{}}}],["provide",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":103,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"interfaces/IConfig.html":{},"modules/RoutesModule.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":373,"title":{},"body":{"controllers/GraphController.html":{}}}],["rawdata",{"_index":263,"title":{},"body":{"classes/GenericRepository.html":{}}}],["read",{"_index":627,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/GraphService.html":{}}}],["reflect",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["repositories/airport.repository",{"_index":213,"title":{},"body":{"injectables/DataService.html":{}}}],["repositories/route.repository",{"_index":215,"title":{},"body":{"injectables/DataService.html":{}}}],["repository",{"_index":596,"title":{},"body":{"index.html":{}}}],["repository.interface",{"_index":211,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{}}}],["repository.interface.ts",{"_index":478,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["repository.interface.ts:2",{"_index":480,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["repository.interface.ts:3",{"_index":479,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["representation",{"_index":342,"title":{},"body":{"classes/Graph.html":{}}}],["represented",{"_index":303,"title":{},"body":{"classes/Graph.html":{}}}],["reset",{"_index":100,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["responsebody",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["results",{"_index":15,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"controllers/GraphController.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":54,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["rimraf",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":499,"title":{"classes/Route.html":{}},"body":{"classes/Route.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["route.interface",{"_index":476,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["routedata",{"_index":200,"title":{},"body":{"injectables/DataService.html":{}}}],["routerepository",{"_index":214,"title":{"classes/RouteRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["routerepository(this.routedata",{"_index":222,"title":{},"body":{"injectables/DataService.html":{}}}],["routes",{"_index":198,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["routes.foreach((route",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes_data",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routescontroller",{"_index":514,"title":{"controllers/RoutesController.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"coverage.html":{}}}],["routesdataprovider",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeservice",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routeservice.findallforairport(srcairport.iata",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routesmodule",{"_index":168,"title":{"modules/RoutesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routesservice",{"_index":517,"title":{"injectables/RoutesService.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":602,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":590,"title":{},"body":{"index.html":{}}}],["scripts/.../generatejson.ts",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts/generatejson.ts",{"_index":416,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":313,"title":{},"body":{"classes/Graph.html":{}}}],["server",{"_index":591,"title":{},"body":{"index.html":{}}}],["service.interface",{"_index":209,"title":{},"body":{"injectables/DataService.html":{}}}],["service.interface.ts",{"_index":473,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["service.service",{"_index":118,"title":{},"body":{"injectables/AirportsService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{}}}],["service.service.ts",{"_index":197,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["service.service.ts:11",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["service.service.ts:12",{"_index":202,"title":{},"body":{"injectables/DataService.html":{}}}],["services/airports.service",{"_index":105,"title":{},"body":{"modules/AirportsModule.html":{}}}],["services/data",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/geolib/geolib.service",{"_index":195,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/graph.service",{"_index":387,"title":{},"body":{"modules/GraphModule.html":{}}}],["services/routes.service",{"_index":527,"title":{},"body":{"modules/RoutesModule.html":{}}}],["shortestpathtodest",{"_index":408,"title":{},"body":{"injectables/GraphService.html":{}}}],["shortestpathtodest.previousedge",{"_index":410,"title":{},"body":{"injectables/GraphService.html":{}}}],["side",{"_index":592,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sourceairport",{"_index":439,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["sourceairportid",{"_index":440,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":336,"title":{},"body":{"classes/Graph.html":{}}}],["sponsors",{"_index":620,"title":{},"body":{"index.html":{}}}],["src",{"_index":235,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["src/.../airport.interface.ts",{"_index":653,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../airport.provider.ts",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configuration.ts",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.provider.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../min",{"_index":652,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route.provider.ts",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":193,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:11",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exception.filter.ts:14",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/services/geolib/geolib.service.ts",{"_index":278,"title":{},"body":{"injectables/GeolibService.html":{},"coverage.html":{}}}],["src/common/services/geolib/geolib.service.ts:7",{"_index":282,"title":{},"body":{"injectables/GeolibService.html":{}}}],["src/config/configuration.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/airport.entity.ts",{"_index":18,"title":{},"body":{"classes/Airport.html":{},"coverage.html":{}}}],["src/database/entities/airport.entity.ts:4",{"_index":30,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:5",{"_index":31,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:6",{"_index":33,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:7",{"_index":34,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/route.entity.ts",{"_index":500,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/database/entities/route.entity.ts:4",{"_index":503,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:5",{"_index":504,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:6",{"_index":501,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:7",{"_index":502,"title":{},"body":{"classes/Route.html":{}}}],["src/database/errors/index.ts",{"_index":483,"title":{},"body":{"classes/InvalidIataError.html":{},"coverage.html":{}}}],["src/database/errors/index.ts:1",{"_index":486,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["src/database/interfaces/airport.interface.ts",{"_index":414,"title":{},"body":{"interfaces/IAirport.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/database/interfaces/data",{"_index":472,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["src/database/interfaces/generic",{"_index":477,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["src/database/interfaces/route.interface.ts",{"_index":481,"title":{},"body":{"interfaces/IRoute.html":{},"coverage.html":{}}}],["src/database/providers/airport.provider.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/route.provider.ts",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/repositories/airport.repository.ts",{"_index":37,"title":{},"body":{"classes/AirportRepository.html":{},"coverage.html":{}}}],["src/database/repositories/airport.repository.ts:7",{"_index":45,"title":{},"body":{"classes/AirportRepository.html":{}}}],["src/database/repositories/generic.repository.ts",{"_index":262,"title":{},"body":{"classes/GenericRepository.html":{},"coverage.html":{}}}],["src/database/repositories/generic.repository.ts:11",{"_index":265,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:15",{"_index":267,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:4",{"_index":264,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/route.repository.ts",{"_index":505,"title":{},"body":{"classes/RouteRepository.html":{},"coverage.html":{}}}],["src/database/repositories/route.repository.ts:7",{"_index":506,"title":{},"body":{"classes/RouteRepository.html":{}}}],["src/database/services/data",{"_index":196,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/airports/airports.module.ts",{"_index":102,"title":{},"body":{"modules/AirportsModule.html":{}}}],["src/modules/airports/controllers/airports.controller.ts",{"_index":71,"title":{},"body":{"controllers/AirportsController.html":{},"coverage.html":{}}}],["src/modules/airports/controllers/airports.controller.ts:11",{"_index":79,"title":{},"body":{"controllers/AirportsController.html":{}}}],["src/modules/airports/dto/airports.dto.ts",{"_index":251,"title":{},"body":{"classes/FindAirportDto.html":{},"coverage.html":{}}}],["src/modules/airports/dto/airports.dto.ts:5",{"_index":253,"title":{},"body":{"classes/FindAirportDto.html":{}}}],["src/modules/airports/services/airports.service.ts",{"_index":109,"title":{},"body":{"injectables/AirportsService.html":{},"coverage.html":{}}}],["src/modules/airports/services/airports.service.ts:10",{"_index":114,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:14",{"_index":116,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:7",{"_index":113,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/graph/controllers/graph.controller.ts",{"_index":369,"title":{},"body":{"controllers/GraphController.html":{},"coverage.html":{}}}],["src/modules/graph/controllers/graph.controller.ts:11",{"_index":372,"title":{},"body":{"controllers/GraphController.html":{}}}],["src/modules/graph/dto/graph.dto.ts",{"_index":256,"title":{},"body":{"classes/FindPathDto.html":{},"coverage.html":{}}}],["src/modules/graph/dto/graph.dto.ts:5",{"_index":258,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/dto/graph.dto.ts:8",{"_index":257,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/graph.module.ts",{"_index":386,"title":{},"body":{"modules/GraphModule.html":{}}}],["src/modules/graph/interfaces/graph.interface.ts",{"_index":482,"title":{},"body":{"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["src/modules/graph/models/adjacency",{"_index":6,"title":{},"body":{"classes/AdjacencyList.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts:14",{"_index":250,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:15",{"_index":249,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:2",{"_index":239,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:3",{"_index":238,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:4",{"_index":237,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/graph.model.ts",{"_index":291,"title":{},"body":{"classes/Graph.html":{},"coverage.html":{}}}],["src/modules/graph/models/graph.model.ts:14",{"_index":299,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:28",{"_index":312,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:7",{"_index":297,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/min",{"_index":489,"title":{},"body":{"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/providers/graph.provider.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/services/graph.service.ts",{"_index":391,"title":{},"body":{"injectables/GraphService.html":{},"coverage.html":{}}}],["src/modules/graph/services/graph.service.ts:10",{"_index":397,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:20",{"_index":399,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:9",{"_index":400,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/routes/controllers/routes.controller.ts",{"_index":515,"title":{},"body":{"controllers/RoutesController.html":{},"coverage.html":{}}}],["src/modules/routes/controllers/routes.controller.ts:11",{"_index":516,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/modules/routes/dto/routes.dto.ts",{"_index":260,"title":{},"body":{"classes/FindRouteDto.html":{},"coverage.html":{}}}],["src/modules/routes/dto/routes.dto.ts:5",{"_index":261,"title":{},"body":{"classes/FindRouteDto.html":{}}}],["src/modules/routes/routes.module.ts",{"_index":526,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/modules/routes/services/routes.service.ts",{"_index":529,"title":{},"body":{"injectables/RoutesService.html":{},"coverage.html":{}}}],["src/modules/routes/services/routes.service.ts:11",{"_index":532,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/modules/routes/services/routes.service.ts:15",{"_index":534,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/modules/routes/services/routes.service.ts:8",{"_index":531,"title":{},"body":{"injectables/RoutesService.html":{}}}],["start",{"_index":311,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["start:dev",{"_index":605,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":607,"title":{},"body":{"index.html":{}}}],["started",{"_index":584,"title":{"index.html":{}},"body":{}}],["starter",{"_index":595,"title":{},"body":{"index.html":{}}}],["statements",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":293,"title":{},"body":{"classes/Graph.html":{}}}],["statuscode",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":630,"title":{},"body":{"index.html":{}}}],["stops",{"_index":444,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["super(`invalid",{"_index":487,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["super(customprioritycomparator",{"_index":498,"title":{},"body":{"classes/MinHeap.html":{}}}],["super(data",{"_index":60,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["support",{"_index":621,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":641,"title":{},"body":{"modules.html":{}}}],["t",{"_index":266,"title":{},"body":{"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{}}}],["table",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":610,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":613,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":612,"title":{},"body":{"index.html":{}}}],["tests",{"_index":609,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":619,"title":{},"body":{"index.html":{}}}],["this._data",{"_index":268,"title":{},"body":{"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["this._data.get(iata",{"_index":62,"title":{},"body":{"classes/AirportRepository.html":{}}}],["this._graph",{"_index":405,"title":{},"body":{"injectables/GraphService.html":{}}}],["this._maxlegs",{"_index":403,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.adjacencylist.get(iata",{"_index":329,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.has(iata",{"_index":327,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.set(iata",{"_index":331,"title":{},"body":{"classes/Graph.html":{}}}],["this.airports",{"_index":219,"title":{},"body":{"injectables/DataService.html":{}}}],["this.airportsservice.findone(iata",{"_index":91,"title":{},"body":{"controllers/AirportsController.html":{}}}],["this.appservice.gethello",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dataservice.airports.get(iata",{"_index":120,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.airports.getall",{"_index":119,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.routes.getall",{"_index":535,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.dest",{"_index":241,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.distance",{"_index":242,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.graphservice.findshortestpath(src",{"_index":381,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.httpadapterhost",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.previousedge",{"_index":247,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.routes",{"_index":221,"title":{},"body":{"injectables/DataService.html":{}}}],["this.routesservice.findallforairport(iata",{"_index":522,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.src",{"_index":240,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.totaldistance",{"_index":248,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["throw",{"_index":63,"title":{},"body":{"classes/AirportRepository.html":{}}}],["time",{"_index":334,"title":{},"body":{"classes/Graph.html":{}}}],["timestamp",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timezone",{"_index":436,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["totaldistance",{"_index":245,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"interfaces/IShortestPathResult.html":{}}}],["touch",{"_index":631,"title":{},"body":{"index.html":{}}}],["true",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":637,"title":{},"body":{"index.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":650,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":273,"title":{},"body":{"classes/GenericRepository.html":{},"index.html":{}}}],["tzdatabase",{"_index":435,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"classes/GenericRepository.html":{}}}],["unique",{"_index":301,"title":{},"body":{"classes/Graph.html":{}}}],["unit",{"_index":608,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":649,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":275,"title":{},"body":{"classes/GenericRepository.html":{}}}],["usefactory",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v",{"_index":337,"title":{},"body":{"classes/Graph.html":{}}}],["value",{"_index":296,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":654,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":276,"title":{},"body":{"classes/GenericRepository.html":{}}}],["version",{"_index":647,"title":{},"body":{"properties.html":{}}}],["vertex",{"_index":304,"title":{},"body":{"classes/Graph.html":{}}}],["vertices",{"_index":309,"title":{},"body":{"classes/Graph.html":{}}}],["void",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Graph.html":{}}}],["watch",{"_index":603,"title":{},"body":{"index.html":{}}}],["website",{"_index":635,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":307,"title":{},"body":{"classes/Graph.html":{}}}],["world",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":624,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":99,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdjacencyList.html":{"url":"classes/AdjacencyList.html","title":"class - AdjacencyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdjacencyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/adjacency-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport class AdjacencyList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Airport.html":{"url":"classes/Airport.html","title":"class - Airport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Airport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/airport.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IAirport\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airportID\n                            \n                            \n                                iata\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport } from '../interfaces/airport.interface';\n\nexport class Airport implements IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirportRepository.html":{"url":"classes/AirportRepository.html","title":"class - AirportRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirportRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/airport.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IAirportMap)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/airport.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { GenericRepository } from './generic.repository';\nimport { InvalidIataError } from '@database/errors';\nimport { Airport } from '@database/entities/airport.entity';\n\nexport class AirportRepository extends GenericRepository {\n  _data: IAirportMap;\n\n  constructor(data: IAirportMap) {\n    super(data);\n  }\n\n  get(iata: string): IAirport {\n    const airport = this._data.get(iata);\n    if (!airport) {\n      throw new InvalidIataError(iata);\n    }\n    return airport;\n  }\n\n  getAll(): IAirport[] {\n    return Array.from(this._data.values());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AirportsController.html":{"url":"controllers/AirportsController.html","title":"controller - AirportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AirportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/controllers/airports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                airports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindAirportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/airports/controllers/airports.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindAirportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { AirportsService } from '@modules/airports/services/airports.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\nimport { FindAirportDto } from '@modules/airports/dto/airports.dto';\n\n@Controller('airports')\nexport class AirportsController {\n  constructor(private airportsService: AirportsService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindAirportDto): IAirport {\n    const iata = params.iata;\n    return this.airportsService.findOne(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AirportsModule.html":{"url":"modules/AirportsModule.html","title":"module - AirportsModule","body":"\n                   \n\n\n\n\n    Modules\n    AirportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/airports/airports.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AirportsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AirportsService } from './services/airports.service';\nimport { AirportsController } from '@modules/airports/controllers/airports.controller';\n\n@Module({\n  controllers: [AirportsController],\n  providers: [AirportsService],\n  exports: [AirportsService],\n})\nexport class AirportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirportsService.html":{"url":"injectables/AirportsService.html","title":"injectable - AirportsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AirportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/services/airports.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/airports/services/airports.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DataService } from '@database/services/data-service.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\n\n@Injectable()\nexport class AirportsService {\n  constructor(private dataService: DataService) {}\n\n  findAll(): IAirport[] {\n    return this.dataService.airports.getAll();\n  }\n\n  findOne(iata: string): IAirport {\n    return this.dataService.airports.get(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exception.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      exception: exception.toString(),\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nGraphModule\n\nGraphModule\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\n\nimport configuration from '@config/configuration';\nimport { CommonModule } from '@common/common.module';\nimport { GraphModule } from '@modules/graph/graph.module';\nimport { DatabaseModule } from '@database/database.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, load: [configuration] }),\n    CommonModule,\n    AirportsModule,\n    RoutesModule,\n    GraphModule,\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nGeolibService \n\nGeolibService \n\n\n\nCommonModule\n\nCommonModule\n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GeolibService } from './services/geolib/geolib.service';\n\n@Global()\n@Module({\n  providers: [GeolibService],\n  exports: [GeolibService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/services/data-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airports\n                            \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(airportData: IAirportMap, routeData: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/services/data-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        airportData\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeData\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IDataServices } from '../interfaces/data-service.interface';\nimport { IGenericRepository } from '../interfaces/generic-repository.interface';\nimport { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { IRoute } from '../interfaces/route.interface';\nimport { AirportRepository } from '../repositories/airport.repository';\nimport { RouteRepository } from '../repositories/route.repository';\n\n@Injectable()\nexport class DataService implements IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n\n  constructor(\n    @Inject('AIRPORTS_DATA')\n    private airportData: IAirportMap,\n    @Inject('ROUTES_DATA')\n    private routeData: IRoute[],\n  ) {\n    this.airports = new AirportRepository(this.airportData);\n    this.routes = new RouteRepository(this.routeData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDataService \n\nDataService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { DataService } from './services/data-service.service';\nimport { AirportsDataProvider } from '@database/providers/airport.provider';\nimport { RoutesDataProvider } from '@database/providers/route.provider';\n\n@Global()\n@Module({\n  providers: [DataService, AirportsDataProvider, RoutesDataProvider],\n  exports: [DataService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                distance\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(src: string, dest: string, distance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dest\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        distance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EdgeTracker.html":{"url":"classes/EdgeTracker.html","title":"class - EdgeTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EdgeTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousEdge\n                            \n                            \n                                totalDistance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(previousEdge: Edge, totalDistance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousEdge\n                                                  \n                                                        \n                                                                        Edge\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalDistance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousEdge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Edge\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDistance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAirportDto.html":{"url":"classes/FindAirportDto.html","title":"class - FindAirportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAirportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/dto/airports.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/airports/dto/airports.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindAirportDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPathDto.html":{"url":"classes/FindPathDto.html","title":"class - FindPathDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPathDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/dto/graph.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindPathDto {\n  @ApiProperty()\n  src: string;\n\n  @ApiProperty()\n  dest: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindRouteDto.html":{"url":"classes/FindRouteDto.html","title":"class - FindRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/dto/routes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routes/dto/routes.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindRouteDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericRepository.html":{"url":"classes/GenericRepository.html","title":"class - GenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/generic.repository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGenericRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: RawData)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/generic.repository.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    RawData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RawData\n\n                    \n                \n                    \n                        \n                                Defined in src/database/repositories/generic.repository.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IGenericRepository } from '../interfaces/generic-repository.interface';\n\nexport class GenericRepository implements IGenericRepository {\n  _data: RawData;\n\n  constructor(data: RawData) {\n    this._data = data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  get(iata: string): T {\n    return undefined;\n  }\n\n  getAll(): T[] {\n    return [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolibService.html":{"url":"injectables/GeolibService.html","title":"injectable - GeolibService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolibService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/geolib/geolib.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistanceInKm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDistanceInKm\n                        \n                    \n                \n            \n            \n                \ngetDistanceInKm(from: GeolibInputCoordinates, to: GeolibInputCoordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/geolib/geolib.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { convertDistance, getDistance } from 'geolib';\nimport { GeolibInputCoordinates } from 'geolib/es/types';\n\n@Injectable()\nexport class GeolibService {\n  getDistanceInKm(\n    from: GeolibInputCoordinates,\n    to: GeolibInputCoordinates,\n  ): number {\n    const distance = getDistance(from, to);\n    return convertDistance(distance, 'km');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/graph.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjacencyList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEdge\n                            \n                            \n                                    Static\n                                Dijkstra\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adjacencyList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdjacencyList\n\n                    \n                \n                \n                    \n                        Default value : new AdjacencyList()\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/graph.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEdge\n                        \n                    \n                \n            \n            \n                \naddEdge(iata: string, edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique airport id which is represented as vertex\n\n                                    \n                                \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Flight connection which is represented as weighted edge between vertices\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Dijkstra\n                        \n                    \n                \n            \n            \n                \n                    \n                    Dijkstra(adjacencyList: AdjacencyList, start: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:28\n                \n            \n\n\n            \n                \n                    See Dijkstra's algorithm implementation guide - geeksforgeeks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adjacencyList\n                                    \n                                                AdjacencyList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MinDistanceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\nimport { AdjacencyList } from '@modules/graph/models/adjacency-list.model';\nimport { HeapItem, MinHeap } from '@modules/graph/models/min-heap.model';\nimport { MinDistanceList } from '@modules/graph/models/min-distance-list.model';\n\nexport class Graph {\n  adjacencyList: AdjacencyList = new AdjacencyList();\n\n  /**\n   * @description Add edge to a vertex\n   * @param iata Unique airport id which is represented as vertex\n   * @param edge Flight connection which is represented as weighted edge between vertices\n   */\n  addEdge(iata: string, edge: Edge): void {\n    if (this.adjacencyList.has(iata)) {\n      const edges = this.adjacencyList.get(iata);\n      edges.push(edge);\n      this.adjacencyList.set(iata, edges);\n    } else {\n      this.adjacencyList.set(iata, [edge]);\n    }\n  }\n\n  /**\n   * @description Dijkstra's algorithm implementation. O((V+E) * log(V)) time | O(V) space - where V is the number of vertices and E is the number of edges in the graph\n   * @see [Dijkstra's algorithm implementation guide - geeksforgeeks](https://www.geeksforgeeks.org/dijkstras-algorithm-for-adjacency-list-representation-greedy-algo-8/)\n   */\n  static Dijkstra(\n    adjacencyList: AdjacencyList,\n    start: string,\n  ): MinDistanceList {\n    const minDistances = new MinDistanceList();\n    const initialDistances: HeapItem[] = [];\n\n    // O(V)\n    for (const iata of adjacencyList.keys()) {\n      minDistances.set(iata, {\n        totalDistance: Infinity,\n        previousEdge: null,\n      });\n      initialDistances.push([iata, Infinity]);\n    }\n\n    minDistances.set(start, {\n      totalDistance: 0,\n      previousEdge: null,\n    });\n\n    const minHeap = new MinHeap();\n\n    // O(V)\n    minHeap.init(initialDistances);\n\n    // O(log(V))\n    minHeap.replace([start, 0]);\n\n    // O(V)\n    while (!minHeap.isEmpty()) {\n      // O(1)\n      const [vertex, currentMinDistance] = minHeap.poll();\n\n      if (currentMinDistance === Infinity) {\n        break;\n      }\n\n      const edges = adjacencyList.get(vertex);\n\n      // O(E)\n      for (const edge of edges) {\n        const { dest, distance } = edge;\n\n        const currentDistance = currentMinDistance + distance;\n        const currentPath = minDistances.get(dest);\n\n        if (currentDistance \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphController.html":{"url":"controllers/GraphController.html","title":"controller - GraphController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/controllers/graph.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                graph\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findPath\n                        \n                    \n                \n            \n            \n                \nfindPath(query: FindPathDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/graph/controllers/graph.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindPathDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { GraphService } from '@modules/graph/services/graph.service';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\nimport { FindPathDto } from '@modules/graph/dto/graph.dto';\n\n@Controller('graph')\nexport class GraphController {\n  constructor(private graphService: GraphService) {}\n\n  @Get()\n  findPath(@Query() query: FindPathDto): IShortestPathResult {\n    const { src, dest } = query;\n    return this.graphService.findShortestPath(src, dest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphModule.html":{"url":"modules/GraphModule.html","title":"module - GraphModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/graph/graph.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GraphService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphService } from './services/graph.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\nimport { GraphController } from '@modules/graph/controllers/graph.controller';\nimport { GraphProvider } from '@modules/graph/providers/graph.provider';\n\n@Module({\n  providers: [GraphService, GraphProvider],\n  controllers: [GraphController],\n  imports: [AirportsModule, RoutesModule],\n  exports: [GraphService, GraphProvider],\n})\nexport class GraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphService.html":{"url":"injectables/GraphService.html","title":"injectable - GraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/services/graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _graph\n                            \n                            \n                                    Private\n                                    Readonly\n                                _maxLegs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findShortestPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graph, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/services/graph.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findShortestPath\n                        \n                    \n                \n            \n            \n                \nfindShortestPath(src: string, dest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/services/graph.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _graph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Graph\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _maxLegs\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Graph } from '@modules/graph/models/graph.model';\nimport { Edge } from '@modules/graph/models/edge.model';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\n\n@Injectable()\nexport class GraphService {\n  private readonly _maxLegs;\n  private readonly _graph: Graph;\n\n  constructor(\n    @Inject('GRAPH_DATA') graph,\n    private configService: ConfigService,\n  ) {\n    this._maxLegs = configService.get('maxLegs');\n    this._graph = graph;\n  }\n\n  findShortestPath(src: string, dest: string): IShortestPathResult {\n    const mimDistances = Graph.Dijkstra(this._graph.adjacencyList, src);\n    const shortestPathToDest = mimDistances.get(dest);\n    const edges: Edge[] = [];\n\n    let previousEdge = shortestPathToDest.previousEdge;\n\n    while (edges.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAirport.html":{"url":"interfaces/IAirport.html","title":"interface - IAirport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAirport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/airport.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airportID\n                                        \n                                \n                                \n                                        \n                                            iata\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iata:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\nexport type IAirportMap = Map;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/generateJson.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colParser\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colParser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colParser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as csv from 'csvtojson';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { CellParser, ColumnParam } from 'csvtojson/v2/Parameters';\n\ninterface IConfig {\n  filename: string;\n  colParser: { [key: string]: string | CellParser | ColumnParam };\n  headers: string[];\n}\nconst CONIFGS: IConfig[] = [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n];\n\nconst DATA_DIR = path.join(__dirname, '..', 'data');\nconst DATABASE_DATA_DIR = path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n);\nexport const getJsonFromCSVFile = async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n};\n\nconst conversion = CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n});\n\nPromise.all(conversion).then(() => console.log('done'));\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataServices.html":{"url":"interfaces/IDataServices.html","title":"interface - IDataServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDataServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/data-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airports\n                                        \n                                \n                                \n                                        \n                                            routes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airports:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IGenericRepository } from './generic-repository.interface';\nimport { IAirport } from './airport.interface';\nimport { IRoute } from './route.interface';\n\nexport interface IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenericRepository.html":{"url":"interfaces/IGenericRepository.html","title":"interface - IGenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/generic-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IGenericRepository {\n  getAll(): T[];\n  get(iata: string): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoute.html":{"url":"interfaces/IRoute.html","title":"interface - IRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinationAirport\n                                        \n                                \n                                \n                                        \n                                            destinationAirportID\n                                        \n                                \n                                \n                                        \n                                            sourceAirport\n                                        \n                                \n                                \n                                        \n                                            sourceAirportID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IShortestPathResult.html":{"url":"interfaces/IShortestPathResult.html","title":"interface - IShortestPathResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IShortestPathResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/interfaces/graph.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            totalDistance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalDistance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport interface IShortestPathResult {\n  totalDistance: number;\n  path: string;\n  edges: Edge[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIataError.html":{"url":"classes/InvalidIataError.html","title":"class - InvalidIataError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIataError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iata: string)\n                    \n                \n                        \n                            \n                                Defined in src/database/errors/index.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iata\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidIataError extends Error {\n  constructor(iata: string) {\n    super(`Invalid IATA Code: ${iata}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinDistanceList.html":{"url":"classes/MinDistanceList.html","title":"class - MinDistanceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinDistanceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-distance-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EdgeTracker } from '@modules/graph/models/edge.model';\n\nexport class MinDistanceList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinHeap.html":{"url":"classes/MinHeap.html","title":"class - MinHeap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinHeap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-heap.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Heap\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/min-heap.model.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Heap from 'heap-js';\n\nexport type HeapItem = [string, number];\n\nconst customPriorityComparator = (a: HeapItem, b: HeapItem) => a[1] - b[1];\n\nexport class MinHeap extends Heap {\n  constructor() {\n    super(customPriorityComparator);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/route.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRoute\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destinationAirport\n                            \n                            \n                                destinationAirportID\n                            \n                            \n                                sourceAirport\n                            \n                            \n                                sourceAirportID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRoute } from '../interfaces/route.interface';\n\nexport class Route implements IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteRepository.html":{"url":"classes/RouteRepository.html","title":"class - RouteRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/route.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/route.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRoute[]\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IRoute[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { IRoute } from '../interfaces/route.interface';\nimport { GenericRepository } from './generic.repository';\nimport { Route } from '@database/entities/route.entity';\n\nexport class RouteRepository extends GenericRepository {\n  _data: IRoute[];\n\n  constructor(data: IRoute[]) {\n    super(data);\n  }\n\n  get(iata: string): IRoute {\n    return _.find(this._data, (o) => o.sourceAirport === iata);\n  }\n\n  getAll(): IRoute[] {\n    return this._data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutesController.html":{"url":"controllers/RoutesController.html","title":"controller - RoutesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/controllers/routes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                routes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindRouteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/routes/controllers/routes.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { RoutesService } from '@modules/routes/services/routes.service';\nimport { IRoute } from '@database/interfaces/route.interface';\nimport { FindRouteDto } from '@modules/routes/dto/routes.dto';\n\n@Controller('routes')\nexport class RoutesController {\n  constructor(private routesService: RoutesService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindRouteDto): IRoute[] {\n    const iata = params.iata;\n    return this.routesService.findAllForAirport(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nRoutesService \n\nRoutesService \n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { RoutesService } from './services/routes.service';\nimport { RoutesController } from '@modules/routes/controllers/routes.controller';\n\n@Module({\n  providers: [RoutesService],\n  controllers: [RoutesController],\n  exports: [RoutesService],\n})\nexport class RoutesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutesService.html":{"url":"injectables/RoutesService.html","title":"injectable - RoutesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/services/routes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findAllForAirport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/routes/services/routes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/routes/services/routes.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IRoute[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllForAirport\n                        \n                    \n                \n            \n            \n                \nfindAllForAirport(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/routes/services/routes.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { Injectable } from '@nestjs/common';\nimport { DataService } from '@database/services/data-service.service';\nimport { IRoute } from '@database/interfaces/route.interface';\n\n@Injectable()\nexport class RoutesService {\n  constructor(private dataService: DataService) {}\n\n  findAll(): IRoute[] {\n    return this.dataService.routes.getAll();\n  }\n\n  findAllForAirport(iata: string): IRoute[] {\n    const routes = this.dataService.routes.getAll();\n    return _.filter(routes, (data) => data.sourceAirport === iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                scripts/generateJson.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            CONIFGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            conversion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATABASE_DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            getJsonFromCSVFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/geolib/geolib.service.ts\n            \n            injectable\n            GeolibService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/airport.entity.ts\n            \n            class\n            Airport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/entities/route.entity.ts\n            \n            class\n            Route\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/errors/index.ts\n            \n            class\n            InvalidIataError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/interfaces/airport.interface.ts\n            \n            interface\n            IAirport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/interfaces/data-service.interface.ts\n            \n            interface\n            IDataServices\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/generic-repository.interface.ts\n            \n            interface\n            IGenericRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/route.interface.ts\n            \n            interface\n            IRoute\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            AirportsDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            map\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/route.provider.ts\n            \n            variable\n            RoutesDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/repositories/airport.repository.ts\n            \n            class\n            AirportRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/generic.repository.ts\n            \n            class\n            GenericRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/route.repository.ts\n            \n            class\n            RouteRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/services/data-service.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/airports/controllers/airports.controller.ts\n            \n            controller\n            AirportsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/dto/airports.dto.ts\n            \n            class\n            FindAirportDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/services/airports.service.ts\n            \n            injectable\n            AirportsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/controllers/graph.controller.ts\n            \n            controller\n            GraphController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/dto/graph.dto.ts\n            \n            class\n            FindPathDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/graph/interfaces/graph.interface.ts\n            \n            interface\n            IShortestPathResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/adjacency-list.model.ts\n            \n            class\n            AdjacencyList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            EdgeTracker\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/graph.model.ts\n            \n            class\n            Graph\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-distance-list.model.ts\n            \n            class\n            MinDistanceList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            class\n            MinHeap\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            variable\n            customPriorityComparator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/providers/graph.provider.ts\n            \n            variable\n            GraphProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/services/graph.service.ts\n            \n            injectable\n            GraphService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/routes/controllers/routes.controller.ts\n            \n            controller\n            RoutesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/dto/routes.dto.ts\n            \n            class\n            FindRouteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/services/routes.service.ts\n            \n            injectable\n            RoutesService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.4\n        \n            csv-parse : ^5.3.0\n        \n            geolib : ^3.3.3\n        \n            hbs : ^4.2.0\n        \n            heap-js : ^2.2.0\n        \n            lodash : ^4.17.21\n        \n            lowdb : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AirportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nGeolibService \n\nGeolibService \n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nRoutesService \n\nRoutesService \n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HeapItem   (src/.../min-heap.model.ts)\n                        \n                        \n                            IAirportMap   (src/.../airport.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/graph/models/min-heap.model.ts\n    \n    \n        \n            \n                \n                    \n                    HeapItem\n                \n            \n            \n                \n                        [string, number]\n\n                \n            \n        \n    \n    src/database/interfaces/airport.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IAirportMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AirportsDataProvider   (src/.../airport.provider.ts)\n                        \n                        \n                            CONIFGS   (scripts/.../generateJson.ts)\n                        \n                        \n                            conversion   (scripts/.../generateJson.ts)\n                        \n                        \n                            customPriorityComparator   (src/.../min-heap.model.ts)\n                        \n                        \n                            DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            DATA_DIR   (src/.../configuration.ts)\n                        \n                        \n                            DATABASE_DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            getJsonFromCSVFile   (scripts/.../generateJson.ts)\n                        \n                        \n                            GraphProvider   (src/.../graph.provider.ts)\n                        \n                        \n                            map   (src/.../airport.provider.ts)\n                        \n                        \n                            RoutesDataProvider   (src/.../route.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/providers/airport.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AirportsDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'AIRPORTS_DATA',\n  useValue: map,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n\n        \n    \n\n    scripts/generateJson.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONIFGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '..', 'data')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonFromCSVFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/models/min-heap.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        customPriorityComparator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (a: HeapItem, b: HeapItem) => a[1] - b[1]\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '..', '..', 'data')\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/providers/graph.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'GRAPH_DATA',\n  useFactory: (\n    airportsService: AirportsService,\n    routeService: RoutesService,\n    geolibService: GeolibService,\n  ): Graph => {\n    const graph = new Graph();\n    const airports = airportsService.findAll();\n    airports.forEach((srcAirport) => {\n      const routes = routeService.findAllForAirport(srcAirport.iata);\n      routes.forEach((route) => {\n        let destAirport;\n        try {\n          destAirport = airportsService.findOne(route.destinationAirport);\n        } catch (e) {\n          return;\n        }\n\n        const distance = geolibService.getDistanceInKm(srcAirport, destAirport);\n        const edge = new Edge(srcAirport.iata, destAirport.iata, distance);\n        graph.addEdge(srcAirport.iata, edge);\n      });\n    });\n    return graph;\n  },\n  inject: [AirportsService, RoutesService, GeolibService],\n}\n                    \n                \n\n\n        \n    \n\n    src/database/providers/route.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoutesDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'ROUTES_DATA',\n  useValue: data as IRoute[],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
