var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdjacencyList.html",[0,0.093,1,2.299]],["body/classes/AdjacencyList.html",[0,0.13,1,3.889,2,1.26,3,0.288,4,0.255,5,0.255,6,4.331,7,3.851,8,2.77,9,3.352,10,0.505,11,0.019,12,2.426,13,3.206,14,0.288,15,0.017,16,0.017]],["title/classes/Airport.html",[0,0.093,17,2.128]],["body/classes/Airport.html",[0,0.106,2,1.02,3,0.233,4,0.206,5,0.206,10,0.409,11,0.019,14,0.233,15,0.015,16,0.015,17,3.151,18,3.507,19,3.404,20,2.874,21,0.543,22,1.41,23,4.137,24,1.841,25,4.137,26,4.137,27,0.685,28,1.017,29,1.017,30,4.097,31,4.097,32,2.708,33,4.097,34,4.097,35,3.118]],["title/classes/AirportRepository.html",[0,0.093,36,2.504]],["body/classes/AirportRepository.html",[0,0.082,2,0.792,3,0.181,4,0.16,5,0.16,8,2.039,10,0.571,11,0.02,14,0.181,15,0.012,16,0.012,17,3.356,20,2.898,21,0.422,22,1.186,24,0.977,27,0.566,28,0.84,29,0.915,35,2.421,36,3.119,37,2.723,38,3.979,39,4,40,1.543,41,3.95,42,0.977,43,3.439,44,3.979,45,3.181,46,1.126,47,1.012,48,1.126,49,1.737,50,4.499,51,2.723,52,3.119,53,2.723,54,1.543,55,3.181,56,2.723,57,2.195,58,3.181,59,3.181,60,2.723,61,1.279,62,3.181,63,2.421,64,1.625,65,3.181,66,1.543,67,3.181]],["title/controllers/AirportsController.html",[68,1.739,69,2.504]],["body/controllers/AirportsController.html",[0,0.098,3,0.217,4,0.192,5,0.192,10,0.618,11,0.02,14,0.217,15,0.014,16,0.014,20,2.775,21,0.506,24,1.172,27,0.411,29,0.61,40,1.75,46,0.951,47,0.855,48,0.951,54,1.303,61,1.535,66,1.303,68,1.83,69,3.538,70,1.83,71,3.267,72,2.905,73,2.085,74,3.901,75,3.267,76,4.27,77,2.085,78,4.388,79,3.817,80,4.388,81,2.905,82,0.902,83,2.956,84,3.267,85,3.267,86,3.817,87,3.817,88,2.239,89,3.267,90,3.267,91,3.817]],["title/modules/AirportsModule.html",[92,1.459,93,2.128]],["body/modules/AirportsModule.html",[0,0.104,3,0.23,4,0.203,5,0.203,10,0.594,11,0.02,14,0.23,15,0.014,16,0.014,69,4.108,70,2.551,82,0.954,83,3.697,92,2.139,93,4.037,94,1.936,95,2.551,96,3.456,97,3.456,98,3.456,99,2.906,100,2.205,101,2.205,102,4.038,103,2.718,104,3.371,105,4.038,106,4.038]],["title/injectables/AirportsService.html",[83,1.853,107,1.38]],["body/injectables/AirportsService.html",[0,0.094,3,0.208,4,0.184,5,0.184,10,0.565,11,0.02,14,0.208,15,0.014,16,0.014,20,3.047,21,0.484,24,1.121,27,0.535,28,0.904,29,0.904,40,1.698,42,1.121,46,1.239,47,1.114,48,1.239,54,1.698,66,1.698,74,3.786,82,0.863,83,2.541,85,3.125,88,2.141,107,1.892,108,1.994,109,3.125,110,6.075,111,3.125,112,3.582,113,3.651,114,3.651,115,4.974,116,3.651,117,3.125,118,2.779,119,3.651,120,3.651]],["title/classes/AllExceptionsFilter.html",[0,0.093,121,2.761]],["body/classes/AllExceptionsFilter.html",[0,0.084,2,0.811,3,0.185,4,0.164,5,0.164,10,0.458,11,0.02,14,0.185,15,0.013,16,0.013,19,2.91,21,0.431,27,0.494,29,0.734,40,1.568,42,1,46,1.144,47,1.029,48,1.144,54,1.111,61,2.325,64,1.663,82,0.769,88,1.909,121,3.496,122,2.786,123,5.323,124,4.4,125,3.255,126,6.328,127,3.255,128,4.593,129,5.323,130,5.782,131,3.255,132,5.323,133,3.931,134,2.91,135,5.782,136,2.786,137,2.477,138,3.255,139,3.255,140,3.255,141,3.255,142,3.255,143,3.255,144,3.255,145,3.255,146,4.593,147,3.255,148,3.255,149,3.255,150,3.255,151,1.909,152,3.255,153,3.255]],["title/controllers/AppController.html",[68,1.739,154,2.504]],["body/controllers/AppController.html",[0,0.113,3,0.249,4,0.22,5,0.22,10,0.56,11,0.02,14,0.249,15,0.015,16,0.015,21,0.58,28,0.896,29,0.699,40,1.914,54,1.493,66,1.493,68,2.687,70,2.097,77,2.389,82,1.034,88,2.565,137,3.329,154,3.869,155,3.744,156,5.584,157,4.374,158,3.628,159,3.744,160,4.374]],["title/modules/AppModule.html",[92,1.459,161,2.504]],["body/modules/AppModule.html",[0,0.077,3,0.17,4,0.15,5,0.15,10,0.671,11,0.02,14,0.17,15,0.012,16,0.012,70,2.072,82,0.706,92,1.737,93,3.607,94,1.433,95,2.072,99,2.36,100,1.632,101,1.632,103,2.207,154,3.503,158,3.607,159,2.558,161,4.891,162,2.558,163,2.558,164,2.558,165,3.896,166,3.896,167,3.896,168,3.607,169,2.988,170,3.699,171,2.988,172,2.274,173,2.988,174,2.558,175,2.558,176,2.988,177,2.988,178,2.988,179,4.321,180,2.988,181,2.988,182,2.988,183,2.274,184,2.988]],["title/injectables/AppService.html",[107,1.38,158,2.128]],["body/injectables/AppService.html",[0,0.12,3,0.264,4,0.234,5,0.234,10,0.463,11,0.02,14,0.264,15,0.016,16,0.016,21,0.615,28,0.93,29,0.742,40,1.986,54,1.584,66,1.584,82,1.096,107,2.213,108,2.534,156,5.705,158,3.413,185,3.972,186,4.64,187,4.64,188,4.64]],["title/modules/CommonModule.html",[92,1.459,165,2.299]],["body/modules/CommonModule.html",[0,0.108,3,0.238,4,0.21,5,0.21,10,0.543,11,0.02,14,0.238,15,0.015,16,0.015,82,0.987,92,2.188,94,2.003,95,2.609,99,2.972,100,2.282,101,2.282,103,2.78,104,3.448,165,4.398,189,3.576,190,3.576,191,3.576,192,4.267,193,4.178,194,4.658,195,4.178]],["title/injectables/DataService.html",[107,1.38,112,1.981]],["body/injectables/DataService.html",[0,0.083,3,0.184,4,0.163,5,0.163,10,0.648,11,0.02,14,0.184,15,0.012,16,0.012,19,2.046,20,1.548,21,0.428,22,1.199,27,0.571,29,0.847,35,2.458,36,2.229,42,1.403,44,3.651,46,0.804,47,0.723,48,0.804,64,2.333,73,2.895,82,0.763,107,1.737,108,1.764,112,2.495,196,4.932,197,2.765,198,2.895,199,3.23,200,5.3,201,2.6,202,4.568,203,4.568,204,3.566,205,3.23,206,2.458,207,3.153,208,3.23,209,3.23,210,2.765,211,2.458,212,2.458,213,3.23,214,2.229,215,3.23,216,3.23,217,3.477,218,3.23,219,3.23,220,3.23,221,3.23,222,3.23]],["title/modules/DatabaseModule.html",[92,1.459,166,2.299]],["body/modules/DatabaseModule.html",[0,0.101,3,0.223,4,0.198,5,0.198,10,0.624,11,0.02,14,0.223,15,0.014,16,0.014,82,0.927,92,2.099,94,1.882,95,2.504,99,2.852,100,2.143,101,2.143,103,2.667,104,3.308,112,3.936,118,2.987,166,4.331,194,4.47,223,3.359,224,3.359,225,3.359,226,3.924,227,3.924,228,3.974,229,3.924,230,3.974,231,3.924]],["title/classes/Edge.html",[0,0.093,12,1.739]],["body/classes/Edge.html",[0,0.123,2,0.854,3,0.195,4,0.173,5,0.173,11,0.02,12,2.836,14,0.271,15,0.013,16,0.013,21,0.454,22,1.25,27,0.637,28,1.106,29,0.946,32,2.808,42,1.053,46,0.854,47,0.768,48,0.854,232,2.609,233,3.603,234,3.37,235,2.98,236,4.076,237,4.763,238,3.428,239,3.428,240,2.934,241,2.934,242,2.934,243,2.172,244,3.287,245,4.165,246,2.934,247,2.934,248,2.934]],["title/classes/EdgeTracker.html",[0,0.093,243,2.299]],["body/classes/EdgeTracker.html",[0,0.127,2,0.894,3,0.204,4,0.181,5,0.181,11,0.02,12,3.128,14,0.28,15,0.013,16,0.013,21,0.476,22,1.291,27,0.604,28,0.964,29,0.896,32,2.843,42,1.102,46,0.894,47,0.804,48,0.894,232,2.731,233,3.062,234,2.864,235,2.357,236,3.072,240,3.072,241,3.072,242,3.072,243,3.115,244,4.36,245,5.084,246,4.208,247,3.072,248,3.072,249,4.916,250,3.589]],["title/classes/FindAirportDto.html",[0,0.093,76,2.504]],["body/classes/FindAirportDto.html",[0,0.122,2,1.175,3,0.268,4,0.238,5,0.238,10,0.471,11,0.02,14,0.268,15,0.016,16,0.016,21,0.625,22,1.544,24,1.968,27,0.508,28,0.94,29,0.754,76,4.058,77,2.577,251,4.039,252,4.875,253,4.719,254,3.257]],["title/classes/FindPathDto.html",[0,0.093,255,2.504]],["body/classes/FindPathDto.html",[0,0.113,2,1.095,3,0.25,4,0.221,5,0.221,10,0.439,11,0.02,14,0.25,15,0.015,16,0.015,21,0.583,22,1.476,27,0.605,28,1.045,29,0.899,77,3.071,233,3.386,235,2.973,252,5.141,254,3.035,255,3.882,256,3.764,257,4.397,258,4.397]],["title/classes/FindRouteDto.html",[0,0.093,259,2.504]],["body/classes/FindRouteDto.html",[0,0.122,2,1.175,3,0.268,4,0.238,5,0.238,10,0.471,11,0.02,14,0.268,15,0.016,16,0.016,21,0.625,22,1.544,24,1.968,27,0.508,28,0.94,29,0.754,77,2.577,252,4.875,254,3.257,259,4.058,260,4.039,261,4.719]],["title/classes/GenericRepository.html",[0,0.093,38,2.299]],["body/classes/GenericRepository.html",[0,0.089,2,0.857,3,0.196,4,0.173,5,0.173,10,0.344,11,0.02,14,0.196,15,0.013,16,0.013,19,3.026,21,0.456,22,1.254,24,1.057,27,0.59,28,0.877,29,0.947,38,3.026,39,4.174,40,1.63,41,4.089,42,1.057,43,3.635,46,1.19,47,1.07,48,1.19,49,2.608,52,3.296,54,1.63,66,1.63,204,3.217,210,2.946,211,2.619,262,2.946,263,6.224,264,4.776,265,3.442,266,5.071,267,3.442,268,2.946,269,3.442,270,3.442,271,3.442,272,3.442,273,3.442,274,3.442,275,3.442,276,3.442,277,3.442]],["title/injectables/GeolibService.html",[107,1.38,192,2.128]],["body/injectables/GeolibService.html",[0,0.102,3,0.225,4,0.199,5,0.199,10,0.589,11,0.02,14,0.225,15,0.014,16,0.014,21,0.525,27,0.426,29,0.633,32,2.236,40,1.794,46,0.987,47,0.887,48,0.987,54,1.352,61,2.112,66,1.352,82,0.936,107,1.998,108,2.163,192,3.082,234,2.024,278,3.391,279,5.896,280,3.962,281,6.852,282,3.962,283,3.962,284,3.962,285,3.391,286,3.962,287,3.962,288,3.962,289,3.962,290,3.962,291,3.962]],["title/classes/Graph.html",[0,0.093,292,1.981]],["body/classes/Graph.html",[0,0.038,1,3.778,2,0.366,3,0.084,4,0.189,5,0.074,9,1.349,10,0.375,11,0.02,12,3.076,13,0.93,14,0.084,15,0.007,16,0.007,17,2.456,21,0.195,22,0.649,24,1.556,27,0.404,28,0.917,29,0.6,32,1.597,40,0.843,46,0.797,47,0.717,48,0.797,54,1.092,61,2.253,64,1.917,66,0.843,73,1.349,81,2.856,133,2.115,151,1.449,198,1.349,233,0.802,234,2.139,235,1.184,244,1.705,245,1.88,292,2.049,293,1.256,294,2.471,295,4.538,296,3.199,297,2.471,298,1.256,299,1.256,300,1.468,301,2.471,302,1.468,303,2.471,304,4.826,305,3.187,306,2.471,307,3.187,308,3.753,309,2.471,310,2.471,311,2.471,312,2.115,313,3.753,314,1.468,315,3.212,316,1.468,317,3.212,318,3.212,319,2.115,320,2.471,321,2.471,322,2.471,323,4.187,324,2.471,325,2.471,326,1.88,327,3.331,328,2.115,329,2.738,330,3.212,331,2.471,332,2.471,333,2.89,334,2.471,335,2.115,336,2.471,337,2.471,338,2.471,339,2.738,340,1.468,341,1.468,342,1.468,343,1.468,344,1.468,345,1.468,346,1.88,347,2.471,348,2.471,349,1.468,350,2.471,351,1.705,352,1.705,353,2.471,354,1.468,355,1.468,356,1.468,357,1.468,358,2.471,359,1.468,360,1.468,361,1.468,362,1.468,363,3.199,364,2.115,365,1.468,366,1.468,367,1.88,368,1.468,369,1.468,370,1.468,371,1.468,372,1.468,373,1.468,374,3.199,375,1.468,376,1.468,377,1.468,378,1.468,379,2.471,380,1.468,381,1.468,382,1.468,383,1.468]],["title/controllers/GraphController.html",[68,1.739,384,2.504]],["body/controllers/GraphController.html",[0,0.075,3,0.165,4,0.146,5,0.146,10,0.608,11,0.02,14,0.165,15,0.012,16,0.012,21,0.385,24,0.892,27,0.313,29,0.465,40,1.445,42,0.892,46,0.724,47,0.651,48,0.724,54,0.992,61,1.168,63,3.802,64,2.552,66,0.992,68,1.393,70,1.393,72,2.211,77,1.587,82,0.686,83,2.552,84,2.487,124,3.222,217,3.222,233,2.728,235,2.395,255,3.788,292,1.587,307,2.211,326,3.222,364,2.487,384,2.922,385,2.487,386,4.234,387,2.906,388,2.906,389,5.835,390,3.165,391,2.93,392,2.906,393,2.487,394,2.906,395,1.587,396,2.312,397,1.587,398,2.487,399,2.906,400,2.906,401,2.906,402,2.487,403,2.906,404,4.234,405,3.624,406,3.624,407,2.906,408,2.906,409,2.906,410,2.906,411,2.906,412,2.487,413,2.906]],["title/modules/GraphModule.html",[92,1.459,167,2.299]],["body/modules/GraphModule.html",[0,0.089,3,0.196,4,0.173,5,0.173,10,0.643,11,0.02,14,0.196,15,0.013,16,0.013,70,2.29,82,0.813,92,1.92,93,3.777,94,1.65,95,2.29,99,2.608,100,1.88,101,1.88,103,2.44,104,3.026,167,4.432,168,3.777,170,4.088,174,2.946,175,2.946,384,3.786,391,4.138,414,2.946,415,2.946,416,2.946,417,3.442,418,3.442,419,3.442,420,3.442,421,4.174,422,3.442]],["title/injectables/GraphService.html",[107,1.38,391,2.128]],["body/injectables/GraphService.html",[0,0.066,3,0.147,4,0.13,5,0.13,10,0.604,11,0.02,12,1.857,13,1.632,14,0.147,15,0.011,16,0.011,21,0.341,22,1.017,27,0.501,28,0.932,29,0.827,40,1.322,42,1.189,46,0.965,47,0.867,48,0.965,54,0.879,61,1.871,63,1.96,64,1.316,66,0.879,82,0.609,107,1.473,108,1.407,137,4.437,151,2.271,172,1.96,206,1.96,217,4.603,233,2.827,235,2.481,244,1.778,292,3.184,327,2.673,339,3.315,367,1.96,390,2.949,391,2.271,393,2.205,398,2.205,423,2.205,424,4.654,425,4.654,426,3.873,427,2.576,428,6.048,429,3.873,430,3.873,431,2.576,432,2.576,433,1.96,434,1.778,435,2.576,436,2.115,437,2.576,438,3.873,439,2.576,440,2.576,441,2.576,442,2.576,443,2.576,444,2.576,445,2.576,446,2.576,447,2.576,448,2.205,449,2.576,450,2.576,451,1.96,452,2.576,453,2.576]],["title/interfaces/IAirport.html",[20,1.739,454,1.38]],["body/interfaces/IAirport.html",[3,0.238,4,0.21,5,0.21,9,2.282,11,0.019,14,0.31,15,0.015,16,0.015,20,2.609,21,0.554,22,1.429,23,4.425,24,1.969,25,4.425,26,4.425,27,0.716,28,1.09,32,2.901,44,2.647,454,1.589,455,2.282,456,3.18]],["title/interfaces/IConfig.html",[454,1.38,457,2.504]],["body/interfaces/IConfig.html",[3,0.129,4,0.217,5,0.114,10,0.484,11,0.02,14,0.129,15,0.01,16,0.01,21,0.301,22,0.923,23,2.426,24,1.08,25,2.426,26,2.426,27,0.623,28,1.073,32,1.496,47,0.788,49,1.92,61,2.23,66,0.775,73,1.239,103,1.159,151,2.062,183,2.676,198,1.239,235,1.088,454,0.863,455,1.239,457,3.345,458,1.727,459,4.952,460,4.748,461,4.952,462,3.516,463,2.676,464,2.269,465,3.516,466,3.516,467,3.516,468,2.269,469,2.269,470,1.727,471,5.687,472,3.009,473,3.009,474,3.009,475,3.009,476,3.009,477,3.009,478,3.009,479,3.009,480,3.009,481,2.426,482,2.426,483,2.426,484,2.426,485,3.009,486,3.009,487,3.009,488,1.727,489,1.942,490,1.727,491,1.942,492,1.942,493,1.727,494,1.727,495,1.942,496,3.009,497,1.942,498,1.942,499,1.942,500,1.942,501,1.942,502,1.942,503,1.727,504,1.942,505,1.942,506,3.009,507,1.942,508,1.942,509,1.942,510,1.942,511,1.942,512,2.269,513,2.269]],["title/interfaces/IDataServices.html",[207,2.504,454,1.38]],["body/interfaces/IDataServices.html",[3,0.245,4,0.217,5,0.217,10,0.613,11,0.02,14,0.245,15,0.015,16,0.015,20,2.065,21,0.571,22,1.457,27,0.597,73,3.542,198,3.542,201,1.943,204,4.1,207,3.83,211,3.278,454,1.638,455,2.352,514,3.687,515,3.687,516,4.307,517,4.307,518,4.307]],["title/interfaces/IGenericRepository.html",[204,2.128,454,1.38]],["body/interfaces/IGenericRepository.html",[3,0.252,4,0.223,5,0.223,11,0.019,14,0.252,15,0.015,16,0.015,21,0.586,24,1.358,27,0.476,28,0.994,29,0.902,40,1.926,41,4.52,46,1.101,47,0.99,48,1.101,52,3.895,54,1.926,204,3.309,266,5.605,454,1.681,455,2.414,519,5.321,520,3.784,521,4.42,522,4.42]],["title/interfaces/IRoute.html",[201,1.637,454,1.38]],["body/interfaces/IRoute.html",[3,0.244,4,0.216,5,0.216,11,0.019,14,0.244,15,0.015,16,0.015,21,0.568,22,1.452,27,0.697,28,1.167,201,2.496,454,1.63,455,2.34,481,4.467,482,4.467,483,4.467,484,4.467,523,3.668]],["title/interfaces/IShortestPathResult.html",[390,2.299,454,1.38]],["body/interfaces/IShortestPathResult.html",[3,0.249,4,0.22,5,0.22,10,0.437,11,0.02,12,3.127,13,2.771,14,0.249,15,0.015,16,0.015,21,0.58,22,1.472,27,0.666,28,0.989,32,2.632,151,3.826,327,4.502,390,3.551,451,4.965,454,1.664,455,2.389,524,3.744]],["title/classes/IataNotFoundException.html",[0,0.093,395,1.981]],["body/classes/IataNotFoundException.html",[0,0.159,2,0.942,3,0.215,4,0.19,5,0.19,8,2.903,10,0.378,11,0.02,14,0.351,15,0.014,16,0.014,27,0.407,28,1.06,29,0.605,42,1.162,46,0.942,47,0.847,48,0.942,82,0.894,134,4.076,395,2.782,396,2.066,397,2.066,436,2.066,525,2.397,526,4.441,527,3.783,528,2.611,529,4.254,530,3.516,531,2.611,532,2.397]],["title/classes/IataNotProvidedException.html",[0,0.093,396,1.981]],["body/classes/IataNotProvidedException.html",[0,0.159,2,0.942,3,0.215,4,0.19,5,0.19,8,2.903,10,0.378,11,0.02,14,0.351,15,0.014,16,0.014,27,0.407,28,1.06,29,0.605,42,1.162,46,0.942,47,0.847,48,0.942,82,0.894,134,4.076,395,2.066,396,2.782,397,2.066,436,2.066,525,2.397,526,4.441,528,2.611,529,4.254,530,3.516,531,2.611,532,2.397,533,3.783]],["title/classes/InvalidIataError.html",[0,0.093,57,2.504]],["body/classes/InvalidIataError.html",[0,0.12,2,1.156,3,0.264,4,0.234,5,0.234,8,2.626,11,0.019,14,0.264,15,0.016,16,0.016,24,1.953,27,0.5,28,1.016,29,0.742,42,1.425,46,1.156,47,1.039,48,1.156,57,4.016,307,3.532,532,3.687,534,3.972,535,5.819,536,4.64,537,4.64]],["title/classes/MinDistanceList.html",[0,0.093,333,2.504]],["body/classes/MinDistanceList.html",[0,0.13,2,1.253,3,0.286,4,0.253,5,0.253,7,3.828,8,2.76,9,3.34,10,0.502,11,0.019,13,3.187,14,0.286,15,0.017,16,0.017,234,2.569,243,3.187,333,4.221,538,3.187]],["title/classes/MinHeap.html",[0,0.093,352,2.504]],["body/classes/MinHeap.html",[0,0.114,2,1.101,3,0.252,4,0.223,5,0.223,8,2.546,10,0.441,11,0.02,14,0.321,15,0.015,16,0.015,27,0.476,28,0.707,29,0.707,32,1.881,42,1.909,61,1.777,346,3.364,351,4.29,352,3.895,538,3.575,539,3.051,540,5.605,541,4.42,542,3.784,543,3.364,544,3.784,545,3.784,546,4.42]],["title/classes/PathNotFound.html",[0,0.093,436,1.981]],["body/classes/PathNotFound.html",[0,0.159,2,0.942,3,0.215,4,0.19,5,0.19,8,2.903,10,0.378,11,0.02,14,0.351,15,0.014,16,0.014,27,0.407,28,1.06,29,0.605,42,1.162,46,0.942,47,0.847,48,0.942,82,0.894,134,3.905,395,2.066,396,2.066,397,2.066,436,2.782,525,2.397,526,4.441,528,2.611,529,4.254,530,3.516,531,2.611,532,3.228,547,3.783]],["title/classes/PathNotFoundException.html",[0,0.093,397,1.981]],["body/classes/PathNotFoundException.html",[0,0.159,2,0.942,3,0.215,4,0.19,5,0.19,8,2.903,10,0.378,11,0.02,14,0.351,15,0.014,16,0.014,27,0.407,28,1.06,29,0.605,42,1.162,46,0.942,47,0.847,48,0.942,82,0.894,134,4.076,395,2.066,396,2.066,397,2.782,436,2.066,525,2.397,526,4.441,528,2.611,529,4.254,530,3.516,531,2.611,532,2.397,548,3.783]],["title/classes/Route.html",[0,0.093,549,2.504]],["body/classes/Route.html",[0,0.106,2,1.02,3,0.233,4,0.206,5,0.206,10,0.409,11,0.019,14,0.233,15,0.015,16,0.015,19,3.404,21,0.543,22,1.41,27,0.685,28,1.12,29,1.017,201,2.705,212,3.118,481,4.137,482,4.137,483,4.137,484,4.137,549,3.708,550,3.507,551,4.097,552,4.097,553,4.097,554,4.097]],["title/classes/RouteRepository.html",[0,0.093,214,2.504]],["body/classes/RouteRepository.html",[0,0.084,2,0.814,3,0.186,4,0.164,5,0.164,8,2.078,10,0.578,11,0.02,14,0.186,15,0.013,16,0.013,21,0.433,22,1.209,24,1.415,27,0.574,28,0.853,29,0.926,38,4.014,39,4.059,40,1.572,41,3.997,42,1.004,43,3.505,46,1.147,47,1.032,48,1.147,49,1.784,50,4.566,51,2.797,52,3.179,53,2.797,54,1.572,56,2.797,60,2.797,66,1.572,201,3.091,212,2.487,214,3.179,268,2.797,433,2.487,434,2.255,549,2.255,555,2.797,556,3.268,557,3.268,558,3.268,559,3.268,560,3.268,561,3.268]],["title/controllers/RoutesController.html",[68,1.739,562,2.504]],["body/controllers/RoutesController.html",[0,0.098,3,0.217,4,0.192,5,0.192,10,0.618,11,0.02,14,0.217,15,0.014,16,0.014,21,0.506,24,1.172,27,0.411,29,0.61,40,1.75,46,0.951,47,0.855,48,0.951,54,1.303,61,1.535,66,1.303,68,1.83,70,1.83,72,2.905,74,3.901,75,3.267,77,2.085,78,4.388,80,4.388,81,2.905,82,0.902,88,2.239,89,3.267,90,3.267,198,2.085,201,2.611,259,4.27,562,3.538,563,3.267,564,3.817,565,3.161,566,3.817,567,3.267,568,3.817,569,3.817,570,3.817]],["title/modules/RoutesModule.html",[92,1.459,168,2.128]],["body/modules/RoutesModule.html",[0,0.104,3,0.23,4,0.203,5,0.203,10,0.594,11,0.02,14,0.23,15,0.014,16,0.014,70,2.551,82,0.954,92,2.139,94,1.936,95,2.551,99,2.906,100,2.205,101,2.205,103,2.718,104,3.371,168,4.037,562,4.108,565,3.953,571,3.456,572,3.456,573,3.456,574,4.038,575,4.038,576,4.038]],["title/injectables/RoutesService.html",[107,1.38,565,1.981]],["body/injectables/RoutesService.html",[0,0.094,3,0.209,4,0.185,5,0.185,10,0.607,11,0.02,14,0.209,15,0.014,16,0.014,21,0.486,24,1.532,27,0.537,28,0.907,29,0.798,40,1.703,42,1.126,46,1.243,47,1.118,48,1.243,49,2.003,54,1.252,61,1.474,66,1.252,82,0.866,88,2.151,107,1.897,108,2.003,111,3.139,112,3.586,117,3.139,118,2.791,198,2.003,201,2.558,433,2.791,434,2.531,565,2.725,567,3.139,577,3.139,578,4.989,579,3.667,580,4.989,581,3.667,582,3.667,583,3.667,584,3.667]],["title/coverage.html",[585,3.769]],["body/coverage.html",[0,0.173,1,1.179,5,0.094,6,1.593,7,2.288,9,1.017,11,0.02,12,0.893,15,0.008,16,0.008,17,1.092,18,1.593,20,0.893,27,0.2,36,1.285,37,1.593,38,1.179,57,1.285,64,0.951,68,2.081,69,1.285,71,1.593,76,1.285,83,0.951,107,1.937,109,1.593,112,1.017,121,1.417,122,1.593,154,1.285,155,1.593,158,1.092,185,1.593,192,1.092,196,1.593,197,1.593,201,0.84,204,1.092,207,1.285,214,1.285,228,1.417,230,1.417,232,2.288,234,0.951,243,1.179,251,1.593,255,1.285,256,1.593,259,1.285,260,1.593,262,1.593,278,1.593,292,1.017,293,1.593,333,1.285,352,1.285,367,5.559,384,1.285,385,1.593,390,1.179,391,1.092,395,1.017,396,1.017,397,1.017,421,1.417,423,1.593,436,1.017,454,1.937,456,1.417,457,1.285,458,3.876,470,1.417,488,1.417,490,1.417,494,1.417,503,1.417,514,1.593,515,1.593,519,1.593,520,1.593,523,1.593,524,1.593,525,2.749,534,1.593,538,2.395,539,2.075,543,1.417,549,1.285,550,1.593,555,1.593,562,1.285,563,1.593,565,1.017,577,1.593,585,1.417,586,1.593,587,1.862,588,1.862,589,4.762,590,6.047,591,6.353,592,6.353,593,4.762,594,5.759,595,2.573,596,1.593,597,1.593,598,1.862,599,1.593,600,1.593,601,1.593,602,1.862,603,1.862,604,1.593,605,1.862,606,1.862]],["title/dependencies.html",[95,2.092,607,2.593]],["body/dependencies.html",[11,0.02,15,0.015,16,0.015,82,1.028,95,2.086,136,3.725,172,3.312,254,3.003,285,3.725,434,3.003,463,3.312,540,3.725,542,3.725,608,6.171,609,5.587,610,4.352,611,4.352,612,4.352,613,4.352,614,4.352,615,4.352,616,4.352,617,4.352,618,4.352,619,4.352,620,4.352,621,4.352,622,4.352,623,4.352,624,4.352,625,4.352,626,4.352,627,4.352]],["title/miscellaneous/functions.html",[628,1.777,629,3.735]],["body/miscellaneous/functions.html",[11,0.017,15,0.017,16,0.017,21,0.723,597,4.669,599,5.84,628,3.199,629,4.669,630,5.455]],["title/index.html",[21,0.402,631,3.029,632,3.029]],["body/index.html",[11,0.02,15,0.01,16,0.01,17,1.415,49,2.013,73,1.318,151,2.936,233,2.442,234,2.284,235,2.144,292,1.318,305,1.836,312,2.065,315,2.065,317,3.155,318,3.828,319,2.065,327,1.665,328,2.065,329,2.065,330,2.065,335,3.828,448,2.065,451,1.836,493,1.836,585,2.805,586,3.828,633,2.413,634,2.413,635,2.413,636,2.413,637,3.686,638,2.413,639,2.413,640,2.413,641,3.686,642,2.413,643,2.413,644,2.413,645,2.413,646,3.686,647,2.413,648,2.413,649,2.413,650,2.413,651,4.472,652,3.686,653,3.686,654,2.413,655,2.413,656,2.413,657,2.413,658,2.413,659,2.413,660,2.413,661,2.413,662,2.065,663,2.413,664,2.413,665,2.413,666,2.413,667,2.413,668,4.472,669,3.686,670,3.686,671,2.413,672,2.413,673,4.472,674,3.686,675,2.413,676,2.413,677,5.914,678,2.413,679,2.413,680,5.685,681,2.413,682,3.686,683,2.413,684,2.413,685,2.413,686,2.413,687,2.413,688,2.413,689,2.413,690,2.413,691,3.686,692,2.413,693,2.413,694,3.686,695,4.472,696,4.472,697,3.686,698,2.413,699,2.413,700,2.413,701,5.006,702,2.413,703,3.686,704,2.413,705,2.413,706,2.413,707,2.413,708,4.472,709,2.413,710,2.413,711,2.413,712,2.413,713,2.413,714,2.413,715,2.413,716,2.413,717,2.413,718,2.413,719,2.413,720,2.413,721,2.413]],["title/modules.html",[94,2.375]],["body/modules.html",[11,0.016,15,0.016,16,0.016,93,2.783,94,2.275,161,3.275,165,3.007,166,3.007,167,3.007,168,2.783,722,7.045,723,7.045,724,7.045,725,7.045]],["title/overview.html",[726,4.239]],["body/overview.html",[2,0.729,11,0.02,15,0.012,16,0.012,70,1.403,83,3.219,93,3.695,94,1.403,95,2.04,96,2.504,97,2.504,98,2.504,99,2.324,100,1.598,101,1.598,108,1.598,112,3.441,158,2.941,161,4.811,162,2.504,163,2.504,164,2.504,165,3.868,166,3.868,167,4.236,168,3.695,189,2.504,190,2.504,191,2.504,192,3.695,223,2.504,224,2.504,225,2.504,391,3.695,414,2.504,415,2.504,416,2.504,455,1.598,565,3.441,571,2.504,572,2.504,573,2.504,726,2.504,727,5.015,728,2.926,729,2.926]],["title/properties.html",[22,1.146,607,2.593]],["body/properties.html",[11,0.02,15,0.017,16,0.017,22,1.405,305,4.072,662,4.58,730,5.35,731,5.35,732,5.35,733,5.35]],["title/miscellaneous/typealiases.html",[628,1.777,734,4.364]],["body/miscellaneous/typealiases.html",[9,2.814,11,0.017,15,0.017,16,0.017,21,0.683,27,0.555,28,0.824,32,2.193,44,3.932,351,4.283,456,3.922,538,3.265,539,4.283,628,3.022,735,5.153,736,4.411,737,5.153]],["title/miscellaneous/variables.html",[628,1.777,738,3.735]],["body/miscellaneous/variables.html",[1,1.139,4,0.147,9,2.322,11,0.02,12,1.401,15,0.008,16,0.008,21,0.238,23,2.017,24,0.898,25,2.017,26,2.017,27,0.569,28,0.844,32,1.244,44,1.139,47,0.655,49,2.016,61,2.015,64,2.172,66,1.26,73,1.596,83,1.886,103,0.918,124,1.368,183,2.224,192,2.165,198,1.596,201,0.811,206,1.368,228,2.224,230,2.224,234,1.493,235,0.862,292,2.322,298,5.122,299,5.122,326,1.368,346,1.368,351,2.017,402,3.16,405,3.16,406,1.539,412,1.539,421,2.224,457,2.017,458,1.368,459,3.16,460,2.501,461,3.16,463,1.368,470,2.224,471,5.391,472,2.501,473,2.501,474,2.501,475,2.501,476,2.501,477,2.501,478,2.501,479,2.501,480,2.501,481,2.017,482,2.017,483,2.017,484,2.017,485,2.501,486,2.501,487,2.501,488,2.224,489,1.539,490,2.224,491,1.539,492,1.539,493,1.368,494,2.224,495,1.539,496,2.501,497,1.539,498,1.539,499,1.539,500,1.539,501,1.539,502,1.539,503,2.224,504,1.539,505,1.539,506,2.501,507,1.539,508,1.539,509,1.539,510,1.539,511,1.539,538,1.139,539,2.017,543,2.224,544,1.539,545,1.539,565,1.596,595,1.539,596,1.539,600,1.539,601,2.501,604,1.539,628,1.054,736,1.539,738,1.539,739,1.798,740,2.922,741,4.677,742,1.798,743,1.798,744,3.692,745,1.798,746,2.922,747,1.798,748,1.798,749,1.798,750,1.798,751,1.798,752,1.798,753,1.798,754,1.798,755,1.798,756,1.798,757,1.798,758,1.798]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":730,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["100.886",{"_index":698,"title":{},"body":{"index.html":{}}}],["16.16.0",{"_index":670,"title":{},"body":{"index.html":{}}}],["16.16.0installation",{"_index":676,"title":{},"body":{"index.html":{}}}],["16.16.0using",{"_index":672,"title":{},"body":{"index.html":{}}}],["2.2.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":729,"title":{},"body":{"overview.html":{}}}],["281.397",{"_index":700,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":728,"title":{},"body":{"overview.html":{}}}],["4.17.21",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":530,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["422",{"_index":531,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["5.3.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":727,"title":{},"body":{"overview.html":{}}}],["6.0.4",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["7769.583",{"_index":699,"title":{},"body":{"index.html":{}}}],["8",{"_index":659,"title":{},"body":{"index.html":{}}}],["8151.866",{"_index":693,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":433,"title":{},"body":{"injectables/GraphService.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["_.filter(routes",{"_index":583,"title":{},"body":{"injectables/RoutesService.html":{}}}],["_.find(this._data",{"_index":559,"title":{},"body":{"classes/RouteRepository.html":{}}}],["__dirname",{"_index":492,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["_data",{"_index":39,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["_graph",{"_index":424,"title":{},"body":{"injectables/GraphService.html":{}}}],["_maxlegs",{"_index":425,"title":{},"body":{"injectables/GraphService.html":{}}}],["a[1",{"_index":544,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":303,"title":{},"body":{"classes/Graph.html":{}}}],["addedge",{"_index":294,"title":{},"body":{"classes/Graph.html":{}}}],["addedge(iata",{"_index":301,"title":{},"body":{"classes/Graph.html":{}}}],["adjacency",{"_index":328,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["adjacencylist",{"_index":1,"title":{"classes/AdjacencyList.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adjacencylist.get(vertex",{"_index":377,"title":{},"body":{"classes/Graph.html":{}}}],["adjacencylist.keys",{"_index":361,"title":{},"body":{"classes/Graph.html":{}}}],["adjlist",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["airline",{"_index":479,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airlineid",{"_index":480,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airport",{"_index":17,"title":{"classes/Airport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/Graph.html":{},"coverage.html":{},"index.html":{}}}],["airport.interface",{"_index":517,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["airportdata",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["airportid",{"_index":23,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["airportrepository",{"_index":36,"title":{"classes/AirportRepository.html":{}},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["airportrepository(this.airportdata",{"_index":220,"title":{},"body":{"injectables/DataService.html":{}}}],["airports",{"_index":73,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/DataService.html":{},"classes/Graph.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["airports.foreach((srcairport",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airports_data",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportscontroller",{"_index":69,"title":{"controllers/AirportsController.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"coverage.html":{}}}],["airportsdataprovider",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["airportsmodule",{"_index":93,"title":{"modules/AirportsModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["airportsservice",{"_index":83,"title":{"injectables/AirportsService.html":{}},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"controllers/GraphController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["airportsservice.findall",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airportsservice.findone(route.destinationairport",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algo",{"_index":658,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":318,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["aliases",{"_index":735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":121,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["altitude",{"_index":475,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":639,"title":{},"body":{"index.html":{}}}],["api",{"_index":689,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":252,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{}}}],["app",{"_index":651,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":154,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":719,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":158,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.from(this._data.values",{"_index":67,"title":{},"body":{"classes/AirportRepository.html":{}}}],["asdf",{"_index":673,"title":{},"body":{"index.html":{}}}],["async",{"_index":495,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":733,"title":{},"body":{"properties.html":{}}}],["await",{"_index":506,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":346,"title":{},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["b[1",{"_index":545,"title":{},"body":{"classes/MinHeap.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":312,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["bonus",{"_index":717,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":403,"title":{},"body":{"controllers/GraphController.html":{}}}],["break",{"_index":376,"title":{},"body":{"classes/Graph.html":{}}}],["browse",{"_index":725,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":722,"title":{},"body":{"modules.html":{}}}],["business",{"_index":644,"title":{},"body":{"index.html":{}}}],["c",{"_index":347,"title":{},"body":{"classes/Graph.html":{}}}],["cache",{"_index":721,"title":{},"body":{"index.html":{}}}],["catch",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cellparser",{"_index":466,"title":{},"body":{"interfaces/IConfig.html":{}}}],["checktype",{"_index":498,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":472,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"overview.html":{}}}],["cluster_airportsmodule",{"_index":96,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_exports",{"_index":97,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_airportsmodule_providers",{"_index":98,"title":{},"body":{"modules/AirportsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":189,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":190,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":191,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":223,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_graphmodule",{"_index":414,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_exports",{"_index":416,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_graphmodule_imports",{"_index":417,"title":{},"body":{"modules/GraphModule.html":{}}}],["cluster_graphmodule_providers",{"_index":415,"title":{},"body":{"modules/GraphModule.html":{},"overview.html":{}}}],["cluster_routesmodule",{"_index":571,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_exports",{"_index":572,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_providers",{"_index":573,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["code",{"_index":307,"title":{},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"classes/InvalidIataError.html":{}}}],["codeshare",{"_index":485,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["colparser",{"_index":459,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["columnparam",{"_index":467,"title":{},"body":{"interfaces/IConfig.html":{}}}],["common/common.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":165,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["complete",{"_index":640,"title":{},"body":{"index.html":{}}}],["config",{"_index":496,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.colparser",{"_index":499,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.dat",{"_index":502,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.filename}.json",{"_index":510,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config.headers",{"_index":500,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":428,"title":{},"body":{"injectables/GraphService.html":{}}}],["configservice.get('maxlegs",{"_index":439,"title":{},"body":{"injectables/GraphService.html":{}}}],["configuration",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["conifgs",{"_index":470,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conifgs.map(async",{"_index":504,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":310,"title":{},"body":{"classes/Graph.html":{}}}],["console.log('done",{"_index":513,"title":{},"body":{"interfaces/IConfig.html":{}}}],["const",{"_index":61,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"classes/MinHeap.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{}}}],["constructor(airportdata",{"_index":199,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(data",{"_index":43,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["constructor(dataservice",{"_index":111,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["constructor(graph",{"_index":427,"title":{},"body":{"injectables/GraphService.html":{}}}],["constructor(httpadapterhost",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(iata",{"_index":535,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["constructor(message",{"_index":526,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["constructor(previousedge",{"_index":246,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["constructor(src",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["containerize",{"_index":718,"title":{},"body":{"index.html":{}}}],["contains",{"_index":334,"title":{},"body":{"classes/Graph.html":{}}}],["controller",{"_index":68,"title":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["controller('airports",{"_index":87,"title":{},"body":{"controllers/AirportsController.html":{}}}],["controller('graph",{"_index":399,"title":{},"body":{"controllers/GraphController.html":{}}}],["controller('routes",{"_index":569,"title":{},"body":{"controllers/RoutesController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["conversion",{"_index":503,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertdistance",{"_index":283,"title":{},"body":{"injectables/GeolibService.html":{}}}],["convertdistance(distance",{"_index":289,"title":{},"body":{"injectables/GeolibService.html":{}}}],["country",{"_index":473,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":585,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covers",{"_index":716,"title":{},"body":{"index.html":{}}}],["csv",{"_index":463,"title":{},"body":{"interfaces/IConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["csvtojson",{"_index":464,"title":{},"body":{"interfaces/IConfig.html":{}}}],["csvtojson/v2/parameters",{"_index":468,"title":{},"body":{"interfaces/IConfig.html":{}}}],["ctx",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["currentdistance",{"_index":379,"title":{},"body":{"classes/Graph.html":{}}}],["currentmindistance",{"_index":374,"title":{},"body":{"classes/Graph.html":{}}}],["currentpath",{"_index":380,"title":{},"body":{"classes/Graph.html":{}}}],["custom",{"_index":713,"title":{},"body":{"index.html":{}}}],["customprioritycomparator",{"_index":543,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":348,"title":{},"body":{"classes/Graph.html":{}}}],["data",{"_index":49,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.sourceairport",{"_index":584,"title":{},"body":{"injectables/RoutesService.html":{}}}],["data_dir",{"_index":488,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":493,"title":{},"body":{"interfaces/IConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["database/entities/airport.entity",{"_index":59,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/entities/route.entity",{"_index":558,"title":{},"body":{"classes/RouteRepository.html":{}}}],["database/errors",{"_index":58,"title":{},"body":{"classes/AirportRepository.html":{}}}],["database/interfaces/airport.interface",{"_index":85,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{}}}],["database/interfaces/route.interface",{"_index":567,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["database/providers/airport.provider",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/providers/route.provider",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/services/data",{"_index":117,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/RoutesService.html":{}}}],["database_data_dir",{"_index":490,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":166,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataservice",{"_index":112,"title":{"injectables/DataService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{}}}],["datasource",{"_index":654,"title":{},"body":{"index.html":{}}}],["date().toisostring",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["decorators",{"_index":77,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/AppController.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["default",{"_index":298,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["demonstrate",{"_index":635,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":305,"title":{},"body":{"classes/Graph.html":{},"index.html":{},"properties.html":{}}}],["description).the",{"_index":642,"title":{},"body":{"index.html":{}}}],["dest",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"index.html":{}}}],["destairport",{"_index":405,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["destairport.iata",{"_index":412,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["destinationairport",{"_index":483,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["destinationairportid",{"_index":484,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":679,"title":{},"body":{"index.html":{}}}],["dijkstra",{"_index":296,"title":{},"body":{"classes/Graph.html":{}}}],["dijkstra's",{"_index":317,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["dijkstra(adjacencylist",{"_index":314,"title":{},"body":{"classes/Graph.html":{}}}],["disable",{"_index":270,"title":{},"body":{"classes/GenericRepository.html":{}}}],["distance",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distanceinkm",{"_index":288,"title":{},"body":{"injectables/GeolibService.html":{}}}],["doc",{"_index":649,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":586,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dst",{"_index":476,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":326,"title":{},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":704,"title":{},"body":{"index.html":{}}}],["each",{"_index":336,"title":{},"body":{"classes/Graph.html":{}}}],["edge",{"_index":12,"title":{"classes/Edge.html":{}},"body":{"classes/AdjacencyList.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edge(srcairport.iata",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edges",{"_index":327,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["edges.dest).join",{"_index":383,"title":{},"body":{"classes/Graph.html":{}}}],["edges.length",{"_index":446,"title":{},"body":{"injectables/GraphService.html":{}}}],["edges.push(edge",{"_index":357,"title":{},"body":{"classes/Graph.html":{}}}],["edgetracker",{"_index":243,"title":{"classes/EdgeTracker.html":{}},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["equipment",{"_index":487,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":532,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["errors",{"_index":714,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":269,"title":{},"body":{"classes/GenericRepository.html":{}}}],["eslint/no",{"_index":274,"title":{},"body":{"classes/GenericRepository.html":{}}}],["example",{"_index":691,"title":{},"body":{"index.html":{}}}],["exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.tostring",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":14,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["exports",{"_index":104,"title":{},"body":{"modules/AirportsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["express",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["extend",{"_index":715,"title":{},"body":{"index.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/AirportRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["filename",{"_index":460,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["findairportdto",{"_index":76,"title":{"classes/FindAirportDto.html":{}},"body":{"controllers/AirportsController.html":{},"classes/FindAirportDto.html":{},"coverage.html":{}}}],["findall",{"_index":110,"title":{},"body":{"injectables/AirportsService.html":{}}}],["findallforairport",{"_index":578,"title":{},"body":{"injectables/RoutesService.html":{}}}],["findallforairport(iata",{"_index":580,"title":{},"body":{"injectables/RoutesService.html":{}}}],["finding",{"_index":637,"title":{},"body":{"index.html":{}}}],["findone",{"_index":74,"title":{},"body":{"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/RoutesController.html":{}}}],["findone(@param",{"_index":89,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findone(iata",{"_index":115,"title":{},"body":{"injectables/AirportsService.html":{}}}],["findone(params",{"_index":75,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["findpath",{"_index":386,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(@query",{"_index":400,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpath(query",{"_index":387,"title":{},"body":{"controllers/GraphController.html":{}}}],["findpathdto",{"_index":255,"title":{"classes/FindPathDto.html":{}},"body":{"classes/FindPathDto.html":{},"controllers/GraphController.html":{},"coverage.html":{}}}],["findroutedto",{"_index":259,"title":{"classes/FindRouteDto.html":{}},"body":{"classes/FindRouteDto.html":{},"controllers/RoutesController.html":{},"coverage.html":{}}}],["findshortestpath",{"_index":426,"title":{},"body":{"injectables/GraphService.html":{}}}],["findshortestpath(src",{"_index":430,"title":{},"body":{"injectables/GraphService.html":{}}}],["flight",{"_index":309,"title":{},"body":{"classes/Graph.html":{}}}],["format",{"_index":709,"title":{},"body":{"index.html":{}}}],["found",{"_index":448,"title":{},"body":{"injectables/GraphService.html":{},"index.html":{}}}],["fromfile(path.join(data_dir",{"_index":501,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":465,"title":{},"body":{"interfaces/IConfig.html":{}}}],["fs.writefilesync",{"_index":508,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":629,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generic",{"_index":516,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["generic.repository",{"_index":56,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository",{"_index":38,"title":{"classes/GenericRepository.html":{}},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["genericrepository:13",{"_index":53,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["genericrepository:17",{"_index":557,"title":{},"body":{"classes/RouteRepository.html":{}}}],["genericrepository:21",{"_index":55,"title":{},"body":{"classes/AirportRepository.html":{}}}],["genericrepository:7",{"_index":51,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["geolib",{"_index":285,"title":{},"body":{"injectables/GeolibService.html":{},"dependencies.html":{}}}],["geolib/es/types",{"_index":286,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibinputcoordinates",{"_index":281,"title":{},"body":{"injectables/GeolibService.html":{}}}],["geolibservice",{"_index":192,"title":{"injectables/GeolibService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/GeolibService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["geolibservice.getdistanceinkm(srcairport",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':iata",{"_index":78,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["get(iata",{"_index":52,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getall",{"_index":41,"title":{},"body":{"classes/AirportRepository.html":{},"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{}}}],["getdistance",{"_index":284,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistance(from",{"_index":287,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm",{"_index":279,"title":{},"body":{"injectables/GeolibService.html":{}}}],["getdistanceinkm(from",{"_index":280,"title":{},"body":{"injectables/GeolibService.html":{}}}],["gethello",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjsonfromcsvfile",{"_index":494,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getjsonfromcsvfile(config",{"_index":507,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":631,"title":{"index.html":{}},"body":{}}],["global",{"_index":194,"title":{},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{}}}],["graph",{"_index":292,"title":{"classes/Graph.html":{}},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graph.addedge(srcairport.iata",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph.dijkstra(this._graph.adjacencylist",{"_index":442,"title":{},"body":{"injectables/GraphService.html":{}}}],["graph.model.ts",{"_index":648,"title":{},"body":{"index.html":{}}}],["graph.visualizepath(src",{"_index":453,"title":{},"body":{"injectables/GraphService.html":{}}}],["graph_data",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphcontroller",{"_index":384,"title":{"controllers/GraphController.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"coverage.html":{}}}],["graphmodule",{"_index":167,"title":{"modules/GraphModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules.html":{},"overview.html":{}}}],["graphprovider",{"_index":421,"title":{},"body":{"modules/GraphModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphservice",{"_index":391,"title":{"injectables/GraphService.html":{}},"body":{"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"coverage.html":{},"overview.html":{}}}],["greedy",{"_index":657,"title":{},"body":{"index.html":{}}}],["hbs",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":461,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["heap",{"_index":540,"title":{},"body":{"classes/MinHeap.html":{},"dependencies.html":{}}}],["heap.model",{"_index":354,"title":{},"body":{"classes/Graph.html":{}}}],["heap.model.ts",{"_index":539,"title":{},"body":{"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["heap.model.ts:7",{"_index":541,"title":{},"body":{"classes/MinHeap.html":{}}}],["heapitem",{"_index":351,"title":{},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hel",{"_index":695,"title":{},"body":{"index.html":{}}}],["hello",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["history",{"_index":337,"title":{},"body":{"classes/Graph.html":{}}}],["hnd",{"_index":697,"title":{},"body":{"index.html":{}}}],["host",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost:3000/graph?src=tll&dest=hndresponse",{"_index":692,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/swaggermain",{"_index":688,"title":{},"body":{"index.html":{}}}],["httpadapter",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["https://mihara0320.github.io/airplane",{"_index":652,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/download/release/v16.16.0",{"_index":667,"title":{},"body":{"index.html":{}}}],["https://openflights.org/data.html",{"_index":655,"title":{},"body":{"index.html":{}}}],["https://www.geeksforgeeks.org/dijkstras",{"_index":656,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iairport",{"_index":20,"title":{"interfaces/IAirport.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["iairportmap",{"_index":44,"title":{},"body":{"classes/AirportRepository.html":{},"injectables/DataService.html":{},"interfaces/IAirport.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iata",{"_index":24,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/FindAirportDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/InvalidIataError.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["iatanotfoundexception",{"_index":395,"title":{"classes/IataNotFoundException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["iatanotfoundexception(e.message",{"_index":409,"title":{},"body":{"controllers/GraphController.html":{}}}],["iatanotprovidedexception",{"_index":396,"title":{"classes/IataNotProvidedException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["icao",{"_index":474,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["iconfig",{"_index":457,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["idataservices",{"_index":207,"title":{"interfaces/IDataServices.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"coverage.html":{}}}],["identifier",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["igenericrepository",{"_index":204,"title":{"interfaces/IGenericRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["implementation",{"_index":319,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["implemented",{"_index":647,"title":{},"body":{"index.html":{}}}],["implements",{"_index":19,"title":{},"body":{"classes/Airport.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/GenericRepository.html":{},"classes/Route.html":{}}}],["import",{"_index":10,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["improve",{"_index":708,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":363,"title":{},"body":{"classes/Graph.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["inherited",{"_index":50,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["initialdistances",{"_index":360,"title":{},"body":{"classes/Graph.html":{}}}],["initialdistances.push([iata",{"_index":365,"title":{},"body":{"classes/Graph.html":{}}}],["inject",{"_index":206,"title":{},"body":{"injectables/DataService.html":{},"injectables/GraphService.html":{},"miscellaneous/variables.html":{}}}],["inject('airports_data",{"_index":216,"title":{},"body":{"injectables/DataService.html":{}}}],["inject('graph_data",{"_index":437,"title":{},"body":{"injectables/GraphService.html":{}}}],["inject('routes_data",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{}},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AirportsService.html":{},"injectables/AppService.html":{},"injectables/DataService.html":{},"injectables/GeolibService.html":{},"injectables/GraphService.html":{},"injectables/RoutesService.html":{},"overview.html":{}}}],["install",{"_index":669,"title":{},"body":{"index.html":{}}}],["installer",{"_index":666,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":678,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intended",{"_index":634,"title":{},"body":{"index.html":{}}}],["interface",{"_index":454,"title":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{}},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":455,"title":{},"body":{"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"overview.html":{}}}],["interfaces/airport.interface",{"_index":35,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{}}}],["interfaces/data",{"_index":208,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/generic",{"_index":210,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{}}}],["interfaces/route.interface",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{}}}],["invalidiataerror",{"_index":57,"title":{"classes/InvalidIataError.html":{}},"body":{"classes/AirportRepository.html":{},"classes/InvalidIataError.html":{},"coverage.html":{}}}],["invalidiataerror(iata",{"_index":65,"title":{},"body":{"classes/AirportRepository.html":{}}}],["iroute",{"_index":201,"title":{"interfaces/IRoute.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["ishortestpathresult",{"_index":390,"title":{"interfaces/IShortestPathResult.html":{}},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["js",{"_index":542,"title":{},"body":{"classes/MinHeap.html":{},"dependencies.html":{}}}],["json.stringify(jsondata",{"_index":511,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["jsondata",{"_index":505,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":469,"title":{},"body":{"interfaces/IConfig.html":{}}}],["km",{"_index":290,"title":{},"body":{"injectables/GeolibService.html":{}}}],["latitude",{"_index":25,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["layovers",{"_index":450,"title":{},"body":{"injectables/GraphService.html":{}}}],["less",{"_index":449,"title":{},"body":{"injectables/GraphService.html":{}}}],["license",{"_index":731,"title":{},"body":{"properties.html":{}}}],["line",{"_index":272,"title":{},"body":{"classes/GenericRepository.html":{}}}],["lint",{"_index":710,"title":{},"body":{"index.html":{}}}],["list",{"_index":329,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["list.model",{"_index":350,"title":{},"body":{"classes/Graph.html":{}}}],["list.model.ts",{"_index":7,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["literal",{"_index":462,"title":{},"body":{"interfaces/IConfig.html":{}}}],["load",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":675,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":434,"title":{},"body":{"injectables/GraphService.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["log(v",{"_index":321,"title":{},"body":{"classes/Graph.html":{}}}],["logic",{"_index":645,"title":{},"body":{"index.html":{}}}],["longitude",{"_index":26,"title":{},"body":{"classes/Airport.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["lowdb",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":643,"title":{},"body":{"index.html":{}}}],["map",{"_index":9,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"interfaces/IAirport.html":{},"classes/MinDistanceList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":16,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":528,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["metadata",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":40,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["mimdistances",{"_index":441,"title":{},"body":{"injectables/GraphService.html":{}}}],["mimdistances.get(dest",{"_index":444,"title":{},"body":{"injectables/GraphService.html":{}}}],["mindistancelist",{"_index":333,"title":{"classes/MinDistanceList.html":{}},"body":{"classes/Graph.html":{},"classes/MinDistanceList.html":{},"coverage.html":{}}}],["minheap",{"_index":352,"title":{"classes/MinHeap.html":{}},"body":{"classes/Graph.html":{},"classes/MinHeap.html":{},"coverage.html":{}}}],["miscellaneous",{"_index":628,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":682,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/airports/airports.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/airports/controllers/airports.controller",{"_index":106,"title":{},"body":{"modules/AirportsModule.html":{}}}],["modules/airports/dto/airports.dto",{"_index":86,"title":{},"body":{"controllers/AirportsController.html":{}}}],["modules/airports/services/airports.service",{"_index":84,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/GraphController.html":{}}}],["modules/graph/controllers/graph.controller",{"_index":420,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/dto/graph.dto",{"_index":394,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/graph/errors",{"_index":398,"title":{},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["modules/graph/graph.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/graph/interfaces/graph.interface",{"_index":393,"title":{},"body":{"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["modules/graph/models/adjacency",{"_index":349,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/models/edge.model",{"_index":13,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinDistanceList.html":{}}}],["modules/graph/models/graph.model",{"_index":435,"title":{},"body":{"injectables/GraphService.html":{}}}],["modules/graph/models/min",{"_index":353,"title":{},"body":{"classes/Graph.html":{}}}],["modules/graph/providers/graph.provider",{"_index":422,"title":{},"body":{"modules/GraphModule.html":{}}}],["modules/graph/services/graph.service",{"_index":392,"title":{},"body":{"controllers/GraphController.html":{}}}],["modules/routes/controllers/routes.controller",{"_index":576,"title":{},"body":{"modules/RoutesModule.html":{}}}],["modules/routes/dto/routes.dto",{"_index":568,"title":{},"body":{"controllers/RoutesController.html":{}}}],["modules/routes/routes.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{}}}],["modules/routes/services/routes.service",{"_index":566,"title":{},"body":{"controllers/RoutesController.html":{}}}],["move",{"_index":720,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":82,"title":{},"body":{"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"injectables/GeolibService.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":254,"title":{},"body":{"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"dependencies.html":{}}}],["new",{"_index":64,"title":{},"body":{"classes/AirportRepository.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":271,"title":{},"body":{"classes/GenericRepository.html":{}}}],["ngo",{"_index":696,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":663,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":674,"title":{},"body":{"index.html":{}}}],["noheader",{"_index":497,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":677,"title":{},"body":{"index.html":{}}}],["null",{"_index":364,"title":{},"body":{"classes/Graph.html":{},"controllers/GraphController.html":{}}}],["number",{"_index":32,"title":{},"body":{"classes/Airport.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{},"classes/MinHeap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(distanceinkm.tofixed(3",{"_index":291,"title":{},"body":{"injectables/GeolibService.html":{}}}],["nvm",{"_index":668,"title":{},"body":{"index.html":{}}}],["o",{"_index":560,"title":{},"body":{"classes/RouteRepository.html":{}}}],["o((v+e",{"_index":320,"title":{},"body":{"classes/Graph.html":{}}}],["o(1",{"_index":373,"title":{},"body":{"classes/Graph.html":{}}}],["o(e",{"_index":378,"title":{},"body":{"classes/Graph.html":{}}}],["o(log(v",{"_index":370,"title":{},"body":{"classes/Graph.html":{}}}],["o(v",{"_index":323,"title":{},"body":{"classes/Graph.html":{}}}],["o.sourceairport",{"_index":561,"title":{},"body":{"classes/RouteRepository.html":{}}}],["object",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["official",{"_index":665,"title":{},"body":{"index.html":{}}}],["omit",{"_index":471,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":638,"title":{},"body":{"index.html":{}}}],["optional",{"_index":48,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["order",{"_index":344,"title":{},"body":{"classes/Graph.html":{}}}],["out",{"_index":101,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["overview",{"_index":726,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":607,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":81,"title":{},"body":{"controllers/AirportsController.html":{},"classes/Graph.html":{},"controllers/RoutesController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["params",{"_index":80,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["params.iata",{"_index":90,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/RoutesController.html":{}}}],["parse",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["path.join",{"_index":491,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":489,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["path.join(database_data_dir",{"_index":509,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["pathnotfound",{"_index":436,"title":{"classes/PathNotFound.html":{}},"body":{"injectables/GraphService.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["pathnotfoundexception",{"_index":397,"title":{"classes/PathNotFoundException.html":{}},"body":{"controllers/GraphController.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["pathnotfoundexception(e.message",{"_index":413,"title":{},"body":{"controllers/GraphController.html":{}}}],["please",{"_index":401,"title":{},"body":{"controllers/GraphController.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AirportsController.html":{},"controllers/GraphController.html":{},"controllers/RoutesController.html":{}}}],["prerequisites",{"_index":660,"title":{},"body":{"index.html":{}}}],["previousedge",{"_index":244,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/DataService.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["production",{"_index":684,"title":{},"body":{"index.html":{}}}],["promise.all(conversion).then",{"_index":512,"title":{},"body":{"interfaces/IConfig.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"properties.html":{}}}],["provide",{"_index":402,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":103,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"interfaces/IConfig.html":{},"modules/RoutesModule.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":389,"title":{},"body":{"controllers/GraphController.html":{}}}],["rawdata",{"_index":263,"title":{},"body":{"classes/GenericRepository.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/GraphService.html":{}}}],["references",{"_index":650,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["repositories/airport.repository",{"_index":213,"title":{},"body":{"injectables/DataService.html":{}}}],["repositories/route.repository",{"_index":215,"title":{},"body":{"injectables/DataService.html":{}}}],["repository",{"_index":633,"title":{},"body":{"index.html":{}}}],["repository.interface",{"_index":211,"title":{},"body":{"injectables/DataService.html":{},"classes/GenericRepository.html":{},"interfaces/IDataServices.html":{}}}],["repository.interface.ts",{"_index":520,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["repository.interface.ts:2",{"_index":522,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["repository.interface.ts:3",{"_index":521,"title":{},"body":{"interfaces/IGenericRepository.html":{}}}],["represent",{"_index":331,"title":{},"body":{"classes/Graph.html":{}}}],["representation",{"_index":330,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["represented",{"_index":308,"title":{},"body":{"classes/Graph.html":{}}}],["request",{"_index":690,"title":{},"body":{"index.html":{}}}],["reset",{"_index":100,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}],["responsebody",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["results",{"_index":15,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":54,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IGenericRepository.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["rimraf",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":549,"title":{"classes/Route.html":{}},"body":{"classes/Route.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["route.interface",{"_index":518,"title":{},"body":{"interfaces/IDataServices.html":{}}}],["routedata",{"_index":200,"title":{},"body":{"injectables/DataService.html":{}}}],["router",{"_index":653,"title":{},"body":{"index.html":{}}}],["routerepository",{"_index":214,"title":{"classes/RouteRepository.html":{}},"body":{"injectables/DataService.html":{},"classes/RouteRepository.html":{},"coverage.html":{}}}],["routerepository(this.routedata",{"_index":222,"title":{},"body":{"injectables/DataService.html":{}}}],["routes",{"_index":198,"title":{},"body":{"injectables/DataService.html":{},"classes/Graph.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["routes.foreach((route",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes_data",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routescontroller",{"_index":562,"title":{"controllers/RoutesController.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"coverage.html":{}}}],["routesdataprovider",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeservice",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routeservice.findallforairport(srcairport.iata",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routesmodule",{"_index":168,"title":{"modules/RoutesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routesservice",{"_index":565,"title":{"injectables/RoutesService.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rules",{"_index":711,"title":{},"body":{"index.html":{}}}],["run",{"_index":680,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["scripts/.../generatejson.ts",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts/generatejson.ts",{"_index":458,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.interface",{"_index":209,"title":{},"body":{"injectables/DataService.html":{}}}],["service.interface.ts",{"_index":515,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["service.service",{"_index":118,"title":{},"body":{"injectables/AirportsService.html":{},"modules/DatabaseModule.html":{},"injectables/RoutesService.html":{}}}],["service.service.ts",{"_index":197,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["service.service.ts:11",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["service.service.ts:12",{"_index":202,"title":{},"body":{"injectables/DataService.html":{}}}],["services/airports.service",{"_index":105,"title":{},"body":{"modules/AirportsModule.html":{}}}],["services/data",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/geolib/geolib.service",{"_index":195,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/graph.service",{"_index":419,"title":{},"body":{"modules/GraphModule.html":{}}}],["services/routes.service",{"_index":575,"title":{},"body":{"modules/RoutesModule.html":{}}}],["shortest",{"_index":335,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["shortestpaths",{"_index":359,"title":{},"body":{"classes/Graph.html":{}}}],["shortestpaths.get(dest",{"_index":381,"title":{},"body":{"classes/Graph.html":{}}}],["shortestpaths.set(iata",{"_index":362,"title":{},"body":{"classes/Graph.html":{}}}],["shortestpaths.set(start",{"_index":366,"title":{},"body":{"classes/Graph.html":{}}}],["shortestpathtodest",{"_index":443,"title":{},"body":{"injectables/GraphService.html":{}}}],["shortestpathtodest.previousedge",{"_index":445,"title":{},"body":{"injectables/GraphService.html":{}}}],["shortestpathtodest.totaldistance",{"_index":452,"title":{},"body":{"injectables/GraphService.html":{}}}],["sorted",{"_index":342,"title":{},"body":{"classes/Graph.html":{}}}],["sortededges",{"_index":339,"title":{},"body":{"classes/Graph.html":{},"injectables/GraphService.html":{}}}],["sortededges.map((edges",{"_index":382,"title":{},"body":{"classes/Graph.html":{}}}],["sortededges[0].src",{"_index":447,"title":{},"body":{"injectables/GraphService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdjacencyList.html":{},"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"modules/AirportsModule.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"injectables/DataService.html":{},"modules/DatabaseModule.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"modules/GraphModule.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"miscellaneous/variables.html":{}}}],["sourceairport",{"_index":481,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["sourceairportid",{"_index":482,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IRoute.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":324,"title":{},"body":{"classes/Graph.html":{}}}],["src",{"_index":235,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindPathDto.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/.../adjacencylist.ts",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../airport.interface.ts",{"_index":737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../airport.provider.ts",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.provider.ts",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../min",{"_index":736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route.provider.ts",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":193,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:11",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exception.filter.ts:14",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/services/geolib/geolib.service.ts",{"_index":278,"title":{},"body":{"injectables/GeolibService.html":{},"coverage.html":{}}}],["src/common/services/geolib/geolib.service.ts:7",{"_index":282,"title":{},"body":{"injectables/GeolibService.html":{}}}],["src/database/database.module.ts",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/airport.entity.ts",{"_index":18,"title":{},"body":{"classes/Airport.html":{},"coverage.html":{}}}],["src/database/entities/airport.entity.ts:4",{"_index":30,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:5",{"_index":31,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:6",{"_index":33,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/airport.entity.ts:7",{"_index":34,"title":{},"body":{"classes/Airport.html":{}}}],["src/database/entities/route.entity.ts",{"_index":550,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/database/entities/route.entity.ts:4",{"_index":553,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:5",{"_index":554,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:6",{"_index":551,"title":{},"body":{"classes/Route.html":{}}}],["src/database/entities/route.entity.ts:7",{"_index":552,"title":{},"body":{"classes/Route.html":{}}}],["src/database/errors/index.ts",{"_index":534,"title":{},"body":{"classes/InvalidIataError.html":{},"coverage.html":{}}}],["src/database/errors/index.ts:1",{"_index":536,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["src/database/interfaces/airport.interface.ts",{"_index":456,"title":{},"body":{"interfaces/IAirport.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/database/interfaces/data",{"_index":514,"title":{},"body":{"interfaces/IDataServices.html":{},"coverage.html":{}}}],["src/database/interfaces/generic",{"_index":519,"title":{},"body":{"interfaces/IGenericRepository.html":{},"coverage.html":{}}}],["src/database/interfaces/route.interface.ts",{"_index":523,"title":{},"body":{"interfaces/IRoute.html":{},"coverage.html":{}}}],["src/database/providers/airport.provider.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/route.provider.ts",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/repositories/airport.repository.ts",{"_index":37,"title":{},"body":{"classes/AirportRepository.html":{},"coverage.html":{}}}],["src/database/repositories/airport.repository.ts:7",{"_index":45,"title":{},"body":{"classes/AirportRepository.html":{}}}],["src/database/repositories/generic.repository.ts",{"_index":262,"title":{},"body":{"classes/GenericRepository.html":{},"coverage.html":{}}}],["src/database/repositories/generic.repository.ts:11",{"_index":265,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:15",{"_index":267,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/generic.repository.ts:4",{"_index":264,"title":{},"body":{"classes/GenericRepository.html":{}}}],["src/database/repositories/route.repository.ts",{"_index":555,"title":{},"body":{"classes/RouteRepository.html":{},"coverage.html":{}}}],["src/database/repositories/route.repository.ts:7",{"_index":556,"title":{},"body":{"classes/RouteRepository.html":{}}}],["src/database/services/data",{"_index":196,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/airports/airports.module.ts",{"_index":102,"title":{},"body":{"modules/AirportsModule.html":{}}}],["src/modules/airports/controllers/airports.controller.ts",{"_index":71,"title":{},"body":{"controllers/AirportsController.html":{},"coverage.html":{}}}],["src/modules/airports/controllers/airports.controller.ts:11",{"_index":79,"title":{},"body":{"controllers/AirportsController.html":{}}}],["src/modules/airports/dto/airports.dto.ts",{"_index":251,"title":{},"body":{"classes/FindAirportDto.html":{},"coverage.html":{}}}],["src/modules/airports/dto/airports.dto.ts:5",{"_index":253,"title":{},"body":{"classes/FindAirportDto.html":{}}}],["src/modules/airports/services/airports.service.ts",{"_index":109,"title":{},"body":{"injectables/AirportsService.html":{},"coverage.html":{}}}],["src/modules/airports/services/airports.service.ts:10",{"_index":114,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:14",{"_index":116,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/airports/services/airports.service.ts:7",{"_index":113,"title":{},"body":{"injectables/AirportsService.html":{}}}],["src/modules/graph/controllers/graph.controller.ts",{"_index":385,"title":{},"body":{"controllers/GraphController.html":{},"coverage.html":{}}}],["src/modules/graph/controllers/graph.controller.ts:20",{"_index":388,"title":{},"body":{"controllers/GraphController.html":{}}}],["src/modules/graph/dto/graph.dto.ts",{"_index":256,"title":{},"body":{"classes/FindPathDto.html":{},"coverage.html":{}}}],["src/modules/graph/dto/graph.dto.ts:5",{"_index":258,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/dto/graph.dto.ts:8",{"_index":257,"title":{},"body":{"classes/FindPathDto.html":{}}}],["src/modules/graph/errors/index.ts",{"_index":525,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"coverage.html":{}}}],["src/modules/graph/errors/index.ts:15",{"_index":548,"title":{},"body":{"classes/PathNotFoundException.html":{}}}],["src/modules/graph/errors/index.ts:21",{"_index":547,"title":{},"body":{"classes/PathNotFound.html":{}}}],["src/modules/graph/errors/index.ts:3",{"_index":533,"title":{},"body":{"classes/IataNotProvidedException.html":{}}}],["src/modules/graph/errors/index.ts:9",{"_index":527,"title":{},"body":{"classes/IataNotFoundException.html":{}}}],["src/modules/graph/graph.module.ts",{"_index":418,"title":{},"body":{"modules/GraphModule.html":{}}}],["src/modules/graph/interfaces/graph.interface.ts",{"_index":524,"title":{},"body":{"interfaces/IShortestPathResult.html":{},"coverage.html":{}}}],["src/modules/graph/models/adjacency",{"_index":6,"title":{},"body":{"classes/AdjacencyList.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"coverage.html":{}}}],["src/modules/graph/models/edge.model.ts:14",{"_index":250,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:15",{"_index":249,"title":{},"body":{"classes/EdgeTracker.html":{}}}],["src/modules/graph/models/edge.model.ts:2",{"_index":239,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:3",{"_index":238,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/edge.model.ts:4",{"_index":237,"title":{},"body":{"classes/Edge.html":{}}}],["src/modules/graph/models/fixtures/adjacencylist.ts",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/models/graph.model.ts",{"_index":293,"title":{},"body":{"classes/Graph.html":{},"coverage.html":{}}}],["src/modules/graph/models/graph.model.ts:100",{"_index":340,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:15",{"_index":302,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:32",{"_index":316,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/graph.model.ts:7",{"_index":300,"title":{},"body":{"classes/Graph.html":{}}}],["src/modules/graph/models/min",{"_index":538,"title":{},"body":{"classes/MinDistanceList.html":{},"classes/MinHeap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/providers/graph.provider.ts",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/graph/services/graph.service.ts",{"_index":423,"title":{},"body":{"injectables/GraphService.html":{},"coverage.html":{}}}],["src/modules/graph/services/graph.service.ts:12",{"_index":432,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:13",{"_index":429,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/graph/services/graph.service.ts:23",{"_index":431,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/modules/routes/controllers/routes.controller.ts",{"_index":563,"title":{},"body":{"controllers/RoutesController.html":{},"coverage.html":{}}}],["src/modules/routes/controllers/routes.controller.ts:11",{"_index":564,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/modules/routes/dto/routes.dto.ts",{"_index":260,"title":{},"body":{"classes/FindRouteDto.html":{},"coverage.html":{}}}],["src/modules/routes/dto/routes.dto.ts:5",{"_index":261,"title":{},"body":{"classes/FindRouteDto.html":{}}}],["src/modules/routes/routes.module.ts",{"_index":574,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/modules/routes/services/routes.service.ts",{"_index":577,"title":{},"body":{"injectables/RoutesService.html":{},"coverage.html":{}}}],["src/modules/routes/services/routes.service.ts:11",{"_index":581,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/modules/routes/services/routes.service.ts:8",{"_index":579,"title":{},"body":{"injectables/RoutesService.html":{}}}],["srcairport",{"_index":404,"title":{},"body":{"controllers/GraphController.html":{}}}],["srcairport.iata",{"_index":411,"title":{},"body":{"controllers/GraphController.html":{}}}],["start",{"_index":315,"title":{},"body":{"classes/Graph.html":{},"index.html":{}}}],["start:dev",{"_index":683,"title":{},"body":{"index.html":{}}}],["start:prodapi",{"_index":685,"title":{},"body":{"index.html":{}}}],["started",{"_index":632,"title":{"index.html":{}},"body":{}}],["starting",{"_index":332,"title":{},"body":{"classes/Graph.html":{}}}],["statements",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":295,"title":{},"body":{"classes/Graph.html":{}}}],["statuscode",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["steps",{"_index":707,"title":{},"body":{"index.html":{}}}],["stops",{"_index":486,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"injectables/AirportsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"classes/Graph.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"injectables/RoutesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":345,"title":{},"body":{"classes/Graph.html":{}}}],["super(`invalid",{"_index":537,"title":{},"body":{"classes/InvalidIataError.html":{}}}],["super(customprioritycomparator",{"_index":546,"title":{},"body":{"classes/MinHeap.html":{}}}],["super(data",{"_index":60,"title":{},"body":{"classes/AirportRepository.html":{},"classes/RouteRepository.html":{}}}],["super(message",{"_index":529,"title":{},"body":{"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{}}}],["support",{"_index":723,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":724,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":687,"title":{},"body":{"index.html":{}}}],["t",{"_index":266,"title":{},"body":{"classes/GenericRepository.html":{},"interfaces/IGenericRepository.html":{}}}],["table",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":641,"title":{},"body":{"index.html":{}}}],["test",{"_index":701,"title":{},"body":{"index.html":{}}}],["test:covfuture",{"_index":706,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":705,"title":{},"body":{"index.html":{}}}],["tests",{"_index":703,"title":{},"body":{"index.html":{}}}],["this._data",{"_index":268,"title":{},"body":{"classes/GenericRepository.html":{},"classes/RouteRepository.html":{}}}],["this._data.get(iata",{"_index":62,"title":{},"body":{"classes/AirportRepository.html":{}}}],["this._graph",{"_index":440,"title":{},"body":{"injectables/GraphService.html":{}}}],["this._maxlegs",{"_index":438,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.adjacencylist.get(iata",{"_index":356,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.has(iata",{"_index":355,"title":{},"body":{"classes/Graph.html":{}}}],["this.adjacencylist.set(iata",{"_index":358,"title":{},"body":{"classes/Graph.html":{}}}],["this.airports",{"_index":219,"title":{},"body":{"injectables/DataService.html":{}}}],["this.airportsservice.findone(dest",{"_index":408,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.airportsservice.findone(iata",{"_index":91,"title":{},"body":{"controllers/AirportsController.html":{}}}],["this.airportsservice.findone(src",{"_index":407,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.appservice.gethello",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dataservice.airports.get(iata",{"_index":120,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.airports.getall",{"_index":119,"title":{},"body":{"injectables/AirportsService.html":{}}}],["this.dataservice.routes.getall",{"_index":582,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.dest",{"_index":241,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.distance",{"_index":242,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.graphservice.findshortestpath",{"_index":410,"title":{},"body":{"controllers/GraphController.html":{}}}],["this.httpadapterhost",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.previousedge",{"_index":247,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.routes",{"_index":221,"title":{},"body":{"injectables/DataService.html":{}}}],["this.routesservice.findallforairport(iata",{"_index":570,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.src",{"_index":240,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["this.totaldistance",{"_index":248,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{}}}],["throw",{"_index":63,"title":{},"body":{"classes/AirportRepository.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{}}}],["time",{"_index":322,"title":{},"body":{"classes/Graph.html":{}}}],["timestamp",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timezone",{"_index":478,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["tll",{"_index":694,"title":{},"body":{"index.html":{}}}],["tool",{"_index":661,"title":{},"body":{"index.html":{}}}],["totaldistance",{"_index":245,"title":{},"body":{"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/Graph.html":{}}}],["totaldistanceinkm",{"_index":451,"title":{},"body":{"injectables/GraphService.html":{},"interfaces/IShortestPathResult.html":{},"index.html":{}}}],["true",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":406,"title":{},"body":{"controllers/GraphController.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/Airport.html":{},"classes/AirportRepository.html":{},"controllers/AirportsController.html":{},"injectables/AirportsService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/Edge.html":{},"classes/EdgeTracker.html":{},"classes/FindAirportDto.html":{},"classes/FindPathDto.html":{},"classes/FindRouteDto.html":{},"classes/GenericRepository.html":{},"injectables/GeolibService.html":{},"classes/Graph.html":{},"controllers/GraphController.html":{},"injectables/GraphService.html":{},"interfaces/IAirport.html":{},"interfaces/IConfig.html":{},"interfaces/IDataServices.html":{},"interfaces/IGenericRepository.html":{},"interfaces/IRoute.html":{},"interfaces/IShortestPathResult.html":{},"classes/IataNotFoundException.html":{},"classes/IataNotProvidedException.html":{},"classes/InvalidIataError.html":{},"classes/MinHeap.html":{},"classes/PathNotFound.html":{},"classes/PathNotFoundException.html":{},"classes/Route.html":{},"classes/RouteRepository.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":734,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":273,"title":{},"body":{"classes/GenericRepository.html":{}}}],["tzdatabase",{"_index":477,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"classes/GenericRepository.html":{}}}],["unique",{"_index":306,"title":{},"body":{"classes/Graph.html":{}}}],["unit",{"_index":702,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":732,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":275,"title":{},"body":{"classes/GenericRepository.html":{}}}],["usage",{"_index":686,"title":{},"body":{"index.html":{}}}],["use",{"_index":671,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":646,"title":{},"body":{"index.html":{}}}],["v",{"_index":325,"title":{},"body":{"classes/Graph.html":{}}}],["v16.16.0",{"_index":664,"title":{},"body":{"index.html":{}}}],["validation",{"_index":712,"title":{},"body":{"index.html":{}}}],["value",{"_index":299,"title":{},"body":{"classes/Graph.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":738,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":276,"title":{},"body":{"classes/GenericRepository.html":{}}}],["version",{"_index":662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertex",{"_index":304,"title":{},"body":{"classes/Graph.html":{}}}],["vertices",{"_index":313,"title":{},"body":{"classes/Graph.html":{}}}],["visitedverticesheap",{"_index":368,"title":{},"body":{"classes/Graph.html":{}}}],["visitedverticesheap.init(initialdistances",{"_index":369,"title":{},"body":{"classes/Graph.html":{}}}],["visitedverticesheap.isempty",{"_index":372,"title":{},"body":{"classes/Graph.html":{}}}],["visitedverticesheap.poll",{"_index":375,"title":{},"body":{"classes/Graph.html":{}}}],["visitedverticesheap.replace([start",{"_index":371,"title":{},"body":{"classes/Graph.html":{}}}],["visiting",{"_index":343,"title":{},"body":{"classes/Graph.html":{}}}],["visualize",{"_index":341,"title":{},"body":{"classes/Graph.html":{}}}],["visualizepath",{"_index":297,"title":{},"body":{"classes/Graph.html":{}}}],["visualizepath(src",{"_index":338,"title":{},"body":{"classes/Graph.html":{}}}],["void",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Graph.html":{}}}],["watch",{"_index":681,"title":{},"body":{"index.html":{}}}],["way",{"_index":636,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":311,"title":{},"body":{"classes/Graph.html":{}}}],["world",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":99,"title":{},"body":{"modules/AirportsModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphModule.html":{},"modules/RoutesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdjacencyList.html":{"url":"classes/AdjacencyList.html","title":"class - AdjacencyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdjacencyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/adjacency-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport class AdjacencyList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Airport.html":{"url":"classes/Airport.html","title":"class - Airport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Airport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/airport.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IAirport\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airportID\n                            \n                            \n                                iata\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/airport.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport } from '../interfaces/airport.interface';\n\nexport class Airport implements IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirportRepository.html":{"url":"classes/AirportRepository.html","title":"class - AirportRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirportRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/airport.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IAirportMap)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/airport.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { GenericRepository } from './generic.repository';\nimport { InvalidIataError } from '@database/errors';\nimport { Airport } from '@database/entities/airport.entity';\n\nexport class AirportRepository extends GenericRepository {\n  _data: IAirportMap;\n\n  constructor(data: IAirportMap) {\n    super(data);\n  }\n\n  get(iata: string): IAirport {\n    const airport = this._data.get(iata);\n    if (!airport) {\n      throw new InvalidIataError(iata);\n    }\n    return airport;\n  }\n\n  getAll(): IAirport[] {\n    return Array.from(this._data.values());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AirportsController.html":{"url":"controllers/AirportsController.html","title":"controller - AirportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AirportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/controllers/airports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                airports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindAirportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/airports/controllers/airports.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindAirportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { AirportsService } from '@modules/airports/services/airports.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\nimport { FindAirportDto } from '@modules/airports/dto/airports.dto';\n\n@Controller('airports')\nexport class AirportsController {\n  constructor(private airportsService: AirportsService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindAirportDto): IAirport {\n    const iata = params.iata;\n    return this.airportsService.findOne(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AirportsModule.html":{"url":"modules/AirportsModule.html","title":"module - AirportsModule","body":"\n                   \n\n\n\n\n    Modules\n    AirportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/airports/airports.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AirportsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AirportsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AirportsService } from './services/airports.service';\nimport { AirportsController } from '@modules/airports/controllers/airports.controller';\n\n@Module({\n  controllers: [AirportsController],\n  providers: [AirportsService],\n  exports: [AirportsService],\n})\nexport class AirportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirportsService.html":{"url":"injectables/AirportsService.html","title":"injectable - AirportsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AirportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/services/airports.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/airports/services/airports.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAirport[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/airports/services/airports.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAirport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DataService } from '@database/services/data-service.service';\nimport { IAirport } from '@database/interfaces/airport.interface';\n\n@Injectable()\nexport class AirportsService {\n  constructor(private dataService: DataService) {}\n\n  findAll(): IAirport[] {\n    return this.dataService.airports.getAll();\n  }\n\n  findOne(iata: string): IAirport {\n    return this.dataService.airports.get(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exception.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      exception: exception.toString(),\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nGraphModule\n\nGraphModule\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\n\nimport { CommonModule } from '@common/common.module';\nimport { GraphModule } from '@modules/graph/graph.module';\nimport { DatabaseModule } from '@database/database.module';\nimport configuration from '@config/configuration';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, load: [configuration] }),\n    CommonModule,\n    AirportsModule,\n    RoutesModule,\n    GraphModule,\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nGeolibService \n\nGeolibService \n\n\n\nCommonModule\n\nCommonModule\n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolibService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GeolibService } from './services/geolib/geolib.service';\n\n@Global()\n@Module({\n  providers: [GeolibService],\n  exports: [GeolibService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/services/data-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airports\n                            \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(airportData: IAirportMap, routeData: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/services/data-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        airportData\n                                                  \n                                                        \n                                                                        IAirportMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeData\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IGenericRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/database/services/data-service.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IDataServices } from '../interfaces/data-service.interface';\nimport { IGenericRepository } from '../interfaces/generic-repository.interface';\nimport { IAirport, IAirportMap } from '../interfaces/airport.interface';\nimport { IRoute } from '../interfaces/route.interface';\nimport { AirportRepository } from '../repositories/airport.repository';\nimport { RouteRepository } from '../repositories/route.repository';\n\n@Injectable()\nexport class DataService implements IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n\n  constructor(\n    @Inject('AIRPORTS_DATA')\n    private airportData: IAirportMap,\n    @Inject('ROUTES_DATA')\n    private routeData: IRoute[],\n  ) {\n    this.airports = new AirportRepository(this.airportData);\n    this.routes = new RouteRepository(this.routeData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDataService \n\nDataService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { DataService } from './services/data-service.service';\nimport { AirportsDataProvider } from '@database/providers/airport.provider';\nimport { RoutesDataProvider } from '@database/providers/route.provider';\n\n@Global()\n@Module({\n  providers: [DataService, AirportsDataProvider, RoutesDataProvider],\n  exports: [DataService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                distance\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(src: string, dest: string, distance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dest\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        distance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EdgeTracker.html":{"url":"classes/EdgeTracker.html","title":"class - EdgeTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EdgeTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/edge.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousEdge\n                            \n                            \n                                totalDistance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(previousEdge: Edge, totalDistance: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousEdge\n                                                  \n                                                        \n                                                                        Edge\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalDistance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousEdge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Edge\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDistance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/edge.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Edge {\n  src: string;\n  dest: string;\n  distance: number;\n\n  constructor(src: string, dest: string, distance: number) {\n    this.src = src;\n    this.dest = dest;\n    this.distance = distance;\n  }\n}\n\nexport class EdgeTracker {\n  previousEdge: Edge;\n  totalDistance: number;\n\n  constructor(previousEdge: Edge, totalDistance: number) {\n    this.previousEdge = previousEdge;\n    this.totalDistance = totalDistance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAirportDto.html":{"url":"classes/FindAirportDto.html","title":"class - FindAirportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAirportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/airports/dto/airports.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/airports/dto/airports.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindAirportDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPathDto.html":{"url":"classes/FindPathDto.html","title":"class - FindPathDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPathDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/dto/graph.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dest\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/dto/graph.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindPathDto {\n  @ApiProperty()\n  src: string;\n\n  @ApiProperty()\n  dest: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindRouteDto.html":{"url":"classes/FindRouteDto.html","title":"class - FindRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/dto/routes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routes/dto/routes.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FindRouteDto {\n  @ApiProperty()\n  iata: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericRepository.html":{"url":"classes/GenericRepository.html","title":"class - GenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/generic.repository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGenericRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: RawData)\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/generic.repository.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    RawData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RawData\n\n                    \n                \n                    \n                        \n                                Defined in src/database/repositories/generic.repository.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/repositories/generic.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IGenericRepository } from '../interfaces/generic-repository.interface';\n\nexport class GenericRepository implements IGenericRepository {\n  _data: RawData;\n\n  constructor(data: RawData) {\n    this._data = data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  get(iata: string): T {\n    return undefined;\n  }\n\n  getAll(): T[] {\n    return [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolibService.html":{"url":"injectables/GeolibService.html","title":"injectable - GeolibService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolibService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/geolib/geolib.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistanceInKm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDistanceInKm\n                        \n                    \n                \n            \n            \n                \ngetDistanceInKm(from: GeolibInputCoordinates, to: GeolibInputCoordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/geolib/geolib.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                            GeolibInputCoordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { convertDistance, getDistance } from 'geolib';\nimport { GeolibInputCoordinates } from 'geolib/es/types';\n\n@Injectable()\nexport class GeolibService {\n  getDistanceInKm(\n    from: GeolibInputCoordinates,\n    to: GeolibInputCoordinates,\n  ): number {\n    const distance = getDistance(from, to);\n    const distanceInKm = convertDistance(distance, 'km');\n\n    return Number(distanceInKm.toFixed(3));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/graph.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjacencyList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEdge\n                            \n                            \n                                    Static\n                                Dijkstra\n                            \n                            \n                                    Static\n                                VisualizePath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adjacencyList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdjacencyList\n\n                    \n                \n                \n                    \n                        Default value : new AdjacencyList()\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/models/graph.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEdge\n                        \n                    \n                \n            \n            \n                \naddEdge(iata: string, edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:15\n                \n            \n\n\n            \n                \n                    Add an edge to a vertex\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An unique IATA code which is represented as vertex\n\n                                    \n                                \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A flight connection which is represented as weighted edge between vertices\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Dijkstra\n                        \n                    \n                \n            \n            \n                \n                    \n                    Dijkstra(adjacencyList: AdjacencyList, start: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:32\n                \n            \n\n\n            \n                \n                    Dijkstra's algorithm implementation. O((V+E) * log(V)) time | O(V) space - where V is the number of vertices and E is the number of edges in the graph\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    adjacencyList\n                                    \n                                                AdjacencyList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An adjacency list representation of airports & routes\n\n                                    \n                                \n                                \n                                    start\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An IATA code which represent starting vertex of Dijkstra's algorithm\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MinDistanceList\n\n                    \n                    \n                        A map contains the shortest distance from the source airport to each airport & its edge history\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        VisualizePath\n                        \n                    \n                \n            \n            \n                \n                    \n                    VisualizePath(src: string, sortedEdges: Edge[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/models/graph.model.ts:100\n                \n            \n\n\n            \n                \n                    Visualize path in string representation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An IATA code of source airport\n\n                                    \n                                \n                                \n                                    sortedEdges\n                                    \n                                                Edge[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A List of sorted edges in visiting order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Representation of path, such as \"A -> B -> C -> D\"\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\nimport { AdjacencyList } from '@modules/graph/models/adjacency-list.model';\nimport { HeapItem, MinHeap } from '@modules/graph/models/min-heap.model';\nimport { MinDistanceList } from '@modules/graph/models/min-distance-list.model';\n\nexport class Graph {\n  adjacencyList: AdjacencyList = new AdjacencyList();\n\n  /**\n   * @description\n   * Add an edge to a vertex\n   * @param iata An unique IATA code which is represented as vertex\n   * @param edge A flight connection which is represented as weighted edge between vertices\n   */\n  addEdge(iata: string, edge: Edge): void {\n    if (this.adjacencyList.has(iata)) {\n      const edges = this.adjacencyList.get(iata);\n      edges.push(edge);\n      this.adjacencyList.set(iata, edges);\n    } else {\n      this.adjacencyList.set(iata, [edge]);\n    }\n  }\n\n  /**\n   * @description\n   * Dijkstra's algorithm implementation. O((V+E) * log(V)) time | O(V) space - where V is the number of vertices and E is the number of edges in the graph\n   * @param adjacencyList An adjacency list representation of airports & routes\n   * @param start An IATA code which represent starting vertex of Dijkstra's algorithm\n   * @return {MinDistanceList} A map contains the shortest distance from the source airport to each airport & its edge history\n   */\n  static Dijkstra(\n    adjacencyList: AdjacencyList,\n    start: string,\n  ): MinDistanceList {\n    const shortestPaths = new MinDistanceList();\n    const initialDistances: HeapItem[] = [];\n\n    // O(V)\n    for (const iata of adjacencyList.keys()) {\n      shortestPaths.set(iata, {\n        totalDistance: Infinity,\n        previousEdge: null,\n      });\n      initialDistances.push([iata, Infinity]);\n    }\n\n    shortestPaths.set(start, {\n      totalDistance: 0,\n      previousEdge: null,\n    });\n\n    const visitedVerticesHeap = new MinHeap();\n\n    // O(V)\n    visitedVerticesHeap.init(initialDistances);\n\n    // O(log(V))\n    visitedVerticesHeap.replace([start, 0]);\n\n    // O(V)\n    while (!visitedVerticesHeap.isEmpty()) {\n      // O(1)\n      const [vertex, currentMinDistance] = visitedVerticesHeap.poll();\n\n      if (currentMinDistance === Infinity) {\n        break;\n      }\n\n      const edges = adjacencyList.get(vertex);\n\n      // O(E)\n      for (const edge of edges) {\n        const { dest, distance } = edge;\n\n        const currentDistance = currentMinDistance + distance;\n        const currentPath = shortestPaths.get(dest);\n\n        if (currentDistance  B -> C -> D\"\n   */\n  static VisualizePath(src: string, sortedEdges: Edge[]): string {\n    return `${src} -> ${sortedEdges.map((edges) => edges.dest).join(' -> ')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphController.html":{"url":"controllers/GraphController.html","title":"controller - GraphController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/controllers/graph.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                graph\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findPath\n                        \n                    \n                \n            \n            \n                \nfindPath(query: FindPathDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/graph/controllers/graph.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindPathDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { GraphService } from '@modules/graph/services/graph.service';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\nimport { FindPathDto } from '@modules/graph/dto/graph.dto';\nimport { AirportsService } from '@modules/airports/services/airports.service';\nimport {\n  IataNotFoundException,\n  IataNotProvidedException,\n  PathNotFoundException,\n} from '@modules/graph/errors';\n\n@Controller('graph')\nexport class GraphController {\n  constructor(\n    private graphService: GraphService,\n    private airportsService: AirportsService,\n  ) {}\n\n  @Get()\n  findPath(@Query() query: FindPathDto): IShortestPathResult {\n    const { src, dest } = query;\n\n    if (!src || !dest) {\n      throw new IataNotProvidedException(\n        'Please provide both src & dest IATA code in query',\n      );\n    }\n\n    let srcAirport,\n      destAirport = null;\n    try {\n      srcAirport = this.airportsService.findOne(src);\n      destAirport = this.airportsService.findOne(dest);\n    } catch (e) {\n      throw new IataNotFoundException(e.message);\n    }\n\n    try {\n      return this.graphService.findShortestPath(\n        srcAirport.iata,\n        destAirport.iata,\n      );\n    } catch (e) {\n      throw new PathNotFoundException(e.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphModule.html":{"url":"modules/GraphModule.html","title":"module - GraphModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_imports\n\n\n\n\nAirportsModule\n\nAirportsModule\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/graph/graph.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AirportsModule\n                        \n                        \n                            RoutesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GraphService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphService } from './services/graph.service';\n\nimport { AirportsModule } from '@modules/airports/airports.module';\nimport { RoutesModule } from '@modules/routes/routes.module';\nimport { GraphController } from '@modules/graph/controllers/graph.controller';\nimport { GraphProvider } from '@modules/graph/providers/graph.provider';\n\n@Module({\n  providers: [GraphService, GraphProvider],\n  controllers: [GraphController],\n  imports: [AirportsModule, RoutesModule],\n  exports: [GraphService, GraphProvider],\n})\nexport class GraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphService.html":{"url":"injectables/GraphService.html","title":"injectable - GraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/services/graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _graph\n                            \n                            \n                                    Private\n                                    Readonly\n                                _maxLegs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findShortestPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graph, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/services/graph.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findShortestPath\n                        \n                    \n                \n            \n            \n                \nfindShortestPath(src: string, dest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/graph/services/graph.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IShortestPathResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _graph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Graph\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _maxLegs\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/modules/graph/services/graph.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Graph } from '@modules/graph/models/graph.model';\nimport { Edge } from '@modules/graph/models/edge.model';\nimport { IShortestPathResult } from '@modules/graph/interfaces/graph.interface';\nimport { PathNotFound } from '@modules/graph/errors';\n\n@Injectable()\nexport class GraphService {\n  private readonly _maxLegs;\n  private readonly _graph: Graph;\n\n  constructor(\n    @Inject('GRAPH_DATA') graph,\n    private configService: ConfigService,\n  ) {\n    this._maxLegs = configService.get('maxLegs');\n    this._graph = graph;\n  }\n\n  findShortestPath(src: string, dest: string): IShortestPathResult {\n    const mimDistances = Graph.Dijkstra(this._graph.adjacencyList, src);\n    const shortestPathToDest = mimDistances.get(dest);\n    const edges: Edge[] = [];\n\n    let previousEdge = shortestPathToDest.previousEdge;\n\n    while (edges.length  0 && sortedEdges[0].src !== src) {\n      throw new PathNotFound(\n        `Path from ${src} to ${dest} could not be found for less than ${this._maxLegs} layovers`,\n      );\n    }\n\n    return {\n      totalDistanceInKm: shortestPathToDest.totalDistance,\n      path: Graph.VisualizePath(src, sortedEdges),\n      edges: sortedEdges,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAirport.html":{"url":"interfaces/IAirport.html","title":"interface - IAirport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAirport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/airport.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airportID\n                                        \n                                \n                                \n                                        \n                                            iata\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iata:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAirport {\n  airportID: string;\n  iata: string;\n  latitude: number;\n  longitude: number;\n}\n\nexport type IAirportMap = Map;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/generateJson.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colParser\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colParser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colParser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as csv from 'csvtojson';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { CellParser, ColumnParam } from 'csvtojson/v2/Parameters';\n\ninterface IConfig {\n  filename: string;\n  colParser: { [key: string]: string | CellParser | ColumnParam };\n  headers: string[];\n}\nconst CONIFGS: IConfig[] = [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n];\n\nconst DATA_DIR = path.join(__dirname, '..', 'data');\nconst DATABASE_DATA_DIR = path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n);\nexport const getJsonFromCSVFile = async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n};\n\nconst conversion = CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n});\n\nPromise.all(conversion).then(() => console.log('done'));\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataServices.html":{"url":"interfaces/IDataServices.html","title":"interface - IDataServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDataServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/data-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airports\n                                        \n                                \n                                \n                                        \n                                            routes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airports:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     IGenericRepository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGenericRepository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IGenericRepository } from './generic-repository.interface';\nimport { IAirport } from './airport.interface';\nimport { IRoute } from './route.interface';\n\nexport interface IDataServices {\n  airports: IGenericRepository;\n  routes: IGenericRepository;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenericRepository.html":{"url":"interfaces/IGenericRepository.html","title":"interface - IGenericRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenericRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/generic-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/interfaces/generic-repository.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IGenericRepository {\n  getAll(): T[];\n  get(iata: string): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoute.html":{"url":"interfaces/IRoute.html","title":"interface - IRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinationAirport\n                                        \n                                \n                                \n                                        \n                                            destinationAirportID\n                                        \n                                \n                                \n                                        \n                                            sourceAirport\n                                        \n                                \n                                \n                                        \n                                            sourceAirportID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destinationAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinationAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceAirportID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceAirportID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IShortestPathResult.html":{"url":"interfaces/IShortestPathResult.html","title":"interface - IShortestPathResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IShortestPathResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/interfaces/graph.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            totalDistanceInKm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDistanceInKm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalDistanceInKm:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge } from '@modules/graph/models/edge.model';\n\nexport interface IShortestPathResult {\n  totalDistanceInKm: number;\n  path: string;\n  edges: Edge[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IataNotFoundException.html":{"url":"classes/IataNotFoundException.html","title":"class - IataNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IataNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IataNotProvidedException.html":{"url":"classes/IataNotProvidedException.html","title":"class - IataNotProvidedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IataNotProvidedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIataError.html":{"url":"classes/InvalidIataError.html","title":"class - InvalidIataError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIataError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iata: string)\n                    \n                \n                        \n                            \n                                Defined in src/database/errors/index.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iata\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidIataError extends Error {\n  constructor(iata: string) {\n    super(`Invalid IATA Code: ${iata}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinDistanceList.html":{"url":"classes/MinDistanceList.html","title":"class - MinDistanceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinDistanceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-distance-list.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EdgeTracker } from '@modules/graph/models/edge.model';\n\nexport class MinDistanceList extends Map {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinHeap.html":{"url":"classes/MinHeap.html","title":"class - MinHeap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinHeap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/models/min-heap.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Heap\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/models/min-heap.model.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Heap from 'heap-js';\n\nexport type HeapItem = [string, number];\n\nconst customPriorityComparator = (a: HeapItem, b: HeapItem) => a[1] - b[1];\n\nexport class MinHeap extends Heap {\n  constructor() {\n    super(customPriorityComparator);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PathNotFound.html":{"url":"classes/PathNotFound.html","title":"class - PathNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PathNotFoundException.html":{"url":"classes/PathNotFoundException.html","title":"class - PathNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/graph/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/graph/errors/index.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class IataNotProvidedException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class IataNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 422);\n  }\n}\n\nexport class PathNotFoundException extends HttpException {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class PathNotFound extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/route.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRoute\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destinationAirport\n                            \n                            \n                                destinationAirportID\n                            \n                            \n                                sourceAirport\n                            \n                            \n                                sourceAirportID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceAirportID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/database/entities/route.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRoute } from '../interfaces/route.interface';\n\nexport class Route implements IRoute {\n  sourceAirport: string;\n  sourceAirportID: string;\n  destinationAirport: string;\n  destinationAirportID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteRepository.html":{"url":"classes/RouteRepository.html","title":"class - RouteRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repositories/route.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GenericRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: IRoute[])\n                    \n                \n                        \n                            \n                                Defined in src/database/repositories/route.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IRoute[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRoute[]\n\n                    \n                \n                        \n                            \n                                Inherited from         GenericRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         GenericRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(iata: string)\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Inherited from         GenericRepository\n\n                \n            \n            \n                \n                        Defined in         GenericRepository:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IRoute[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { IRoute } from '../interfaces/route.interface';\nimport { GenericRepository } from './generic.repository';\nimport { Route } from '@database/entities/route.entity';\n\nexport class RouteRepository extends GenericRepository {\n  _data: IRoute[];\n\n  constructor(data: IRoute[]) {\n    super(data);\n  }\n\n  get(iata: string): IRoute {\n    return _.find(this._data, (o) => o.sourceAirport === iata);\n  }\n\n  getAll(): IRoute[] {\n    return this._data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutesController.html":{"url":"controllers/RoutesController.html","title":"controller - RoutesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/controllers/routes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                routes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindRouteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':iata')\n                \n            \n\n            \n                \n                    Defined in src/modules/routes/controllers/routes.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { RoutesService } from '@modules/routes/services/routes.service';\nimport { IRoute } from '@database/interfaces/route.interface';\nimport { FindRouteDto } from '@modules/routes/dto/routes.dto';\n\n@Controller('routes')\nexport class RoutesController {\n  constructor(private routesService: RoutesService) {}\n\n  @Get(':iata')\n  findOne(@Param() params: FindRouteDto): IRoute[] {\n    const iata = params.iata;\n    return this.routesService.findAllForAirport(iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nRoutesService \n\nRoutesService \n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { RoutesService } from './services/routes.service';\nimport { RoutesController } from '@modules/routes/controllers/routes.controller';\n\n@Module({\n  providers: [RoutesService],\n  controllers: [RoutesController],\n  exports: [RoutesService],\n})\nexport class RoutesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutesService.html":{"url":"injectables/RoutesService.html","title":"injectable - RoutesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routes/services/routes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllForAirport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/routes/services/routes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllForAirport\n                        \n                    \n                \n            \n            \n                \nfindAllForAirport(iata: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/routes/services/routes.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iata\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IRoute[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { Injectable } from '@nestjs/common';\nimport { DataService } from '@database/services/data-service.service';\nimport { IRoute } from '@database/interfaces/route.interface';\n\n@Injectable()\nexport class RoutesService {\n  constructor(private dataService: DataService) {}\n\n  findAllForAirport(iata: string): IRoute[] {\n    const routes = this.dataService.routes.getAll();\n    return _.filter(routes, (data) => data.sourceAirport === iata);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                scripts/generateJson.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            CONIFGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            conversion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            DATABASE_DATA_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                scripts/generateJson.ts\n            \n            variable\n            getJsonFromCSVFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/geolib/geolib.service.ts\n            \n            injectable\n            GeolibService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/entities/airport.entity.ts\n            \n            class\n            Airport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/entities/route.entity.ts\n            \n            class\n            Route\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/errors/index.ts\n            \n            class\n            InvalidIataError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/interfaces/airport.interface.ts\n            \n            interface\n            IAirport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/interfaces/data-service.interface.ts\n            \n            interface\n            IDataServices\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/generic-repository.interface.ts\n            \n            interface\n            IGenericRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/interfaces/route.interface.ts\n            \n            interface\n            IRoute\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            AirportsDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/airport.provider.ts\n            \n            variable\n            map\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/route.provider.ts\n            \n            variable\n            RoutesDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/repositories/airport.repository.ts\n            \n            class\n            AirportRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/generic.repository.ts\n            \n            class\n            GenericRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/repositories/route.repository.ts\n            \n            class\n            RouteRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/services/data-service.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/airports/controllers/airports.controller.ts\n            \n            controller\n            AirportsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/dto/airports.dto.ts\n            \n            class\n            FindAirportDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/airports/services/airports.service.ts\n            \n            injectable\n            AirportsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/controllers/graph.controller.ts\n            \n            controller\n            GraphController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/dto/graph.dto.ts\n            \n            class\n            FindPathDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            IataNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            IataNotProvidedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            PathNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/errors/index.ts\n            \n            class\n            PathNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/interfaces/graph.interface.ts\n            \n            interface\n            IShortestPathResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/adjacency-list.model.ts\n            \n            class\n            AdjacencyList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/graph/models/edge.model.ts\n            \n            class\n            EdgeTracker\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/graph/models/fixtures/adjacencyList.ts\n            \n            variable\n            adjList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/graph.model.ts\n            \n            class\n            Graph\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-distance-list.model.ts\n            \n            class\n            MinDistanceList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            class\n            MinHeap\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/graph/models/min-heap.model.ts\n            \n            variable\n            customPriorityComparator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/providers/graph.provider.ts\n            \n            variable\n            GraphProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/graph/services/graph.service.ts\n            \n            injectable\n            GraphService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/routes/controllers/routes.controller.ts\n            \n            controller\n            RoutesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/dto/routes.dto.ts\n            \n            class\n            FindRouteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routes/services/routes.service.ts\n            \n            injectable\n            RoutesService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.4\n        \n            csv-parse : ^5.3.0\n        \n            geolib : ^3.3.3\n        \n            hbs : ^4.2.0\n        \n            heap-js : ^2.2.0\n        \n            lodash : ^4.17.21\n        \n            lowdb : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nThis repository is intended to demonstrate a way of finding the shortest path from one airport to another (complete task description).The main business logic for finding the shortest path using Dijkstra's algorithm which is implemented at graph.model.ts.\nAn implementation doc can be found at Graph\nReferences\n\nApp documentation: https://mihara0320.github.io/airplane-router/\nDatasource: https://openflights.org/data.html\nDocumentation: https://mihara0320.github.io/airplane-router/\nDijkstra's Algorithm: https://www.geeksforgeeks.org/dijkstras-algorithm-for-adjacency-list-representation-greedy-algo-8/\n\nPrerequisites\n\n\n\nTool\nVersion\n\n\n\n\nnode.js\nv16.16.0\n\n\n\nOfficial Installer\nhttps://nodejs.org/download/release/v16.16.0/\nUsing nvm\n$ nvm install 16.16.0\n$ nvm use 16.16.0Using asdf\n$ asdf install nodejs 16.16.0\n$ asdf local nodejs 16.16.0Installation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodAPI Usage\nSwagger Documentation\nhttp://localhost:3000/swaggerMain API: Get the shortest path between airports\nRequest Example\nhttp://localhost:3000/graph?src=TLL&dest=HNDResponse Example\n{\n  \"totalDistanceInKm\": 8151.866,\n  \"path\": \"TLL -> HEL -> NGO -> HND\",\n  \"edges\": [\n    {\n      \"src\": \"TLL\",\n      \"dest\": \"HEL\",\n      \"distance\": 100.886\n    },\n    {\n      \"src\": \"HEL\",\n      \"dest\": \"NGO\",\n      \"distance\": 7769.583\n    },\n    {\n      \"src\": \"NGO\",\n      \"dest\": \"HND\",\n      \"distance\": 281.397\n    }\n  ]\n}Test\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covFuture Steps\n\nImprove format & lint rules\nImprove data validation & custom errors\nImprove test coverage\nExtend the app so that it covers the bonus task\nContainerize application\nMove data to database / cache\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AirportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AirportsModule\n\n\n\ncluster_AirportsModule_exports\n\n\n\ncluster_AirportsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_GraphModule\n\n\n\ncluster_GraphModule_exports\n\n\n\ncluster_GraphModule_providers\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_exports\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nAirportsService \n\nAirportsService \n\n\n\nAirportsModule\n\nAirportsModule\n\nAirportsService  -->\n\nAirportsModule->AirportsService \n\n\n\n\n\nGraphModule\n\nGraphModule\n\nGraphModule -->\n\nAirportsModule->GraphModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirportsModule->AppModule\n\n\n\n\n\nAirportsService\n\nAirportsService\n\nAirportsModule -->\n\nAirportsService->AirportsModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nGeolibService \n\nGeolibService \n\nGeolibService  -->\n\nCommonModule->GeolibService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDatabaseModule->DataService \n\n\n\nAppModule -->\n\nGraphModule->AppModule\n\n\n\n\n\nGraphService \n\nGraphService \n\nGraphService  -->\n\nGraphModule->GraphService \n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nGraphModule -->\n\nRoutesModule->GraphModule\n\n\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nRoutesService \n\nRoutesService \n\nRoutesService  -->\n\nRoutesModule->RoutesService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGeolibService\n\nGeolibService\n\nCommonModule -->\n\nGeolibService->CommonModule\n\n\n\n\n\nDataService\n\nDataService\n\nDatabaseModule -->\n\nDataService->DatabaseModule\n\n\n\n\n\nGraphService\n\nGraphService\n\nGraphModule -->\n\nGraphService->GraphModule\n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HeapItem   (src/.../min-heap.model.ts)\n                        \n                        \n                            IAirportMap   (src/.../airport.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/graph/models/min-heap.model.ts\n    \n    \n        \n            \n                \n                    \n                    HeapItem\n                \n            \n            \n                \n                        [string, number]\n\n                \n            \n        \n    \n    src/database/interfaces/airport.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IAirportMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adjList   (src/.../adjacencyList.ts)\n                        \n                        \n                            AirportsDataProvider   (src/.../airport.provider.ts)\n                        \n                        \n                            CONIFGS   (scripts/.../generateJson.ts)\n                        \n                        \n                            conversion   (scripts/.../generateJson.ts)\n                        \n                        \n                            customPriorityComparator   (src/.../min-heap.model.ts)\n                        \n                        \n                            DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            DATABASE_DATA_DIR   (scripts/.../generateJson.ts)\n                        \n                        \n                            getJsonFromCSVFile   (scripts/.../generateJson.ts)\n                        \n                        \n                            GraphProvider   (src/.../graph.provider.ts)\n                        \n                        \n                            map   (src/.../airport.provider.ts)\n                        \n                        \n                            RoutesDataProvider   (src/.../route.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/graph/models/fixtures/adjacencyList.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adjList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AdjacencyList()\n                    \n                \n\n\n        \n    \n\n    src/database/providers/airport.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AirportsDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'AIRPORTS_DATA',\n  useValue: map,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAirportMap\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n\n        \n    \n\n    scripts/generateJson.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONIFGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    filename: 'airports',\n    colParser: {\n      airportID: 'string',\n      name: 'omit',\n      city: 'omit',\n      country: 'omit',\n      iata: 'string',\n      icao: 'string',\n      latitude: 'number',\n      longitude: 'number',\n      altitude: 'omit',\n      dst: 'omit',\n      tzDatabase: 'omit',\n      timezone: 'omit',\n      type: 'omit',\n      source: 'omit',\n    },\n    headers: [\n      'airportID',\n      'name',\n      'city',\n      'country',\n      'iata',\n      'icao',\n      'latitude',\n      'longitude',\n      'altitude',\n      'dst',\n      'tzDatabase',\n      'timezone',\n      'type',\n      'source',\n    ],\n  },\n  {\n    filename: 'routes',\n    colParser: {\n      airline: 'omit',\n      airlineID: 'omit',\n      sourceAirport: 'string',\n      sourceAirportID: 'string',\n      destinationAirport: 'string',\n      destinationAirportID: 'string',\n      codeshare: 'omit',\n      stops: 'omit',\n      equipment: 'omit',\n    },\n    headers: [\n      'airline',\n      'airlineID',\n      'sourceAirport',\n      'sourceAirportID',\n      'destinationAirport',\n      'destinationAirportID',\n      'codeshare',\n      'stops',\n      'equipment',\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONIFGS.map(async (config) => {\n  const jsonData = await getJsonFromCSVFile(config);\n\n  await fs.writeFileSync(\n    path.join(DATABASE_DATA_DIR, `${config.filename}.json`),\n    JSON.stringify(jsonData),\n  );\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '..', 'data')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DATA_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  '..',\n  'src',\n  'database',\n  'providers',\n  'data',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonFromCSVFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (config: IConfig) => {\n  return csv({\n    noheader: true,\n    checkType: true,\n    colParser: config.colParser,\n    headers: config.headers,\n  }).fromFile(path.join(DATA_DIR, `${config.filename}.dat`));\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/models/min-heap.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        customPriorityComparator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (a: HeapItem, b: HeapItem) => a[1] - b[1]\n                    \n                \n\n\n        \n    \n\n    src/modules/graph/providers/graph.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'GRAPH_DATA',\n  useFactory: (\n    airportsService: AirportsService,\n    routeService: RoutesService,\n    geolibService: GeolibService,\n  ): Graph => {\n    const graph = new Graph();\n    const airports = airportsService.findAll();\n    airports.forEach((srcAirport) => {\n      const routes = routeService.findAllForAirport(srcAirport.iata);\n      routes.forEach((route) => {\n        let destAirport;\n        try {\n          destAirport = airportsService.findOne(route.destinationAirport);\n        } catch (e) {\n          return;\n        }\n\n        const distance = geolibService.getDistanceInKm(srcAirport, destAirport);\n        const edge = new Edge(srcAirport.iata, destAirport.iata, distance);\n        graph.addEdge(srcAirport.iata, edge);\n      });\n    });\n    return graph;\n  },\n  inject: [AirportsService, RoutesService, GeolibService],\n}\n                    \n                \n\n\n        \n    \n\n    src/database/providers/route.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoutesDataProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'ROUTES_DATA',\n  useValue: data as IRoute[],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
